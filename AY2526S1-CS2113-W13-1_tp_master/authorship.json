[{"path":".github/workflows/gradle.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"name: Java CI","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"on: [push, pull_request]","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"jobs:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  build:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shira421"},"content":"    timeout-minutes: 10","lastModifiedDate":"2025-10-15T10:36:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    strategy:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"      matrix:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"        platform: [ubuntu-latest, macos-latest, windows-latest]","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    runs-on: ${{ matrix.platform }}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    steps:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"      - name: Set up repository","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        uses: actions/checkout@master","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"      - name: Set up repository","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        uses: actions/checkout@master","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        with:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"          ref: master","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"      - name: Merge to master","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        run: git checkout --progress --force ${{ github.sha }}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"      - name: Validate Gradle Wrapper","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        uses: gradle/actions/wrapper-validation@v3","lastModifiedDate":"2025-08-05T01:21:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"      - name: Setup JDK 17","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        uses: actions/setup-java@v4","lastModifiedDate":"2025-08-05T01:21:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        with:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"          distribution: \u0027zulu\u0027","lastModifiedDate":"2025-08-05T01:21:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"          java-version: \u002717\u0027","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"          java-package: jdk+fx","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"      - name: Build and check with Gradle","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        run: ./gradlew check","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"      - name: Install dos2unix on Linux","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        run: sudo apt-get update \u0026\u0026 sudo apt-get install -y dos2unix","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"      - name: Install dos2unix on macOS","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027macOS\u0027","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        run: brew install dos2unix","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"      - name: Perform IO redirection test (*NIX or macOS)","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027 || runner.os \u003d\u003d \u0027macOS\u0027","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        working-directory: ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"        timeout-minutes: 2","lastModifiedDate":"2025-10-15T10:53:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        run: ./runtest.sh","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"      - name: Perform IO redirection test (Windows)","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if: always() \u0026\u0026 runner.os \u003d\u003d \u0027Windows\u0027","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        working-directory: ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"        timeout-minutes: 2","lastModifiedDate":"2025-10-15T10:53:53","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        shell: cmd","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        run: runtest.bat","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false}],"authorContributionMap":{"-":54,"shira421":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17T23:25:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:18:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:18:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"    mainClass.set(\"seedu.zettel.Zettel\")","lastModifiedDate":"2025-10-14T14:45:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gordonajajar"},"content":"    archiveBaseName.set(\"zettel\")","lastModifiedDate":"2025-10-14T14:45:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24T00:28:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29T23:10:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"    jvmArgs \u0027-ea\u0027","lastModifiedDate":"2025-10-15T13:30:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-10-15T13:56:50","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"gordonajajar":2,"shauntsr":1,"danielkwan2004":1,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |             Name             |               Github Profile                | Portfolio ","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JianHao24"},"content":"--------|:----------------------------:|:-------------------------------------------:|:---------:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |         Daniel Kwan          | [Github](https://github.com/danielkwan2004) | [Portfolio](docs/team/danielkwan2004.md)","lastModifiedDate":"2025-10-01T13:39:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Venkatesh Ksheerabthi Nathan |    [Github](https://github.com/shira421)    | [Portfolio](docs/team/shira421.md)","lastModifiedDate":"2025-10-01T13:33:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |       Cheong Jian Hao        |   [Github](https://github.com/JianHao24)    | [Portfolio](docs/team/JianHao24.md)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |         Gordon Hong          |  [Github](https://github.com/gordonajajar)  | [Portfolio](docs/team/gordonajajar.md)","lastModifiedDate":"2025-10-01T13:51:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |          Shaun Tan           |    [Github](https://github.com/shauntsr)    | [Portfolio](docs/team/shauntsr.md)","lastModifiedDate":"2025-10-01T13:51:07","isFullCredit":false}],"authorContributionMap":{"JianHao24":2,"danielkwan2004":1,"-":3,"shira421":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"* **Zettelkasten Method** - Note-taking methodology inspired by Niklas Luhmann\u0027s slip-box system","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"  * [Zettelkasten.de](https://zettelkasten.de/) - Introduction to the Zettelkasten method","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"* **Java NIO File API** - Used for file system operations and storage management","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"  * [Oracle Java Documentation](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/package-summary.html)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"* **Instant class (java.time)** - Used for timestamp management","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"  * [Oracle Java Time API](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/Instant.html)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"### Architecture Overview","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"ZettelCLI follows a layered architecture with clear separation of concerns:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"┌─────────────────┐","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":"│  CLI Interface  │  (User interaction layer - UI)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JianHao24"},"content":"└────────┬────────┘","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JianHao24"},"content":"         │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JianHao24"},"content":"┌────────▼────────┐","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JianHao24"},"content":"│     Parser      │  (Input parsing layer)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JianHao24"},"content":"└────────┬────────┘","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JianHao24"},"content":"         │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JianHao24"},"content":"┌────────▼────────┐","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"│    Commands     │  (Business logic layer)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JianHao24"},"content":"└────────┬────────┘","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JianHao24"},"content":"         │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":"┌────────▼────────┐","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JianHao24"},"content":"│     Storage     │  (Data persistence layer)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JianHao24"},"content":"└─────────────────┘","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JianHao24"},"content":"         │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JianHao24"},"content":"┌────────▼────────┐","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"│      Notes      │  (Data model layer)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"└─────────────────┘","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JianHao24"},"content":"### Main Application Component (Zettel)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JianHao24"},"content":"The `Zettel` class serves as the main entry point and orchestrator for the entire application.","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JianHao24"},"content":"**Key Responsibilities:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JianHao24"},"content":"- Initialize all components (UI, Storage, Parser)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JianHao24"},"content":"- Load existing notes from disk on startup","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JianHao24"},"content":"- Run the main command loop","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JianHao24"},"content":"- Handle graceful shutdown and error recovery","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JianHao24"},"content":"- Auto-save notes after each command","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JianHao24"},"content":"**Main Application Flow:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JianHao24"},"content":"Start → Initialize Storage → Load Notes → Show Welcome","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JianHao24"},"content":"  ↓","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JianHao24"},"content":"Enter Command Loop:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JianHao24"},"content":"  ├─ Read User Input (with timeout)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JianHao24"},"content":"  ├─ Parse Command","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JianHao24"},"content":"  ├─ Execute Command","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JianHao24"},"content":"  ├─ Auto-save Notes","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JianHao24"},"content":"  └─ Loop until Exit","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JianHao24"},"content":"  ↓","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JianHao24"},"content":"Cleanup → Shutdown → Exit","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JianHao24"},"content":"**Class Diagram:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JianHao24"},"content":"┌─────────────────────────┐","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JianHao24"},"content":"│        Zettel           │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JianHao24"},"content":"├─────────────────────────┤","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JianHao24"},"content":"│ - storage: Storage      │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JianHao24"},"content":"│ - notes: ArrayList      │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"│ - ui: UI                │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JianHao24"},"content":"│ - isRunning: boolean    │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JianHao24"},"content":"├─────────────────────────┤","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JianHao24"},"content":"│ + run(): void           │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JianHao24"},"content":"│ + main(String[]): void  │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JianHao24"},"content":"└─────────────────────────┘","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JianHao24"},"content":"**Key Implementation Details:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JianHao24"},"content":"The application uses an ExecutorService with timeout handling to prevent hanging in CI environments:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JianHao24"},"content":"```java","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JianHao24"},"content":"Future\u003cString\u003e future \u003d executor.submit(() -\u003e ui.readCommand());","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JianHao24"},"content":"String userInput \u003d future.get(READ_TIMEOUT_SECONDS, TimeUnit.SECONDS);","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JianHao24"},"content":"Auto-save is implemented after every successful command execution:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JianHao24"},"content":"```java","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JianHao24"},"content":"command.execute(notes, ui, storage);","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JianHao24"},"content":"storage.save(notes);  // Auto-save after each operation","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JianHao24"},"content":"### Parser Component","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JianHao24"},"content":"The `Parser` class converts raw user input strings into executable `Command` objects.","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JianHao24"},"content":"**Key Responsibilities:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JianHao24"},"content":"- Tokenize and validate user input","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JianHao24"},"content":"- Extract command parameters","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JianHao24"},"content":"- Validate parameter formats (note IDs, repo names, etc.)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JianHao24"},"content":"- Create appropriate Command objects","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JianHao24"},"content":"- Throw descriptive exceptions for invalid input","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JianHao24"},"content":"**Supported Commands:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JianHao24"},"content":"- `bye` - Exit the application","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JianHao24"},"content":"- `list [-p]` - List all notes or pinned notes only","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JianHao24"},"content":"- `new -t \u003cTITLE\u003e [-b \u003cBODY\u003e]` - Create a new note","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JianHao24"},"content":"- `delete [-f] \u003cNOTE_ID\u003e` - Delete a note with optional force flag","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JianHao24"},"content":"- `pin \u003cNOTE_ID\u003e` - Pin a note","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JianHao24"},"content":"- `unpin \u003cNOTE_ID\u003e` - Unpin a note","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JianHao24"},"content":"- `init \u003cREPO_NAME\u003e` - Initialize a new repository","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JianHao24"},"content":"- `find \u003cSEARCH_TERM\u003e` - Search for notes","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JianHao24"},"content":"**Validation Rules:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JianHao24"},"content":"Note ID validation:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JianHao24"},"content":"- Must be exactly 8 characters long","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JianHao24"},"content":"- Must contain only lowercase hexadecimal characters (0-9, a-f)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JianHao24"},"content":"- Regex pattern: `^[a-f0-9]{8}$`","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JianHao24"},"content":"Repository name validation:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JianHao24"},"content":"- Must contain only alphanumeric characters, hyphens, and underscores","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JianHao24"},"content":"- Regex pattern: `[a-zA-Z0-9_-]+`","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JianHao24"},"content":"**Parsing Flow Example (New Note Command):**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JianHao24"},"content":"Input: \"new -t My Note -b Some content\"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JianHao24"},"content":"  ↓","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JianHao24"},"content":"Split by spaces: [\"new\", \"-t\", \"My\", \"Note\", \"-b\", \"Some\", \"content\"]","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JianHao24"},"content":"  ↓","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JianHao24"},"content":"Find -t flag index → Extract title: \"My Note\"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JianHao24"},"content":"Find -b flag index → Extract body: \"Some content\"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JianHao24"},"content":"  ↓","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JianHao24"},"content":"Validate title not empty","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JianHao24"},"content":"  ↓","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JianHao24"},"content":"Create NewNoteCommand(title, body)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JianHao24"},"content":"**Error Handling Strategy:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JianHao24"},"content":"The Parser throws three types of exceptions:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JianHao24"},"content":"- `EmptyDescriptionException` - Required parameters are missing","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JianHao24"},"content":"- `InvalidFormatException` - Command format is incorrect","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JianHao24"},"content":"- `InvalidInputException` - Unrecognized command or invalid values","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JianHao24"},"content":"### UI Component","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JianHao24"},"content":"The `UI` class handles all user interaction, including input reading and output display.","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JianHao24"},"content":"**Key Responsibilities:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JianHao24"},"content":"- Display welcome message and command help","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JianHao24"},"content":"- Read user commands from standard input","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JianHao24"},"content":"- Display note lists and search results","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JianHao24"},"content":"- Show confirmation prompts","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JianHao24"},"content":"- Display error messages","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JianHao24"},"content":"- Handle graceful shutdown","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JianHao24"},"content":"**Key Methods:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JianHao24"},"content":"Input Methods:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JianHao24"},"content":"- `readCommand()` - Reads a line of user input with EOF handling","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JianHao24"},"content":"Output Methods:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JianHao24"},"content":"- `showWelcome()` - Displays greeting and available commands","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JianHao24"},"content":"- `showNoteList(List\u003cNote\u003e, boolean)` - Displays formatted note list","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JianHao24"},"content":"- `showAddedNote(Note)` - Confirms note creation","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JianHao24"},"content":"- `showDeleteConfirmation(String, String)` - Prompts for delete confirmation","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JianHao24"},"content":"- `showError(String)` - Displays error messages","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JianHao24"},"content":"- `showBye()` - Displays farewell message","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JianHao24"},"content":"**Display Formats:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JianHao24"},"content":"Note list format:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JianHao24"},"content":"You have 3 notes:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JianHao24"},"content":"    1. my_note.txt 2025-10-14 a1b2c3d4","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JianHao24"},"content":"    2. ideas.txt 2025-10-13 b2c3d4e5","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JianHao24"},"content":"    3. todo.txt 2025-10-12 c3d4e5f6","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JianHao24"},"content":"Welcome message includes command reference for easy access.","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JianHao24"},"content":"### Command Component","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JianHao24"},"content":"The `Command` abstract class defines the interface for all executable commands using the Command Pattern.","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JianHao24"},"content":"**Class Hierarchy:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JianHao24"},"content":"                          Command","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JianHao24"},"content":"                         (abstract)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JianHao24"},"content":"                             │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JianHao24"},"content":"     ┌───────┬───────┬───────┬───────┬───────┬───────┐","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JianHao24"},"content":"     │       │       │       │       │       │       │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JianHao24"},"content":"    New    List   Delete    Pin     Find    Init    Exit","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JianHao24"},"content":"                         (concrete)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JianHao24"},"content":"**Available Commands:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JianHao24"},"content":"1. **NewNoteCommand** - Creates a new note","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JianHao24"},"content":"   - Generates 8-character hash-based ID from title + timestamp","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JianHao24"},"content":"   - Validates filename uniqueness","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JianHao24"},"content":"   - Supports title and optional body","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JianHao24"},"content":"2. **ListNoteCommand** - Lists notes","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JianHao24"},"content":"   - Sorts by creation date (newest first)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JianHao24"},"content":"   - Optional filter for pinned notes only","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JianHao24"},"content":"   - Handles empty list scenarios","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"JianHao24"},"content":"3. **DeleteNoteCommand** - Deletes a note","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"JianHao24"},"content":"   - Validates note existence","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JianHao24"},"content":"   - Optional force flag to skip confirmation","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"JianHao24"},"content":"   - Prompts user for confirmation by default","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"JianHao24"},"content":"4. **PinNoteCommand** - Pins or unpins a note","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"JianHao24"},"content":"   - Validates note ID format","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"JianHao24"},"content":"   - Updates pinned status","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"JianHao24"},"content":"   - Supports both pin and unpin operations","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"JianHao24"},"content":"5. **FindNoteCommand** - Searches notes","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"JianHao24"},"content":"   - Case-insensitive search","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JianHao24"},"content":"   - Searches in note body content","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JianHao24"},"content":"   - Returns all matching notes","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"shauntsr"},"content":"6. **AddTagCommand** - Adds a tag","lastModifiedDate":"2025-10-26T16:03:20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"shauntsr"},"content":"    - Validates that tag does not already exist in `.zettelConfig`","lastModifiedDate":"2025-10-26T16:03:20","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"shauntsr"},"content":"    - Update `.zettelConfig` with added tag","lastModifiedDate":"2025-10-26T16:03:20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"shauntsr"},"content":"    - Displays tag added message","lastModifiedDate":"2025-10-26T16:03:20","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"shauntsr"},"content":"   ","lastModifiedDate":"2025-10-26T16:03:20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"shauntsr"},"content":"7. **TagNoteCommand** - Adds a tag","lastModifiedDate":"2025-10-26T16:03:20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"shauntsr"},"content":"    - Validates that the note does not already have the tag","lastModifiedDate":"2025-10-26T16:03:20","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"shauntsr"},"content":"    - Update `.zettelConfig` with added tag if it does not exist","lastModifiedDate":"2025-10-26T16:03:20","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"shauntsr"},"content":"    - Displays tag added message","lastModifiedDate":"2025-10-26T16:03:20","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T16:03:20","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"shauntsr"},"content":"8. **InitCommand** - Initializes a repository","lastModifiedDate":"2025-10-26T16:03:20","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"JianHao24"},"content":"   - Validates repository name format","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"JianHao24"},"content":"   - Creates repository structure","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"JianHao24"},"content":"   - Displays confirmation message","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"shauntsr"},"content":"9. **ExitCommand** - Exits the application","lastModifiedDate":"2025-10-26T16:03:20","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"JianHao24"},"content":"   - Displays farewell message","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"JianHao24"},"content":"   - Returns true for `isExit()` check","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"danielkwan2004"},"content":"### PinNoteCommand Implementation","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"danielkwan2004"},"content":"**Overview:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"danielkwan2004"},"content":"`PinNoteCommand` provides the ability to mark notes as \"pinned\" for quick access. Pinned notes appear at the top of list views, making them easily accessible for frequently referenced information. The command supports both pinning (`pin \u003cNOTE_ID\u003e`) and unpinning (`unpin \u003cNOTE_ID\u003e`) operations.","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"danielkwan2004"},"content":"**Design Rationale:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"danielkwan2004"},"content":"The implementation uses a four-tier validation strategy to provide clear, specific error messages at each failure point:","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"danielkwan2004"},"content":"1. **Format Validation** - Validates the note ID format before any business logic","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"danielkwan2004"},"content":"2. **Empty List Check** - Ensures there are notes to operate on","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"danielkwan2004"},"content":"3. **Existence Check** - Confirms the specific note exists","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"danielkwan2004"},"content":"4. **State Check** - Prevents redundant operations (pinning already pinned notes, etc.)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"danielkwan2004"},"content":"This layered approach provides users with precise feedback about what went wrong, rather than generic error messages.","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"danielkwan2004"},"content":"**Class Structure:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"danielkwan2004"},"content":"```","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"danielkwan2004"},"content":"┌─────────────────────────────────┐","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"danielkwan2004"},"content":"│      PinNoteCommand             │","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"danielkwan2004"},"content":"├─────────────────────────────────┤","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"danielkwan2004"},"content":"│ - noteId: String                │","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"danielkwan2004"},"content":"│ - isPin: boolean                │","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"danielkwan2004"},"content":"│ - VALID_NOTE_ID_LENGTH: int     │","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"danielkwan2004"},"content":"│ - VALID_NOTE_ID_REGEX: String   │","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"danielkwan2004"},"content":"│ - logger: Logger                │","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"danielkwan2004"},"content":"├─────────────────────────────────┤","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"danielkwan2004"},"content":"│ + PinNoteCommand(String, bool)  │","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"danielkwan2004"},"content":"│ + execute(ArrayList, UI, ...)   │","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"danielkwan2004"},"content":"│ - validateNoteIdFormat(String)  │","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"danielkwan2004"},"content":"└─────────────────────────────────┘","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"danielkwan2004"},"content":"```","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"danielkwan2004"},"content":"**Key Implementation Details:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"danielkwan2004"},"content":"**1. Note ID Format Validation:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"danielkwan2004"},"content":"The command enforces strict note ID format requirements to maintain data integrity:","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"danielkwan2004"},"content":"- Must be exactly 8 characters long","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"danielkwan2004"},"content":"- Must contain only lowercase hexadecimal characters (0-9, a-f)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"danielkwan2004"},"content":"- Uses regex pattern: `^[a-f0-9]{8}$`","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"danielkwan2004"},"content":"This validation is performed in the private `validateNoteIdFormat()` method:","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"danielkwan2004"},"content":"```java","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"danielkwan2004"},"content":"private void validateNoteIdFormat(String noteId) throws InvalidFormatException {","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"danielkwan2004"},"content":"    if (noteId \u003d\u003d null || noteId.length() !\u003d VALID_NOTE_ID_LENGTH) {","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"danielkwan2004"},"content":"        throw new InvalidFormatException(","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"danielkwan2004"},"content":"                \"Note ID must be exactly \" + VALID_NOTE_ID_LENGTH + \" characters long.\");","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"danielkwan2004"},"content":"    if (!noteId.matches(VALID_NOTE_ID_REGEX)) {","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"danielkwan2004"},"content":"        throw new InvalidFormatException(","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"danielkwan2004"},"content":"                \"Note ID must contain only lowercase hexadecimal characters (0-9, a-f).\");","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"danielkwan2004"},"content":"```","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"danielkwan2004"},"content":"**Why this validation exists:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"danielkwan2004"},"content":"- Prevents invalid IDs from reaching the search logic","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"danielkwan2004"},"content":"- Provides immediate feedback for typos or formatting errors","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"danielkwan2004"},"content":"- Maintains consistency with the Note ID generation scheme","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"danielkwan2004"},"content":"- Separates format validation from business logic","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"danielkwan2004"},"content":"**2. Four-Tier Validation Strategy:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"danielkwan2004"},"content":"The `execute()` method implements validation in a specific order:","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"danielkwan2004"},"content":"```","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"danielkwan2004"},"content":"Input: pin a1b2c3d4","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"danielkwan2004"},"content":"  ↓","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"danielkwan2004"},"content":"[Validation 1] Format Check","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"danielkwan2004"},"content":"  ├─ Length \u003d 8? ✓","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"danielkwan2004"},"content":"  ├─ Matches [a-f0-9]? ✓","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"danielkwan2004"},"content":"  └─ Pass → Continue","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"danielkwan2004"},"content":"  ↓","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"danielkwan2004"},"content":"[Validation 2] Empty List Check","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"danielkwan2004"},"content":"  ├─ notes.isEmpty()? ","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"danielkwan2004"},"content":"  ├─ If true → throw NoNotesException","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"danielkwan2004"},"content":"  └─ If false → Continue","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"danielkwan2004"},"content":"  ↓","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"danielkwan2004"},"content":"[Validation 3] Note Existence Check","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"danielkwan2004"},"content":"  ├─ Find note with ID","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"danielkwan2004"},"content":"  ├─ If not found → throw InvalidNoteIdException","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"danielkwan2004"},"content":"  └─ If found → Continue","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"danielkwan2004"},"content":"  ↓","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"danielkwan2004"},"content":"[Validation 4] State Check","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"danielkwan2004"},"content":"  ├─ Is note.isPinned() \u003d\u003d isPin?","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"danielkwan2004"},"content":"  ├─ If true → throw AlreadyPinnedException","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"danielkwan2004"},"content":"  └─ If false → Continue","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"danielkwan2004"},"content":"  ↓","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"danielkwan2004"},"content":"[Happy Path] Execute Operation","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"danielkwan2004"},"content":"  ├─ Get note from Optional","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"danielkwan2004"},"content":"  ├─ Set pinned status","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"danielkwan2004"},"content":"  ├─ Display confirmation","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"danielkwan2004"},"content":"  └─ Save to storage","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"danielkwan2004"},"content":"```","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"danielkwan2004"},"content":"**Why this order:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"danielkwan2004"},"content":"1. **Format first** - Fastest check, catches obvious user errors immediately","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"danielkwan2004"},"content":"2. **Empty list second** - Provides context-specific error (\"no notes to pin/unpin\")","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"danielkwan2004"},"content":"3. **Existence third** - Only performs expensive stream search after other validations pass","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"danielkwan2004"},"content":"4. **State last** - Prevents redundant operations after confirming the note exists","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"danielkwan2004"},"content":"This ordering optimizes for both performance and user experience.","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"danielkwan2004"},"content":"**3. Dual-Purpose Design:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"danielkwan2004"},"content":"The command handles both pin and unpin operations through a single boolean flag:","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"danielkwan2004"},"content":"```java","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"danielkwan2004"},"content":"public PinNoteCommand(String noteId, boolean isPin) {","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"danielkwan2004"},"content":"    this.noteId \u003d noteId;","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"danielkwan2004"},"content":"    this.isPin \u003d isPin;  // true \u003d pin, false \u003d unpin","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"danielkwan2004"},"content":"```","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"danielkwan2004"},"content":"**Why a single command class:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"danielkwan2004"},"content":"- Reduces code duplication (validation logic identical for both operations)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"danielkwan2004"},"content":"- Simplifies testing (test both states in one test suite)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"danielkwan2004"},"content":"- Makes the codebase more maintainable (single source of truth for pin logic)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"danielkwan2004"},"content":"- The Parser creates the appropriate instance based on the command keyword","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"danielkwan2004"},"content":"**4. Stream-Based Note Lookup:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"danielkwan2004"},"content":"The command uses Java Streams API for note lookup:","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"danielkwan2004"},"content":"```java","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"danielkwan2004"},"content":"Optional\u003cNote\u003e maybe \u003d notes.stream()","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"danielkwan2004"},"content":"    .filter(n -\u003e n.getId().equals(noteId))","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"danielkwan2004"},"content":"    .findFirst();","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"danielkwan2004"},"content":"```","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"danielkwan2004"},"content":"**5. Automatic Timestamp Management:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"danielkwan2004"},"content":"The `Note.setPinned()` method automatically updates the `modifiedAt` timestamp:","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"danielkwan2004"},"content":"```java","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"danielkwan2004"},"content":"note.setPinned(isPin);  // Automatically calls updateModifiedAt() internally","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"danielkwan2004"},"content":"```","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"danielkwan2004"},"content":"This design ensures modification timestamps are always accurate without requiring explicit calls, maintaining data integrity through encapsulation.","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"danielkwan2004"},"content":"**Sequence Diagram - Pin Note Operation:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"danielkwan2004"},"content":"```","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"danielkwan2004"},"content":"User → Parser → PinNoteCommand → Notes → Note → UI → Storage","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"danielkwan2004"},"content":" |       |            |            |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"danielkwan2004"},"content":" | pin a1b2c3d4       |            |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"danielkwan2004"},"content":" |------\u003e|            |            |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"danielkwan2004"},"content":" |       | new PinNoteCommand      |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"danielkwan2004"},"content":" |       |-----------\u003e|            |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"danielkwan2004"},"content":" |       |            |            |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"danielkwan2004"},"content":" |       |   execute()|            |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"danielkwan2004"},"content":" |       |-----------\u003e|            |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"danielkwan2004"},"content":" |       |            | validateFormat()  |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"danielkwan2004"},"content":" |       |            |----        |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"danielkwan2004"},"content":" |       |            |    |       |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"danielkwan2004"},"content":" |       |            |\u003c----       |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"danielkwan2004"},"content":" |       |            | isEmpty()? |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"danielkwan2004"},"content":" |       |            |-----------\u003e|      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"danielkwan2004"},"content":" |       |            |\u003c-----------|      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"danielkwan2004"},"content":" |       |            | stream()   |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"danielkwan2004"},"content":" |       |            | filter()   |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"danielkwan2004"},"content":" |       |            | findFirst()|      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"danielkwan2004"},"content":" |       |            |-----------\u003e|      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"danielkwan2004"},"content":" |       |            |\u003c-----------|      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"danielkwan2004"},"content":" |       |            |                   |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"danielkwan2004"},"content":" |       |            | get()             |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"danielkwan2004"},"content":" |       |            |------------------\u003e|     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"danielkwan2004"},"content":" |       |            |                   |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"danielkwan2004"},"content":" |       |            | isPinned()        |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"danielkwan2004"},"content":" |       |            |------------------\u003e|     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"danielkwan2004"},"content":" |       |            |\u003c------------------|     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"danielkwan2004"},"content":" |       |            | (check if already pinned)       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"danielkwan2004"},"content":" |       |            |----        |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"danielkwan2004"},"content":" |       |            |    |       |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"danielkwan2004"},"content":" |       |            |\u003c----       |      |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"danielkwan2004"},"content":" |       |            |                   |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"danielkwan2004"},"content":" |       |            | setPinned(true)   |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"danielkwan2004"},"content":" |       |            |------------------\u003e|     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"danielkwan2004"},"content":" |       |            |                   | updateModifiedAt()","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"danielkwan2004"},"content":" |       |            |                   |---  |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"danielkwan2004"},"content":" |       |            |                   |  |  |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"danielkwan2004"},"content":" |       |            |                   |\u003c--  |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"danielkwan2004"},"content":" |       |            |\u003c------------------|     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"danielkwan2004"},"content":" |       |            |                   |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"danielkwan2004"},"content":" |       |            | showJustPinnedNote()    |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"danielkwan2004"},"content":" |       |            |------------------------\u003e|       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"danielkwan2004"},"content":" |       |            |                   |     |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"danielkwan2004"},"content":" |       |            | save(notes)             |       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"danielkwan2004"},"content":" |       |            |-------------------------------\u003e|","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"danielkwan2004"},"content":"```","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"danielkwan2004"},"content":"**Error Handling Examples:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"danielkwan2004"},"content":"```","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"danielkwan2004"},"content":"Scenario 1: Invalid Format (too short)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"danielkwan2004"},"content":"Input: pin abc","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"danielkwan2004"},"content":"  → InvalidFormatException: \"Note ID must be exactly 8 characters long.\"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"danielkwan2004"},"content":"Scenario 2: Invalid Format (special characters)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"danielkwan2004"},"content":"Input: pin a1b2-3d4","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"danielkwan2004"},"content":"  → InvalidFormatException: \"Note ID must contain only lowercase hexadecimal ","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"danielkwan2004"},"content":"                             characters (0-9, a-f).\"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"danielkwan2004"},"content":"Scenario 3: Empty Notes List","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"danielkwan2004"},"content":"Input: pin a1b2c3d4 (with empty list)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"danielkwan2004"},"content":"  → NoNotesException: \"You have no notes to pin/unpin.\"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"danielkwan2004"},"content":"Scenario 4: Note Not Found","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"danielkwan2004"},"content":"Input: pin 99999999 (valid format, but doesn\u0027t exist)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"danielkwan2004"},"content":"  → InvalidNoteIdException: \"Note with ID \u002799999999\u0027 does not exist.\"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"danielkwan2004"},"content":"Scenario 5: Already Pinned","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"danielkwan2004"},"content":"Input: pin a1b2c3d4 (note is already pinned)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"danielkwan2004"},"content":"  → AlreadyPinnedException: \"Note with ID \u0027a1b2c3d4\u0027 is already pinned.\"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"danielkwan2004"},"content":"Scenario 6: Already Unpinned","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"danielkwan2004"},"content":"Input: unpin a1b2c3d4 (note is already unpinned)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"danielkwan2004"},"content":"  → AlreadyPinnedException: \"Note with ID \u0027a1b2c3d4\u0027 is already unpinned.\"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"danielkwan2004"},"content":"Scenario 7: Success (Pin)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"danielkwan2004"},"content":"Input: pin a1b2c3d4","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"danielkwan2004"},"content":"  → UI displays: \"Pinned note: a1b2c3d4\"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"danielkwan2004"},"content":"  → Note\u0027s pinned status updated to true","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"danielkwan2004"},"content":"  → Modified timestamp updated automatically","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"danielkwan2004"},"content":"  → Changes saved to storage","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"danielkwan2004"},"content":"Scenario 8: Success (Unpin)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"danielkwan2004"},"content":"Input: unpin a1b2c3d4","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"danielkwan2004"},"content":"  → UI displays: \"Unpinned note: a1b2c3d4\"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"danielkwan2004"},"content":"  → Note\u0027s pinned status updated to false","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"danielkwan2004"},"content":"  → Modified timestamp updated automatically","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"danielkwan2004"},"content":"  → Changes saved to storage","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"danielkwan2004"},"content":"```","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"danielkwan2004"},"content":"**Testing Considerations:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"danielkwan2004"},"content":"The implementation is designed for comprehensive testing:","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"danielkwan2004"},"content":"1. **Format Validation Tests** - Handled in `ParserTest` (format validation happens in Parser)","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"danielkwan2004"},"content":"2. **Empty List Tests** - Handled in `PinNoteCommandTest`","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"danielkwan2004"},"content":"3. **Note Not Found Tests** - Handled in `PinNoteCommandTest`","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"danielkwan2004"},"content":"4. **Already Pinned/Unpinned Tests** - Handled in `PinNoteCommandTest`","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"danielkwan2004"},"content":"5. **Happy Path Tests** - Pin/unpin operations, state changes, timestamp updates","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"danielkwan2004"},"content":"This separation of concerns allows each layer to be tested independently.","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"danielkwan2004"},"content":"**Test Coverage:**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"danielkwan2004"},"content":"The `PinNoteCommandTest` class includes:","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"danielkwan2004"},"content":"- `testInvalidFormatTooShortException()` - Tests ID too short","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"danielkwan2004"},"content":"- `testInvalidFormatTooLongException()` - Tests ID too long","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"danielkwan2004"},"content":"- `testInvalidFormatSpecialCharactersException()` - Tests invalid characters","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"danielkwan2004"},"content":"- `testInvalidFormatNullThrowsException()` - Tests null ID","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"danielkwan2004"},"content":"- `testEmptyNotesListException()` - Tests empty notes list","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"danielkwan2004"},"content":"- `testNoteIdNotFoundException()` - Tests non-existent note ID","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"danielkwan2004"},"content":"- `testPinAlreadyPinnedNoteThrowsException()` - Tests pinning an already pinned note","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"danielkwan2004"},"content":"- `testUnpinAlreadyUnpinnedNoteThrowsException()` - Tests unpinning an already unpinned note","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"danielkwan2004"},"content":"- `testValidPinNoteCommandNoteIsPinned()` - Tests successful pin operation","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"danielkwan2004"},"content":"- `testUnpinsNoteAtValidIndexUpdatesPinnedAndModifiedAt()` - Tests successful unpin operation","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"JianHao24"},"content":"**Command Execution Pattern:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"JianHao24"},"content":"Each command follows this pattern:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"JianHao24"},"content":"1. **Validation** - Check preconditions (empty list, invalid IDs, etc.)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"JianHao24"},"content":"2. **Business Logic** - Perform the actual operation","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"JianHao24"},"content":"3. **UI Feedback** - Display success/failure messages","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"JianHao24"},"content":"4. **Persistence** - Save is handled by Zettel class after execution","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"JianHao24"},"content":"**Sequence Diagram - Execute Command:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"JianHao24"},"content":"User → Zettel → Parser → Command → Notes/Storage → UI","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"JianHao24"},"content":" |       |        |         |           |          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"JianHao24"},"content":" | input |        |         |           |          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"JianHao24"},"content":" |------\u003e|        |         |           |          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"JianHao24"},"content":" |       | parse()|         |           |          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"JianHao24"},"content":" |       |-------\u003e|         |           |          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"JianHao24"},"content":" |       |\u003c-------|         |           |          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"JianHao24"},"content":" |       |                  |           |          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"JianHao24"},"content":" |       |  cmd execute()   |           |          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"JianHao24"},"content":" |       |-----------------\u003e|           |          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"JianHao24"},"content":" |       |                  |  modify   |          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"JianHao24"},"content":" |       |                  |----------\u003e|          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"JianHao24"},"content":" |       |                  |           |   show   |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"JianHao24"},"content":" |       |                  |---------------------\u003e|","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"JianHao24"},"content":" |       |      save()      |           |          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"JianHao24"},"content":" |       |-----------------------------\u003e|          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"JianHao24"},"content":"### Note Component","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"JianHao24"},"content":"The `Note` class represents a single note entity with all its metadata and content.","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"JianHao24"},"content":"**Key Fields:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"JianHao24"},"content":"- `id` (String) - Unique 8-character hash-based identifier","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"JianHao24"},"content":"- `title` (String) - Note title","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"JianHao24"},"content":"- `filename` (String) - Associated file name for storage","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"JianHao24"},"content":"- `body` (String) - Note content","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"JianHao24"},"content":"- `createdAt` (Instant) - Creation timestamp","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"JianHao24"},"content":"- `modifiedAt` (Instant) - Last modification timestamp","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"JianHao24"},"content":"- `pinned` (boolean) - Flag for quick access","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"JianHao24"},"content":"- `archived` (boolean) - Flag for archival status","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"JianHao24"},"content":"- `archiveName` (String) - Archive location (if archived)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"JianHao24"},"content":"- `logs` (List\u003cString\u003e) - List of timestamped log entries","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"JianHao24"},"content":"**Class Diagram:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"JianHao24"},"content":"┌─────────────────────────────────┐","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"JianHao24"},"content":"│            Note                 │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"JianHao24"},"content":"├─────────────────────────────────┤","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"JianHao24"},"content":"│ - id: String (8 chars)          │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"JianHao24"},"content":"│ - title: String                 │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"JianHao24"},"content":"│ - filename: String              │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"JianHao24"},"content":"│ - body: String                  │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"JianHao24"},"content":"│ - createdAt: Instant            │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"JianHao24"},"content":"│ - modifiedAt: Instant           │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"JianHao24"},"content":"│ - pinned: boolean               │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"JianHao24"},"content":"│ - archived: boolean             │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"JianHao24"},"content":"│ - archiveName: String           │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"JianHao24"},"content":"│ - logs: List\u003cString\u003e            │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"JianHao24"},"content":"│ - numberOfNotes: int (static)   │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"JianHao24"},"content":"├─────────────────────────────────┤","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"JianHao24"},"content":"│ + Note(id, title, ...)          │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"JianHao24"},"content":"│ + getId(): String               │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"JianHao24"},"content":"│ + getTitle(): String            │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"JianHao24"},"content":"│ + setTitle(String): void        │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"JianHao24"},"content":"│ + setPinned(boolean): void      │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"JianHao24"},"content":"│ + addLog(String): void          │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"JianHao24"},"content":"│ + updateModifiedAt(): void      │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"JianHao24"},"content":"│ + toString(): String            │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"JianHao24"},"content":"└─────────────────────────────────┘","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"JianHao24"},"content":"**Constructor Overloading:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"JianHao24"},"content":"Two constructors support different use cases:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"JianHao24"},"content":"1. **User Creation Constructor** - For new notes created by users","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"JianHao24"},"content":"```java","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"JianHao24"},"content":"   Note(id, title, filename, body, createdAt, modifiedAt)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"JianHao24"},"content":"   // Defaults: pinned\u003dfalse, archived\u003dfalse, logs\u003d[]","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"JianHao24"},"content":"2. **Storage Loading Constructor** - For loading notes from disk","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"JianHao24"},"content":"```java","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"JianHao24"},"content":"   Note(id, title, filename, body, createdAt, modifiedAt, ","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"JianHao24"},"content":"        pinned, archived, archiveName, logs)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"JianHao24"},"content":"   // Includes all fields for complete restoration","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"JianHao24"},"content":"**ID Generation:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"JianHao24"},"content":"Note IDs are deterministic hash-based identifiers:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"JianHao24"},"content":"- Generated from: `title + createdAt timestamp`","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"JianHao24"},"content":"- Hashed to produce 8-character hexadecimal string","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"JianHao24"},"content":"- Ensures uniqueness while being reproducible","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"JianHao24"},"content":"**Automatic Timestamp Management:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"JianHao24"},"content":"The `updateModifiedAt()` method is automatically called by setters that modify content:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"JianHao24"},"content":"- `setTitle()`","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"JianHao24"},"content":"- `setBody()`","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"JianHao24"},"content":"- `setPinned()`","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"JianHao24"},"content":"- `setArchived()`","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"JianHao24"},"content":"- `setArchiveName()`","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"JianHao24"},"content":"This ensures modification timestamps are always accurate without manual tracking.","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"JianHao24"},"content":"**Display Format:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"JianHao24"},"content":"The `toString()` method provides a formatted display for note lists:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"JianHao24"},"content":"Format: FILENAME yyyy-MM-dd NOTEID","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"JianHao24"},"content":"Example: my_note.txt 2025-10-14 a1b2c3d4","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"JianHao24"},"content":"**Defensive Copying:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"JianHao24"},"content":"The `getLogs()` method returns a defensive copy to maintain encapsulation:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"JianHao24"},"content":"```java","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"JianHao24"},"content":"public List\u003cString\u003e getLogs() {","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"JianHao24"},"content":"    return new ArrayList\u003c\u003e(logs);","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"JianHao24"},"content":"**Static Counter:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"JianHao24"},"content":"A static `numberOfNotes` counter tracks total notes created during application runtime for statistics.","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"JianHao24"},"content":"### Storage Component","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"gordonajajar"},"content":"The `Storage` class is responsible for all file I/O and repository management in Zettel.","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"gordonajajar"},"content":"It provides a persistent filesystem-based backend that stores note metadata, bodies, and repository configurations.","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"JianHao24"},"content":"**Key Responsibilities:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"gordonajajar"},"content":"- Initialize and validate repository structures","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"gordonajajar"},"content":"- Create, load, and save individual note files","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"gordonajajar"},"content":"- Maintain `.zettelConfig`","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"gordonajajar"},"content":"- Support creating and switching repositories","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"gordonajajar"},"content":"- Detect and repair missing or orphaned files","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"JianHao24"},"content":"**Repository Structure:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"gordonajajar"},"content":"\u003croot\u003e/data/","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"gordonajajar"},"content":"├── main/                    # Default repository","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"gordonajajar"},"content":"│   ├── notes/               # Folder containing individual note .txt files","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"gordonajajar"},"content":"│   ├── archive/             # Folder containing archived notes","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"gordonajajar"},"content":"│   └── index.txt            # Metadata for all notes in this repository","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"gordonajajar"},"content":"├── otherRepo/               # Additional repositories","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"gordonajajar"},"content":"│   ├── notes/","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"gordonajajar"},"content":"│   ├── archive/","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"gordonajajar"},"content":"│   └── index.txt","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"gordonajajar"},"content":"└── .zettelConfig            # Global config file","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"gordonajajar"},"content":"```","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"gordonajajar"},"content":"**Configuration File:**","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"gordonajajar"},"content":"Zettel tracks available repositories and the currently active one through `.zettelConfig`.","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"gordonajajar"},"content":"Format:","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"gordonajajar"},"content":"```","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"gordonajajar"},"content":"main | repo2 | repo3","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"gordonajajar"},"content":"main","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"gordonajajar"},"content":"- Line 1 — List of all repository names (pipe | separated)","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"gordonajajar"},"content":"- Line 2 — Name of the currently active repository","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"gordonajajar"},"content":"- The file is automatically created and updated as repositories are added or switched.","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"gordonajajar"},"content":"- If malformed, Zettel gracefully defaults to main.","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"JianHao24"},"content":"**Class Diagram:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"gordonajajar"},"content":"┌─────────────────────────────────┐","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"JianHao24"},"content":"│             Storage             │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"gordonajajar"},"content":"├─────────────────────────────────┤","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"JianHao24"},"content":"│ - rootPath: Path                │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"JianHao24"},"content":"│ - repoName: String              │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"gordonajajar"},"content":"│ - repoList: ArrayList\u003cString\u003e   │","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"gordonajajar"},"content":"├─────────────────────────────────┤","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"JianHao24"},"content":"│ + init(): void                  │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"gordonajajar"},"content":"│ + load(): ArrayList\u003cNote\u003e       │","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"gordonajajar"},"content":"│ + save(List\u003cNote\u003e): void        │","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"gordonajajar"},"content":"│ + createRepo(String): void      │","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"gordonajajar"},"content":"│ + changeRepo(String): void      │","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"gordonajajar"},"content":"│ + createStorageFile(Note): void │","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"gordonajajar"},"content":"│ + validateRepo(String): void    │","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"gordonajajar"},"content":"└─────────────────────────────────┘","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"gordonajajar"},"content":"**Data Persistence Model:**","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"gordonajajar"},"content":"Each note’s data is split into metadata (stored in `index.txt`) and content (stored in its own .txt file).","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"gordonajajar"},"content":"Each line in `index.txt` represents a note entry with pipe-delimited fields:","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"gordonajajar"},"content":"id | title | filename | createdAt | modifiedAt | pinned | archived | archiveName | logs","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"gordonajajar"},"content":"Field Details:","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"gordonajajar"},"content":"## Note Field Details","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"gordonajajar"},"content":"| **Field**       | **Description** |","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"gordonajajar"},"content":"|-----------------|-----------------|","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"gordonajajar"},"content":"| `id`            | Unique note ID |","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"gordonajajar"},"content":"| `title`         | Note title |","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"gordonajajar"},"content":"| `filename`      | Corresponding `.txt` filename |","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"gordonajajar"},"content":"| `createdAt` / `modifiedAt` | ISO-8601 timestamps |","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"gordonajajar"},"content":"| `pinned`        | `1` if pinned, else `0` |","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"gordonajajar"},"content":"| `archived`      | `1` if archived, else `0` |","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"gordonajajar"},"content":"| `archiveName`   | Name of archive folder (empty if not archived) |","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"gordonajajar"},"content":"| `logs`          | Concatenated note history entries, separated by `;;` |","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"gordonajajar"},"content":"Each note’s text content is stored separately in:","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"gordonajajar"},"content":"data/\u003crepoName\u003e/notes/\u003cfilename\u003e.txt","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"gordonajajar"},"content":"Special handling:","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"gordonajajar"},"content":"- Multiple logs are separated by `;;`","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"shauntsr"},"content":"- Multiple tags are separated by `;;`","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"gordonajajar"},"content":"- Empty archiveName stored as empty string","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"JianHao24"},"content":"### Repository Management","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"JianHao24"},"content":"**Creating a Repository:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"JianHao24"},"content":"1. Check if repository already exists","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"JianHao24"},"content":"2. Create directory structure (`notes/`, `archive/`)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"JianHao24"},"content":"3. Create `index.txt` file","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"JianHao24"},"content":"4. Handle errors gracefully","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"JianHao24"},"content":"**Switching Repositories:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"JianHao24"},"content":"1. Update internal `repoName` state","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"JianHao24"},"content":"2. Write new repository name to `.zettelConfig`","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":742,"author":{"gitId":"JianHao24"},"content":"3. Subsequent operations use new repository","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":743,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":744,"author":{"gitId":"JianHao24"},"content":"**Code Snippet:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":745,"author":{"gitId":"JianHao24"},"content":"```java","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":746,"author":{"gitId":"gordonajajar"},"content":"public void changeRepo(String newRepo) {","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":747,"author":{"gitId":"gordonajajar"},"content":"    if (!repoList.contains(newRepo)) {","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":748,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\"Repo \u0027\" + newRepo + \"\u0027 does not exist. Falling back to \u0027main\u0027.\");","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":749,"author":{"gitId":"gordonajajar"},"content":"        newRepo \u003d \"main\";","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":750,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":751,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":752,"author":{"gitId":"gordonajajar"},"content":"    this.repoName \u003d newRepo;","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":753,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":754,"author":{"gitId":"JianHao24"},"content":"    try {","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":755,"author":{"gitId":"gordonajajar"},"content":"        updateConfig(newRepo);","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":756,"author":{"gitId":"gordonajajar"},"content":"    } catch (ZettelException e) {","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":757,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\"Error switching repo: \" + e.getMessage());","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":758,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":759,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":760,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":761,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":762,"author":{"gitId":"JianHao24"},"content":"### Error Handling Strategy","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":763,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":764,"author":{"gitId":"gordonajajar"},"content":"Zettel follows a fail-safe approach:","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":765,"author":{"gitId":"gordonajajar"},"content":"- All I/O operations wrapped in try–catch","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":766,"author":{"gitId":"gordonajajar"},"content":"- On failure: print readable warning (no crash)","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":767,"author":{"gitId":"gordonajajar"},"content":"- Missing folders/files are auto-created","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":768,"author":{"gitId":"gordonajajar"},"content":"- Corrupted index entries are skipped (with console notice)","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":769,"author":{"gitId":"gordonajajar"},"content":"- Repository validation runs after every save to maintain consistency","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":770,"author":{"gitId":"gordonajajar"},"content":"- Fallbacks to default repository if `.zettelConfig` is missing or broken","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":771,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":772,"author":{"gitId":"JianHao24"},"content":"### Data Persistence Flow","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":773,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":774,"author":{"gitId":"JianHao24"},"content":"**Loading Notes:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":775,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":776,"author":{"gitId":"gordonajajar"},"content":"Purpose: Construct ArrayList\u003cNote\u003e from repository contents.","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":777,"author":{"gitId":"gordonajajar"},"content":"1. Resolve repository path","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":778,"author":{"gitId":"gordonajajar"},"content":"2. Validate repository layout","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":779,"author":{"gitId":"gordonajajar"},"content":"3. Read each line from `index.txt`","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":780,"author":{"gitId":"gordonajajar"},"content":"4. Parse metadata via `parseSaveFile()`","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":781,"author":{"gitId":"gordonajajar"},"content":"5. Read corresponding .txt file in `/notes/`","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":782,"author":{"gitId":"gordonajajar"},"content":"6. Combine metadata + body into Note object","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":783,"author":{"gitId":"gordonajajar"},"content":"7. Skip corrupted or missing entries gracefully","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":784,"author":{"gitId":"gordonajajar"},"content":"8. Collect into ArrayList","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":785,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":786,"author":{"gitId":"JianHao24"},"content":"**Saving Notes:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":787,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":788,"author":{"gitId":"gordonajajar"},"content":"Purpose: Persist all notes to disk.","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":789,"author":{"gitId":"JianHao24"},"content":"1. Ensure repository directory exists","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":790,"author":{"gitId":"gordonajajar"},"content":"2. Write metadata to index.txt (one line per note)","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":791,"author":{"gitId":"gordonajajar"},"content":"3. Write note body to individual .txt file (createStorageFile())","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":792,"author":{"gitId":"gordonajajar"},"content":"4. Validate repository structure post-save","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":793,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":794,"author":{"gitId":"gordonajajar"},"content":"***Sequence Diagram - Saving Notes:***","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":795,"author":{"gitId":"gordonajajar"},"content":"```","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":796,"author":{"gitId":"gordonajajar"},"content":"Zettel → Storage","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":797,"author":{"gitId":"gordonajajar"},"content":"  |         |","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":798,"author":{"gitId":"gordonajajar"},"content":"  | save()  |","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":799,"author":{"gitId":"gordonajajar"},"content":"  |--------\u003e|","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":800,"author":{"gitId":"gordonajajar"},"content":"  |         | toSaveFormat()","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":801,"author":{"gitId":"gordonajajar"},"content":"  |         | write index.txt","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":802,"author":{"gitId":"gordonajajar"},"content":"  |         | write note bodies","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":803,"author":{"gitId":"gordonajajar"},"content":"  |         | validateRepo()","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":804,"author":{"gitId":"gordonajajar"},"content":"  |\u003c--------|","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":805,"author":{"gitId":"gordonajajar"},"content":"```","lastModifiedDate":"2025-10-26T18:16:00","isFullCredit":false},{"lineNumber":806,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":807,"author":{"gitId":"shauntsr"},"content":"### Tag Persistence Flow","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":808,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":809,"author":{"gitId":"shauntsr"},"content":"**Loading Tags:**","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":810,"author":{"gitId":"shauntsr"},"content":"1. Read `.zettelConfig` from root directory","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":811,"author":{"gitId":"shauntsr"},"content":"2. Extract third line (if it exists) as the line of tags","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":812,"author":{"gitId":"shauntsr"},"content":"3. Split the line using \" | \" as the delimiter","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":813,"author":{"gitId":"shauntsr"},"content":"4. Trim and collect non-empty tags into a `List\u003cString\u003e`","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":814,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":815,"author":{"gitId":"shauntsr"},"content":"**Saving Tags:**","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":816,"author":{"gitId":"shauntsr"},"content":"1. Ensure `.zettelConfig` exists","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":817,"author":{"gitId":"shauntsr"},"content":"2. Join all tags using \" | \"","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":818,"author":{"gitId":"shauntsr"},"content":"3. Insert or update the third line of `.zettelConfig`","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":819,"author":{"gitId":"shauntsr"},"content":"4. Overwrite the previous content completely","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":820,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T15:43:04","isFullCredit":false},{"lineNumber":821,"author":{"gitId":"JianHao24"},"content":"### Component Interaction Diagram","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":822,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":823,"author":{"gitId":"JianHao24"},"content":"┌────────────────────────────────────────────────────┐","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":824,"author":{"gitId":"JianHao24"},"content":"│                      ZettelCLI                     │ ","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":825,"author":{"gitId":"JianHao24"},"content":"│                                                    │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":826,"author":{"gitId":"JianHao24"},"content":"│  ┌──────┐  ┌──────┐  ┌───────┐  ┌───────┐  ┌────┐  │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":827,"author":{"gitId":"JianHao24"},"content":"│  │Zettel│  │Parser│  │Command│  │Storage│  │ UI │  │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":828,"author":{"gitId":"JianHao24"},"content":"│  └──┬───┘  └──┬───┘  └───┬───┘  └───┬───┘  └─┬──┘  │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":829,"author":{"gitId":"JianHao24"},"content":"│     │         │          │   load   │        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":830,"author":{"gitId":"JianHao24"},"content":"│     │\u003c──────────────────────────────│        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":831,"author":{"gitId":"JianHao24"},"content":"│     │         │          │          │  scan  │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":832,"author":{"gitId":"JianHao24"},"content":"│     │\u003c───────────────────────────────────────│     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":833,"author":{"gitId":"JianHao24"},"content":"│     │  parse  │          │          │        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":834,"author":{"gitId":"JianHao24"},"content":"│     │─────────\u003e          │          │        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":835,"author":{"gitId":"JianHao24"},"content":"│     │\u003c────────│          │          │        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":836,"author":{"gitId":"JianHao24"},"content":"│     │    cmd execute     │          │        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":837,"author":{"gitId":"JianHao24"},"content":"│     │────────────────────\u003e          │        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":838,"author":{"gitId":"JianHao24"},"content":"│     │         │  modify  │          │        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":839,"author":{"gitId":"JianHao24"},"content":"│     │         │  notes   │          │        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":840,"author":{"gitId":"JianHao24"},"content":"│     │\u003c───────────────────│          │        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":841,"author":{"gitId":"JianHao24"},"content":"│     │         │          │          │  show  │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":842,"author":{"gitId":"JianHao24"},"content":"│     │         │          │──────────────────\u003e│     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":843,"author":{"gitId":"JianHao24"},"content":"│     │         │   save   │          │        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":844,"author":{"gitId":"JianHao24"},"content":"│     │───────────────────────────────\u003e        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":845,"author":{"gitId":"JianHao24"},"content":"│     │         │          │          │        │     │","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":846,"author":{"gitId":"JianHao24"},"content":"└────────────────────────────────────────────────────┘","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":847,"author":{"gitId":"JianHao24"},"content":"```","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":849,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":850,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":851,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":853,"author":{"gitId":"JianHao24"},"content":"**Primary User:** Students, researchers, knowledge workers, and lifelong learners who:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":854,"author":{"gitId":"JianHao24"},"content":"- Work primarily in terminal/command-line environments","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":855,"author":{"gitId":"JianHao24"},"content":"- Value speed and efficiency over graphical interfaces","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":856,"author":{"gitId":"JianHao24"},"content":"- Need to capture ideas quickly without context-switching","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":857,"author":{"gitId":"JianHao24"},"content":"- Want an offline-first solution without cloud dependencies","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":858,"author":{"gitId":"JianHao24"},"content":"- Prefer minimalist, keyboard-driven workflows","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":859,"author":{"gitId":"JianHao24"},"content":"- Work on systems with limited resources (old computers, minimal setups)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":860,"author":{"gitId":"JianHao24"},"content":"- Need to take notes in low-connectivity environments (rural areas, during commutes)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":861,"author":{"gitId":"JianHao24"},"content":"- Follow or want to adopt the Zettelkasten note-taking methodology","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":862,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":863,"author":{"gitId":"JianHao24"},"content":"**Technical Profile:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":864,"author":{"gitId":"JianHao24"},"content":"- Comfortable with CLI applications","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":865,"author":{"gitId":"JianHao24"},"content":"- Basic understanding of file systems","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":866,"author":{"gitId":"JianHao24"},"content":"- May have older hardware or limited system resources","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":868,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":870,"author":{"gitId":"JianHao24"},"content":"ZettelCLI solves the problem of **slow, bloated, cloud-dependent note-taking applications** by providing:","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":871,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":872,"author":{"gitId":"JianHao24"},"content":"1. **Speed \u0026 Efficiency**: Capture notes instantly from the command line without launching heavy applications","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":873,"author":{"gitId":"JianHao24"},"content":"2. **Offline-First**: No internet required - all notes stored locally","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":874,"author":{"gitId":"JianHao24"},"content":"3. **Resource-Light**: Runs on old computers and minimal systems","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":875,"author":{"gitId":"JianHao24"},"content":"4. **Zero Lock-In**: Plain text storage means your notes are never trapped","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":876,"author":{"gitId":"JianHao24"},"content":"5. **Zettelkasten Support**: Built-in features for linking notes and building knowledge networks","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":877,"author":{"gitId":"JianHao24"},"content":"6. **Privacy**: Your notes never leave your machine","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":878,"author":{"gitId":"JianHao24"},"content":"7. **Distraction-Free**: No ads, notifications, or unnecessary features","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":879,"author":{"gitId":"JianHao24"},"content":"8. **Always Accessible**: Available wherever you have a terminal","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":880,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":881,"author":{"gitId":"JianHao24"},"content":"**Core Value Statements:**","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":882,"author":{"gitId":"JianHao24"},"content":"- \"Take notes as fast as you can think\"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":883,"author":{"gitId":"JianHao24"},"content":"- \"Your notes, your computer, no internet required\"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":884,"author":{"gitId":"JianHao24"},"content":"- \"Zettelkasten for the terminal generation\"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":886,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":888,"author":{"gitId":"-"},"content":"| Version | As a ...                  | I want to ...                                              | So that I can ...                                          |","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":889,"author":{"gitId":"JianHao24"},"content":"|---------|---------------------------|------------------------------------------------------------|------------------------------------------------------------|","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":890,"author":{"gitId":"JianHao24"},"content":"| v1.0    | impatient user            | take notes from my local CLI                               | have an offline and quick note-taking experience           |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":891,"author":{"gitId":"JianHao24"},"content":"| v1.0    | hurried user              | create a note with only a title                            | flesh it out later                                         |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":892,"author":{"gitId":"JianHao24"},"content":"| v1.0    | minimalist user           | create notes without specifying a directory                | keep my note tree flat and uncluttered                     |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":893,"author":{"gitId":"JianHao24"},"content":"| v1.0    | distracted user           | save a half-written note as a draft                        | not lose it                                                |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":894,"author":{"gitId":"JianHao24"},"content":"| v1.0    | nostalgic user            | view the creation date of notes                            | trace when an idea originated                              |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":895,"author":{"gitId":"JianHao24"},"content":"| v1.0    | cautious user             | view a confirmation before deleting a note                 | not lose information accidentally                          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":896,"author":{"gitId":"JianHao24"},"content":"| v1.0    | user                      | search notes by title                                      | find them quickly                                          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":897,"author":{"gitId":"JianHao24"},"content":"| v1.0    | time-tracker              | add a timestamped log entry to a note                      | see when I last thought about it                           |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":898,"author":{"gitId":"JianHao24"},"content":"| v1.0    | new user                  | initialize a Zettelkasten repo                             | start with a clean slate                                   |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":899,"author":{"gitId":"JianHao24"},"content":"| v1.0    | returning user            | import a repo into my new computer                         | not lose momentum                                          |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":900,"author":{"gitId":"JianHao24"},"content":"| v1.0    | heavy user                | archive old notes                                          | they don\u0027t clutter my active space                         |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":901,"author":{"gitId":"JianHao24"},"content":"| v1.0    | forgetful user            | mark notes as \"pinned\"                                     | always find them                                           |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":902,"author":{"gitId":"JianHao24"},"content":"| v1.0    | busy student              | create a short note quickly                                | keep up with notetaking during lectures                    |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":903,"author":{"gitId":"JianHao24"},"content":"| v2.0    | lazy user                 | tag notes under categories                                 | retrieve them easily                                       |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":904,"author":{"gitId":"JianHao24"},"content":"| v2.0    | multi-disciplinary user   | assign multiple tags to a note                             | it appears under different contexts                        |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":905,"author":{"gitId":"JianHao24"},"content":"| v2.0    | tidy user                 | see a list of all my tags                                  | spot duplicates or overlaps                                |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":906,"author":{"gitId":"JianHao24"},"content":"| v2.0    | user                      | sort results by creation date                              | trace my thought evolution                                 |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":907,"author":{"gitId":"JianHao24"},"content":"| v2.0    | forgetful user            | search notes case-insensitively                            | not have to remember names perfectly                       |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":908,"author":{"gitId":"JianHao24"},"content":"| v2.0    | user                      | edit existing notes                                        | update and refine my thoughts                              |","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":909,"author":{"gitId":"danielkwan2004"},"content":"| v2.0    | user                      | link one note to another                                   | build a web of ideas                                       |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":910,"author":{"gitId":"danielkwan2004"},"content":"| v2.0    | user revising connections | unlink notes                                               | correct outdated associations                              |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":911,"author":{"gitId":"danielkwan2004"},"content":"| v2.0    | busy student              | access linked notes                                        | study immediately related notes                            |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":912,"author":{"gitId":"danielkwan2004"},"content":"| v2.0    | organised student         | link notes together                                        | not require much effort to organise them                   |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":913,"author":{"gitId":"danielkwan2004"},"content":"| v2.0    | tag-oriented user         | filter search results by tag                               | narrow scope                                               |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":914,"author":{"gitId":"danielkwan2004"},"content":"| v2.0    | speed-focused user        | navigate search results with keyboard shortcuts            | stay efficient                                             |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":915,"author":{"gitId":"danielkwan2004"},"content":"| v2.0    | pragmatic user            | rename a tag globally                                      | all affected notes update consistently                     |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":916,"author":{"gitId":"danielkwan2004"},"content":"| v2.0    | careless typist           | be warned if I create two tags with similar spellings      | not fragment my notes                                      |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":917,"author":{"gitId":"danielkwan2004"},"content":"| v2.1    | visual learner            | generate a graph of linked notes                           | visualise the relationships                                |","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":918,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":919,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":920,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":921,"author":{"gitId":"JianHao24"},"content":"### Performance","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":922,"author":{"gitId":"JianHao24"},"content":"1. **Response Time**: Commands should execute in under 200ms for typical operations","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":923,"author":{"gitId":"JianHao24"},"content":"2. **Startup Time**: Application should initialize in under 1 second","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":924,"author":{"gitId":"JianHao24"},"content":"3. **Search Speed**: Search through 1000+ notes should complete within 500ms","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":925,"author":{"gitId":"JianHao24"},"content":"4. **File Size**: Should handle repositories with 10,000+ notes efficiently","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":927,"author":{"gitId":"JianHao24"},"content":"### Usability","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":928,"author":{"gitId":"JianHao24"},"content":"1. **Learning Curve**: New users should be able to create their first note within 2 minutes","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":929,"author":{"gitId":"JianHao24"},"content":"2. **Error Messages**: All error messages should be clear and actionable","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":930,"author":{"gitId":"JianHao24"},"content":"3. **Command Format**: Commands should follow consistent CLI conventions","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":931,"author":{"gitId":"JianHao24"},"content":"4. **Help Documentation**: Built-in help should be available for all commands","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":932,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":933,"author":{"gitId":"JianHao24"},"content":"### Reliability","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":934,"author":{"gitId":"JianHao24"},"content":"1. **Data Integrity**: No data loss should occur during normal operations","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":935,"author":{"gitId":"JianHao24"},"content":"2. **Graceful Degradation**: Corrupted notes should be skipped, not crash the application","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":936,"author":{"gitId":"JianHao24"},"content":"3. **Atomic Operations**: Save operations should be atomic to prevent partial writes","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":937,"author":{"gitId":"JianHao24"},"content":"4. **Backup Safety**: Original data should never be corrupted during updates","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":938,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":939,"author":{"gitId":"JianHao24"},"content":"### Portability","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":940,"author":{"gitId":"JianHao24"},"content":"1. **Cross-Platform**: Should run on Windows, macOS, and Linux","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":941,"author":{"gitId":"JianHao24"},"content":"2. **Java Version**: Compatible with Java 17 and above","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":942,"author":{"gitId":"JianHao24"},"content":"3. **File Format**: Use platform-independent text encoding (UTF-8)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":943,"author":{"gitId":"JianHao24"},"content":"4. **Path Handling**: Use platform-independent path separators","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":944,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":945,"author":{"gitId":"JianHao24"},"content":"### Security","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":946,"author":{"gitId":"JianHao24"},"content":"1. **Local Storage**: All data stored locally, no network transmission","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":947,"author":{"gitId":"JianHao24"},"content":"2. **File Permissions**: Respect system file permissions","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":948,"author":{"gitId":"JianHao24"},"content":"3. **Input Validation**: Sanitize user input to prevent file system exploits","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":949,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":950,"author":{"gitId":"JianHao24"},"content":"### Maintainability","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":951,"author":{"gitId":"JianHao24"},"content":"1. **Code Style**: Follow Java coding conventions","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":952,"author":{"gitId":"JianHao24"},"content":"2. **Documentation**: All public methods should have Javadoc comments","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":953,"author":{"gitId":"JianHao24"},"content":"3. **Modularity**: Clear separation between UI, logic, and storage layers","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":954,"author":{"gitId":"JianHao24"},"content":"4. **Testability**: Code should be designed for unit testing","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":955,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":956,"author":{"gitId":"JianHao24"},"content":"### Scalability","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":957,"author":{"gitId":"JianHao24"},"content":"1. **Storage**: Should handle repositories up to 100MB efficiently","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":958,"author":{"gitId":"JianHao24"},"content":"2. **Memory**: Should run with JVM heap size under 512MB","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":959,"author":{"gitId":"JianHao24"},"content":"3. **Concurrent Use**: Support multiple repository instances (different directories)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":960,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":961,"author":{"gitId":"JianHao24"},"content":"### Resource Constraints","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":962,"author":{"gitId":"JianHao24"},"content":"1. **Disk Space**: Minimal installation footprint (\u003c 10MB)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":963,"author":{"gitId":"JianHao24"},"content":"2. **CPU Usage**: Low CPU usage during idle state","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":964,"author":{"gitId":"JianHao24"},"content":"3. **Memory**: Should run on systems with 2GB RAM","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":965,"author":{"gitId":"JianHao24"},"content":"4. **Old Hardware**: Must be usable on 5+ year old computers","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":966,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":967,"author":{"gitId":"JianHao24"},"content":"## Glossary","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":968,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":969,"author":{"gitId":"JianHao24"},"content":"* **Zettelkasten** - A German term meaning \"slip box\"; a knowledge management and note-taking method based on creating atomic notes and linking them together","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":970,"author":{"gitId":"JianHao24"},"content":"* **Repository (Repo)** - A collection of notes stored in a dedicated folder structure with its own notes, archive, and index","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":971,"author":{"gitId":"JianHao24"},"content":"* **Note** - A single unit of information with a title, body, metadata, and optional tags/links","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":972,"author":{"gitId":"JianHao24"},"content":"* **Note ID** - An 8-character hexadecimal identifier uniquely identifying a note, generated deterministically from title and timestamp","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":973,"author":{"gitId":"JianHao24"},"content":"* **Pinned Note** - A note marked for quick access that appears at the top of lists","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":974,"author":{"gitId":"JianHao24"},"content":"* **Archived Note** - A note moved to the archive folder to reduce clutter in the active workspace","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":975,"author":{"gitId":"JianHao24"},"content":"* **Draft** - A partially written note that has been saved for later completion","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":976,"author":{"gitId":"JianHao24"},"content":"* **Log Entry** - A timestamped record added to a note to track when it was viewed or modified","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":977,"author":{"gitId":"JianHao24"},"content":"* **Atomic Note** - A note that captures a single idea or concept (Zettelkasten principle)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":978,"author":{"gitId":"JianHao24"},"content":"* **Backlink** - A reverse link showing which notes link to the current note","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":979,"author":{"gitId":"JianHao24"},"content":"* **Note Link** - A connection between two notes that represents a relationship or reference","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":980,"author":{"gitId":"JianHao24"},"content":"* **Placeholder Link** - A link to a note that doesn\u0027t exist yet, indicating future content to create","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":981,"author":{"gitId":"JianHao24"},"content":"* **CLI** - Command Line Interface; a text-based interface for interacting with the application","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":982,"author":{"gitId":"JianHao24"},"content":"* **Root Path** - The base directory where all ZettelCLI repositories are stored (default: `data/`)","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":983,"author":{"gitId":"JianHao24"},"content":"* **Config File** - `.zettelConfig` file that stores the current active repository name","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":984,"author":{"gitId":"JianHao24"},"content":"* **Index File** - `index.txt` file within each repository for maintaining note metadata","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":985,"author":{"gitId":"JianHao24"},"content":"* **Save Format** - The pipe-delimited text format used to persist notes to disk","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":986,"author":{"gitId":"JianHao24"},"content":"* **Force Delete** - Deleting a note without confirmation prompt using the `-f` flag","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":987,"author":{"gitId":"JianHao24"},"content":"* **Parser** - The component responsible for converting raw user input into Command objects","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":988,"author":{"gitId":"JianHao24"},"content":"* **Command Pattern** - A design pattern that encapsulates requests as objects, used for all user actions","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":989,"author":{"gitId":"JianHao24"},"content":"* **Auto-save** - Automatic saving of notes after every successful command execution","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false},{"lineNumber":990,"author":{"gitId":"JianHao24"},"content":"* **Defensive Copy** - Returning a copy of internal data structures to prevent external modification","lastModifiedDate":"2025-10-17T17:25:45","isFullCredit":false}],"authorContributionMap":{"gordonajajar":114,"JianHao24":549,"shauntsr":27,"danielkwan2004":274,"-":26}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"# ZettelCLI User Guide","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"ZettelCLI is a desktop Command Line Interface (CLI) application used for managing a personal Zettlekasten note system. It is optimised for users who prefer keyboard commands over Graphical User Interfaces (GUI). Through just a keyboard, users can build their own repository of notes or quickly navigate through their knowledge base with ease.","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"## Quick Start","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 17 or above installed. ","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gordonajajar"},"content":"2. Download the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2025-10-17T17:26:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"3. Run the application","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"```bash","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"java -jar zettel.jar","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"### Starting a Zettelkasten Repository: `init`","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"Initialises a new Zettelkasten repository.","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"**Format:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"init \u003crepository-name\u003e","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"**Example:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"init My_New_Repo","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"**Expected Output:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":" Repository /My_New_Repo has been created.","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"---","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"### Adding a New Note: `new`","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"Creates a new note in the Zettelkasten repository. Notes can be created with only a title, or with both a title and a ","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"body. The ID generated is randomised.","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"**Format:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"new -t \u003cTITLE\u003e [-b \u003cBODY\u003e]","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"**Example:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"new -t New_Note -b \"This is a new note\"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"**Expected Output:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"Note created: New_Note.txt #e0e7b989","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"---","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"### Listing All Notes: `list`","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"Lists all existing notes, alongside their creation time.","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"**Format:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"list [-p]","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"#### To view all notes","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"Use the command without the flag.","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"**Example:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"list","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"**Expected Output:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"You have 3 notes:","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"    1. New_Note.txt 2025-10-17 e0e7b989","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"    2. brrr_againi.txt 2025-10-16 ccfd2e51","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"    3. file.txt 2025-10-16 55bb2cac","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"#### To view only pinned notes:","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"Use the `-p` flag.","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"**Example:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shauntsr"},"content":"list -p","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"**Expected Output:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shauntsr"},"content":"You have 1 pinned notes:","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shauntsr"},"content":"    1. file.txt 2025-10-16 55bb2cac","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shauntsr"},"content":"---","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shauntsr"},"content":"### Removing a Note: `delete`","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shauntsr"},"content":"Removes the note at the specified index. Confirmation prevents accidental loss.","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shauntsr"},"content":"**Format:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shauntsr"},"content":"delete [-f] \u003cNOTE_ID\u003e","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shauntsr"},"content":"#### Delete with confirmation","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shauntsr"},"content":"To delete with confirmation, use the command with no flags.","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shauntsr"},"content":"**Example:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shauntsr"},"content":"delete e0e7b989 ","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shauntsr"},"content":"**Expected Output:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shauntsr"},"content":"Confirm deletion on \u0027New_Note\u0027, noteID e0e7b989? (y/n)","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shauntsr"},"content":"\u003e y","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shauntsr"},"content":"Note at e0e7b989 deleted","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shauntsr"},"content":"#### Delete without confirmation","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shauntsr"},"content":"Use the command with the `-f` flag.","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shauntsr"},"content":"**Example:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shauntsr"},"content":"delete -f 55bb2cac","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shauntsr"},"content":"**Expected Output:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shauntsr"},"content":"Note at 55bb2cac deleted","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shauntsr"},"content":"---","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shauntsr"},"content":"### Pinning a Note: `pin`","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shauntsr"},"content":"Pins a note in the repository to keep it at the top of your list.","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shauntsr"},"content":"**Format:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shauntsr"},"content":"pin \u003cNOTE_ID\u003e","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"shauntsr"},"content":"**Example:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"shauntsr"},"content":"pin ccfd2e51","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"shauntsr"},"content":"**Expected Output:**","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"shauntsr"},"content":"Got it. I\u0027ve pinned this note: ccfd2e51","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"shauntsr"},"content":"### Unpinning a Note: `unpin`","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"shauntsr"},"content":"Unpins a note in the repository.","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"shauntsr"},"content":"**Format:**","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"shauntsr"},"content":"unpin \u003cNOTE_ID\u003e","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"shauntsr"},"content":"**Example:**","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"shauntsr"},"content":"unpin ccfd2e51","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"shauntsr"},"content":"**Expected Output:**","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"shauntsr"},"content":"Got it. I\u0027ve unpinned this note: ccfd2e51","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"shauntsr"},"content":"## Command Summary","lastModifiedDate":"2025-10-17T16:49:47","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"shauntsr"},"content":"* Start a new Zettelkasten repository: `init \u003crepository-name\u003e`","lastModifiedDate":"2025-10-17T16:55:20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"shauntsr"},"content":"* Add a new note: `new -t \u003cTITLE\u003e [-b \u003cBODY\u003e]`","lastModifiedDate":"2025-10-17T16:55:20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"shauntsr"},"content":"* List all notes: `list`","lastModifiedDate":"2025-10-17T16:55:20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"shauntsr"},"content":"* List only pinned notes: `list -p`","lastModifiedDate":"2025-10-17T16:55:20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"shauntsr"},"content":"* Delete a note (with confirmation): `delete \u003cNOTE_ID\u003e`","lastModifiedDate":"2025-10-17T16:55:20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"shauntsr"},"content":"* Delete a note (without confirmation): `delete -f \u003cNOTE_ID\u003e`","lastModifiedDate":"2025-10-17T16:55:20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"shauntsr"},"content":"* Pin a note: `pin \u003cNOTE_ID\u003e`","lastModifiedDate":"2025-10-17T16:55:20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"shauntsr"},"content":"* Unpin a note: `unpin \u003cNOTE_ID\u003e`","lastModifiedDate":"2025-10-17T17:05:08","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"shauntsr":171,"-":21}},{"path":"docs/team/JianHao24.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JianHao24"},"content":"# Jian Hao - Project Portfolio Page","lastModifiedDate":"2025-10-01T13:25:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T13:25:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T13:25:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T13:25:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T13:25:22","isFullCredit":false}],"authorContributionMap":{"JianHao24":5,"-":5}},{"path":"docs/team/danielkwan2004.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"\\# Hi","lastModifiedDate":"2025-10-01T13:25:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-01T13:25:16","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":2}},{"path":"docs/team/gordonajajar.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"# Gordon - Project Portfolio Page","lastModifiedDate":"2025-10-01T13:17:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"-":5}},{"path":"docs/team/shauntsr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"# Shaun - Project Portfolio Page","lastModifiedDate":"2025-10-01T13:33:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"-":5}},{"path":"src/main/java/seedu/zettel/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T14:25:53","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shira421"},"content":"import java.time.ZoneId;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":"import java.util.List;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-17T18:26:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shira421"},"content":" * Represents a note in the Zettel system.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shira421"},"content":" * Each note has a unique 8-character hash-based ID, title, body, and metadata.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gordonajajar"},"content":"public class Note {","lastModifiedDate":"2025-10-14T14:25:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"    // Logger for this class","lastModifiedDate":"2025-10-17T18:26:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":"    private static final Logger logger \u003d Logger.getLogger(Note.class.getName());","lastModifiedDate":"2025-10-17T18:26:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T18:26:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":"    // Date formatter for toString method","lastModifiedDate":"2025-10-14T17:50:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d","lastModifiedDate":"2025-10-14T17:50:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\").withZone(ZoneId.systemDefault());","lastModifiedDate":"2025-10-14T17:50:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:50:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"    // ID length constant - all note IDs must be exactly 8 characters","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"    private static final int ID_LENGTH \u003d 8;","lastModifiedDate":"2025-10-16T14:35:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-16T14:35:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"    // Static counter for tracking total notes created","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gordonajajar"},"content":"    private static int numberOfNotes \u003d 0;","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"    // Instance fields","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"    private final String id; // 8-character hash-based unique identifier","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"    private String title; // Title of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"    private String filename; // Actual filename on disk","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"    private String body; // Body content of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"    private Instant createdAt; // Timestamp when the note was created","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"    private Instant modifiedAt; // Timestamp when the note was last modified","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"    private boolean pinned; // Whether the note is pinned","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"    private boolean archived; // Whether the note has been archived","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"    private String archiveName; // Name of the archive the note belongs to","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"    private List\u003cString\u003e logs; // History/log data of that individual note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"    private List\u003cString\u003e tags; // Tags for the note","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"    private HashSet\u003cString\u003e outgoingLinks; // note IDs that this note links to","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"    private HashSet\u003cString\u003e incomingLinks; // note IDs of notes that is linked by this note","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"     * Constructor for creating a new note by the user.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"     * Initializes with default values for pinned, archived, and logs.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"     * @param id The unique 8-character hash-based ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"     * @param title The title of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"     * @param filename The filename for storage on disk","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"     * @param body The body content of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"     * @param createdAt The timestamp when the note was created","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"     * @param modifiedAt The timestamp when the note was last modified","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"    public Note(String id, String title, String filename, String body,","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"                Instant createdAt, Instant modifiedAt) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"        this.body \u003d body;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"        this.createdAt \u003d createdAt;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"        this.modifiedAt \u003d modifiedAt;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"        this.pinned \u003d false;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"        this.archived \u003d false;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"        this.archiveName \u003d null;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"        this.logs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"        this.outgoingLinks \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"        this.incomingLinks \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gordonajajar"},"content":"        numberOfNotes++;","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"        logger.info(\"Sucessful note creation!\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shira421"},"content":"     * Constructor with all fields for loading a note from storage.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shira421"},"content":"     * Validates that the ID is exactly 8 characters long.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shira421"},"content":"     * @param id The unique 8-character hash-based ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"     * @param title The title of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"     * @param filename The filename for storage on disk","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"     * @param body The body content of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"     * @param createdAt The timestamp when the note was created","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shira421"},"content":"     * @param modifiedAt The timestamp when the note was last modified","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shira421"},"content":"     * @param pinned Whether the note is pinned","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shira421"},"content":"     * @param archived Whether the note is archived","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shira421"},"content":"     * @param archiveName The archive name if archived, null otherwise","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shira421"},"content":"     * @param logs The list of log entries for this note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"     * @param tags The list of tags for this note","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"     * @param outgoingLinks The set of note IDs that this note links to","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"     * @param incomingLinks The set of note IDs that link to this note","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shira421"},"content":"    public Note(String id, String title, String filename, String body,","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shira421"},"content":"                Instant createdAt, Instant modifiedAt, boolean pinned,","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"                boolean archived, String archiveName, List\u003cString\u003e logs, List\u003cString\u003e tags) {","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shira421"},"content":"        assert id.length() \u003d\u003d ID_LENGTH : \"Note ID must be \" + ID_LENGTH + \" characters long\";","lastModifiedDate":"2025-10-16T14:35:56","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shira421"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shira421"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shira421"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shira421"},"content":"        this.body \u003d body;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shira421"},"content":"        this.createdAt \u003d createdAt;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shira421"},"content":"        this.modifiedAt \u003d modifiedAt;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shira421"},"content":"        this.pinned \u003d pinned;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shira421"},"content":"        this.archived \u003d archived;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shira421"},"content":"        this.archiveName \u003d archiveName;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shira421"},"content":"        this.logs \u003d logs !\u003d null ? new ArrayList\u003c\u003e(logs) : new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shauntsr"},"content":"        this.tags \u003d tags !\u003d null ? new ArrayList\u003c\u003e(tags) : new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"        this.outgoingLinks \u003d outgoingLinks !\u003d null ? new HashSet\u003c\u003e(outgoingLinks) : new HashSet\u003c\u003e();","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"        this.incomingLinks \u003d incomingLinks !\u003d null ? new HashSet\u003c\u003e(incomingLinks) : new HashSet\u003c\u003e();","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gordonajajar"},"content":"        numberOfNotes++;","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shira421"},"content":"    // Getters","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shira421"},"content":"     * Gets the unique 8-character ID of this note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shira421"},"content":"     * @return The note ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shira421"},"content":"    public String getId() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shira421"},"content":"        return id;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shira421"},"content":"     * Gets the title of this note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shira421"},"content":"     * @return The note title","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shira421"},"content":"    public String getTitle() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shira421"},"content":"        return title;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shira421"},"content":"     * Gets the filename used for storing this note on disk.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shira421"},"content":"     * @return The filename","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shira421"},"content":"    public String getFilename() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shira421"},"content":"        return filename;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shira421"},"content":"     * Gets the body content of this note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shira421"},"content":"     * @return The note body","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shira421"},"content":"    public String getBody() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shira421"},"content":"        return body;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"shira421"},"content":"     * Gets the timestamp when this note was created.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shira421"},"content":"     * @return The creation timestamp","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"shira421"},"content":"    public Instant getCreatedAt() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shira421"},"content":"        return createdAt;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"shira421"},"content":"     * Gets the timestamp when this note was last modified.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"shira421"},"content":"     * @return The last modification timestamp","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"shira421"},"content":"    public Instant getModifiedAt() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"shira421"},"content":"        return modifiedAt;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"shira421"},"content":"     * Checks if this note is pinned.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"shira421"},"content":"     * @return true if pinned, false otherwise","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"shira421"},"content":"    public boolean isPinned() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"shira421"},"content":"        return pinned;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"shira421"},"content":"     * Checks if this note is archived.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"shira421"},"content":"     * @return true if archived, false otherwise","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"shira421"},"content":"    public boolean isArchived() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"shira421"},"content":"        return archived;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"danielkwan2004"},"content":"    /** ","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"danielkwan2004"},"content":"     * Checks if another note is linked to this note.","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"danielkwan2004"},"content":"     * @param noteId The ID of the note to check","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"danielkwan2004"},"content":"     * @return true if the note is linked, false otherwise","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"danielkwan2004"},"content":"    public boolean isLinkedTo(String noteId) {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"danielkwan2004"},"content":"        return outgoingLinks.contains(noteId);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"danielkwan2004"},"content":"    /** ","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"danielkwan2004"},"content":"     * Checks if another note is linked by this note.","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"danielkwan2004"},"content":"     * @param noteId The ID of the note to check","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"danielkwan2004"},"content":"     * @return true if the note is linked, false otherwise","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"danielkwan2004"},"content":"    public boolean isLinkedBy(String noteId) {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"danielkwan2004"},"content":"        return incomingLinks.contains(noteId);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"shira421"},"content":"     * Gets the archive name if this note is archived.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"shira421"},"content":"     * @return The archive name, or null if not archived","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"shira421"},"content":"    public String getArchiveName() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"shira421"},"content":"        return archiveName;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"shira421"},"content":"     * Gets a defensive copy of the logs list for this note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"shira421"},"content":"     * @return A new ArrayList containing the log entries","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"shira421"},"content":"    public List\u003cString\u003e getLogs() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"shira421"},"content":"        return new ArrayList\u003c\u003e(logs); // Return copy to maintain encapsulation","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"shauntsr"},"content":"    public List\u003cString\u003e getTags() {","lastModifiedDate":"2025-10-26T03:23:58","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"shauntsr"},"content":"        return new ArrayList\u003c\u003e(tags);","lastModifiedDate":"2025-10-26T03:23:58","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T03:23:58","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"shira421"},"content":"     * Gets the total number of notes created since the application started.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"shira421"},"content":"     * @return The total number of notes","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"shira421"},"content":"    public static int getNumberOfNotes() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"gordonajajar"},"content":"        return numberOfNotes;","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"danielkwan2004"},"content":"    /** ","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"danielkwan2004"},"content":"     * Gets the set of noteIds that this note has outgoing","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"danielkwan2004"},"content":"     * links to.","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"danielkwan2004"},"content":"     * @return a hash set of note IDs that this note links to","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"danielkwan2004"},"content":"    public HashSet\u003cString\u003e getOutgoingLinks() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"danielkwan2004"},"content":"        return new HashSet\u003c\u003e(outgoingLinks);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"danielkwan2004"},"content":"    /** ","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"danielkwan2004"},"content":"     * Gets the set of noteIds of the incoming links that is linking","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"danielkwan2004"},"content":"     * to this note.","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"danielkwan2004"},"content":"     * @return a hash set of note IDs that link to this note","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"danielkwan2004"},"content":"    public HashSet\u003cString\u003e getIncomingLinks() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"danielkwan2004"},"content":"        return new HashSet\u003c\u003e(incomingLinks);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"shira421"},"content":"    // Setters","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"shira421"},"content":"     * Sets a new title for this note and updates the modified timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"shira421"},"content":"     * @param title The new title","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"shira421"},"content":"    public void setTitle(String title) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"shira421"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"danielkwan2004"},"content":"        updateModifiedAt();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"shira421"},"content":"     * Sets a new filename for this note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"shira421"},"content":"     * Does not update the modified timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"shira421"},"content":"     * @param filename The new filename","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"shira421"},"content":"    public void setFilename(String filename) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"shira421"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"shira421"},"content":"     * Sets new body content for this note and updates the modified timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"shira421"},"content":"     * @param body The new body content","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"shira421"},"content":"    public void setBody(String body) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"shira421"},"content":"        this.body \u003d body;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"danielkwan2004"},"content":"        updateModifiedAt();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"shira421"},"content":"     * Sets the pinned status of this note and updates the modified timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"shira421"},"content":"     * @param pinned true to pin the note, false to unpin","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"shira421"},"content":"    public void setPinned(boolean pinned) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"shira421"},"content":"        this.pinned \u003d pinned;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"danielkwan2004"},"content":"        updateModifiedAt();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"shira421"},"content":"     * Sets the archived status of this note and updates the modified timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"shira421"},"content":"     * @param archived true to archive the note, false to unarchive","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"shira421"},"content":"    public void setArchived(boolean archived) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"shira421"},"content":"        this.archived \u003d archived;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"danielkwan2004"},"content":"        updateModifiedAt();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"shira421"},"content":"     * Sets the archive name for this note and updates the modified timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"shira421"},"content":"     * @param archiveName The name of the archive","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"shira421"},"content":"    public void setArchiveName(String archiveName) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"shira421"},"content":"        this.archiveName \u003d archiveName;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"danielkwan2004"},"content":"        updateModifiedAt();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"shira421"},"content":"     * Replaces the entire logs list with a new list.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"shira421"},"content":"     * @param logs The new list of log entries, or null for an empty list","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"shira421"},"content":"    public void setLogs(List\u003cString\u003e logs) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"shira421"},"content":"        this.logs \u003d logs !\u003d null ? new ArrayList\u003c\u003e(logs) : new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"shira421"},"content":"     * Adds a single log entry to this note\u0027s history.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"shira421"},"content":"     * @param logEntry The log entry to add","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"shira421"},"content":"    public void addLog(String logEntry) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"shira421"},"content":"        this.logs.add(logEntry);","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"shauntsr"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2025-10-26T03:23:58","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"shauntsr"},"content":"        this.tags.add(tag);","lastModifiedDate":"2025-10-26T03:23:58","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T03:23:58","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:23:58","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"danielkwan2004"},"content":"     * Adds a note ID to the \"outgoingLinks\" set.","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"danielkwan2004"},"content":"     * @param noteId The note ID to add","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"danielkwan2004"},"content":"    public void addOutgoingLink(String noteId) {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"danielkwan2004"},"content":"        this.outgoingLinks.add(noteId);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"danielkwan2004"},"content":"     * Adds a note ID to the \"incomingLinks\" set.","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"danielkwan2004"},"content":"     * @param noteId The note ID to add","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"danielkwan2004"},"content":"    public void addIncomingLink(String noteId) {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"danielkwan2004"},"content":"        this.incomingLinks.add(noteId);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"danielkwan2004"},"content":"     * Removes a note ID from the \"outgoingLinks\" set.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"danielkwan2004"},"content":"     * @param noteId The note ID to remove","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"danielkwan2004"},"content":"    public void removeOutgoingLink(String noteId) {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"danielkwan2004"},"content":"        this.outgoingLinks.remove(noteId);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"danielkwan2004"},"content":"     * Removes a note ID from the \"incomingLinks\" set.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"danielkwan2004"},"content":"     * @param noteId The note ID to remove","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"danielkwan2004"},"content":"    public void removeIncomingLink(String noteId) {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"danielkwan2004"},"content":"        this.incomingLinks.remove(noteId);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"shira421"},"content":"     * Updates the modifiedAt timestamp to the current time.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"shira421"},"content":"     * Called automatically by setters that modify note content.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"danielkwan2004"},"content":"    public void updateModifiedAt() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"shira421"},"content":"        this.modifiedAt \u003d Instant.now();","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"JianHao24"},"content":"     * Load new body content for this note after storage parsing","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"JianHao24"},"content":"     * @param body The new body content","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"JianHao24"},"content":"    public void loadBody(String body) {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"JianHao24"},"content":"        this.body \u003d body;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"shira421"},"content":"     * Returns a formatted string representation of the note for display in lists.","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"shira421"},"content":"     * Format: FILENAME yyyy-MM-dd NOTEID","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"shira421"},"content":"     * Example: my_note.txt 2025-10-14 a1b2c3d4","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"shira421"},"content":"     * @return Formatted string with filename, creation date, and note ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"shira421"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"shira421"},"content":"    public String toString() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"shira421"},"content":"        String formattedDate \u003d DATE_FORMATTER.format(createdAt);","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"shira421"},"content":"        return String.format(\"%s %s %s\", filename, formattedDate, id);","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:25:53","isFullCredit":false}],"authorContributionMap":{"gordonajajar":8,"JianHao24":10,"shauntsr":11,"danielkwan2004":91,"shira421":284}},{"path":"src/main/java/seedu/zettel/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T14:13:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.Command;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.DeleteNoteCommand;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.EditNoteCommand;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.ExitCommand;","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.FindNoteCommand;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.InitCommand;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.LinkBothNotesCommand;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.LinkNotesCommand;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.ListLinkedNotesCommand;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.ListNoteCommand;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.ListTagsIndividualNoteCommand;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.commands.ListTagsGlobalCommand;","lastModifiedDate":"2025-10-29T22:15:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.NewNoteCommand;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.NewTagCommand;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.PinNoteCommand;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.commands.TagNoteCommand;","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.UnlinkBothNotesCommand;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.UnlinkNotesCommand;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.EmptyDescriptionException;","lastModifiedDate":"2025-10-14T23:56:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidFormatException;","lastModifiedDate":"2025-10-14T23:56:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-14T23:56:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:56:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JianHao24"},"content":"/**","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JianHao24"},"content":" * Parses user input commands and converts them into executable Command objects.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":" * This class handles validation and extraction of command parameters from raw user input strings.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JianHao24"},"content":" */","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JianHao24"},"content":"public class Parser {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JianHao24"},"content":"    // Error messages to be printed when encountering errors","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JianHao24"},"content":"    // Categorised between empty, format and invalid","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"    private static final String LIST_FORMAT \u003d \"List format should be: list [-p]\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"    private static final String PIN_FORMAT \u003d \"Pin format should be: pin/unpin \u003cNOTE_ID\u003e\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"    private static final String INIT_FORMAT \u003d \"Init format should be: init \u003cREPO_NAME\u003e\";","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JianHao24"},"content":"    private static final String DELETE_FORMAT \u003d \"Delete format should be: delete [-f] \u003cNOTE_ID\u003e\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"    private static final String FIND_FORMAT \u003d \"Find format should be: find \u003cSEARCH_TERM\u003e\";","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"    private static final String NOTE_FORMAT \u003d \"New note format should be: new -t \u003cTITLE\u003e [-b \u003cBODY\u003e]\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"    private static final String TAG_FORMAT \u003d \"Tag command requires a subcommand: new/add\";","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"    private static final String TAG_NOTE_FORMAT \u003d \"Tag note command format should be: tag new \u003cNOTE_ID\u003e \u003cTAG\u003e\";","lastModifiedDate":"2025-10-29T12:35:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"    private static final String NEW_TAG_FORMAT \u003d \"Tag add command format should be: tag add \u003cTAG\u003e\";","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"    private static final String LIST_TAGS_GLOBAL_FORMAT \u003d \"List all tags globally command format should be: \"","lastModifiedDate":"2025-10-29T22:31:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"            + \"list-tags-all\";","lastModifiedDate":"2025-10-29T22:31:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"    private static final String LINK_NOTES_FORMAT \u003d \"Link notes command format should be: link\"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"            + \" \u003cSOURCE_NOTE_ID\u003e \u003cTARGET_NOTE_ID\u003e\";","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"    private static final String UNLINK_NOTES_FORMAT \u003d \"Unlink notes command format should be: unlink\" ","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"            + \" \u003cSOURCE_NOTE_ID\u003e \u003cTARGET_NOTE_ID\u003e\";","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"    private static final String LINK_BOTH_NOTES_FORMAT \u003d \"Linking both notes command format should be: link-both\" ","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"            + \" \u003cNOTE_ID_1\u003e \u003cNOTE_ID_2\u003e\";","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"    private static final String UNLINK_BOTH_NOTES_FORMAT \u003d \"Unlinking both notes command format should be: unlink-both\" ","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"            + \" \u003cNOTE_ID_1\u003e \u003cNOTE_ID_2\u003e\";","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"    private static final String LIST_TAGS_INDIVIDUAL_NOTE_FORMAT \u003d \"List tags for individual note command format \"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"            + \"should be: list-tags \u003cNOTE_ID\u003e\";","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JianHao24"},"content":"    private static final String NOTE_EMPTY \u003d \"Note title cannot be empty!\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"    private static final String TAG_EMPTY \u003d \"Tag cannot be empty!\";","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JianHao24"},"content":"    private static final String ID_EMPTY \u003d \"Please specify a Note ID to \";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"    private static final String ID_INVALID \u003d \"Note ID must be exactly 8 hexadecimal characters (0-9, a-f)\";","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JianHao24"},"content":"    private static final String INIT_EMPTY \u003d \"Please specify a repo name!\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JianHao24"},"content":"    private static final String INIT_INVALID \u003d","lastModifiedDate":"2025-10-16T22:02:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JianHao24"},"content":"            \"Repo name can only contain alphanumeric characters, \"","lastModifiedDate":"2025-10-16T22:02:19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JianHao24"},"content":"                    + \"hyphens and underscores.\";","lastModifiedDate":"2025-10-16T22:02:19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JianHao24"},"content":"    // Note ID validation constants","lastModifiedDate":"2025-10-17T15:55:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"    private static final int VALID_NOTE_ID_LENGTH \u003d 8;","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JianHao24"},"content":"    private static final String VALID_NOTE_ID_REGEX \u003d \"^[a-f0-9]{\" + VALID_NOTE_ID_LENGTH + \"}$\";","lastModifiedDate":"2025-10-17T15:55:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JianHao24"},"content":"    private static final String INVALID_ID_LENGTH_FORMAT \u003d","lastModifiedDate":"2025-10-17T15:55:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JianHao24"},"content":"            \"Note ID must be exactly \" + VALID_NOTE_ID_LENGTH + \" characters long.\";","lastModifiedDate":"2025-10-17T15:55:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"    private static final String LIST_LINKED_TYPE_FORMAT \u003d \"Link type must be either\" + ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"                    \" \u0027incoming-links\u0027 or \u0027outgoing-links\u0027.\";","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"    private static final String LIST_LINKED_FORMAT \u003d \"List linked notes format should be: list \"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"                    + \"\u003cincoming-links/outgoing-links\u003e \u003cNOTE_ID\u003e\";","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T15:55:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JianHao24"},"content":"     * Parses a user command string and returns the corresponding Command object.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JianHao24"},"content":"     * Supported commands include: bye, list, new, delete, pin, unpin, init, and find.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JianHao24"},"content":"     * @param input The raw user input string to parse.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JianHao24"},"content":"     * @return A Command object corresponding to the user\u0027s input.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException If the command format is invalid or parameters are missing.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JianHao24"},"content":"    public static Command parse(String input) throws ZettelException {","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"        String[] inputs \u003d input.trim().split(\"\\\\s+\"); //split input based on spaces in between","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JianHao24"},"content":"        String command \u003d inputs[0].toLowerCase(); //first word of user input","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JianHao24"},"content":"        return switch (command) {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JianHao24"},"content":"        case \"bye\" -\u003e new ExitCommand();","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"        case \"list\" -\u003e parseListNoteCommand(inputs);","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"        case \"new\" -\u003e parseNewNoteCommand(inputs);","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gordonajajar"},"content":"        case \"edit\" -\u003e parseEditNoteCommand(inputs);","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JianHao24"},"content":"        case \"delete\" -\u003e parseDeleteNoteCommand(inputs);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JianHao24"},"content":"        case \"pin\" -\u003e parsePinNoteCommand(inputs, true);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JianHao24"},"content":"        case \"unpin\" -\u003e parsePinNoteCommand(inputs, false);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"        case \"init\" -\u003e parseInitCommand(inputs);","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"        case \"find\" -\u003e parseFindNoteCommand(inputs);","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"        case \"tag\" -\u003e parseTagCommand(inputs);","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"        case \"link\" -\u003e parseLinkNotesCommand(inputs);","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"        case \"unlink\" -\u003e parseUnlinkNotesCommand(inputs);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"        case \"link-both\" -\u003e parseLinkBothNotesCommand(inputs);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"        case \"unlink-both\" -\u003e parseUnlinkBothNotesCommand(inputs);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shauntsr"},"content":"        case \"list-tags-all\" -\u003e parseListTagsGlobalCommand(inputs);","lastModifiedDate":"2025-10-29T22:15:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"        case \"list-tags\" -\u003e parseListTagsIndividualNoteCommand(inputs);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JianHao24"},"content":"        default -\u003e throw new InvalidInputException(command);","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JianHao24"},"content":"        };","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"     * Extracts and validates a note ID from the input array.","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"     * The note ID must be exactly 8 alphanumeric characters.","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"     * Helper function used to validate NoteId during parsing","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gordonajajar"},"content":"     * @param noteId ID of note","lastModifiedDate":"2025-10-29T12:46:53","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"danielkwan2004"},"content":"     * @param actionName The name of the action requesting the ID (for error messages).","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"     * @return The validated note ID string.","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"     * @throws ZettelException If the ID is missing, has incorrect length, or contains invalid characters.","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"danielkwan2004"},"content":"    private static String parseNoteId(String noteId, String actionName) throws ZettelException {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"danielkwan2004"},"content":"        if (noteId \u003d\u003d null || noteId.trim().isEmpty()) {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"danielkwan2004"},"content":"            throw new EmptyDescriptionException(ID_EMPTY + actionName + \"!\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"danielkwan2004"},"content":"        String idString \u003d noteId.trim();","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"danielkwan2004"},"content":"        assert !idString.isEmpty() : \"ID string should not be empty after trim\";","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"danielkwan2004"},"content":"        // Validate noteId format - must be exactly 8 lowercase hex characters","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"danielkwan2004"},"content":"        if (!idString.matches(VALID_NOTE_ID_REGEX)) {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(ID_INVALID);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"danielkwan2004"},"content":"        if (idString.length() !\u003d VALID_NOTE_ID_LENGTH) {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(INVALID_ID_LENGTH_FORMAT);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"danielkwan2004"},"content":"        return idString;","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JianHao24"},"content":"     * Parses a list command to display notes.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JianHao24"},"content":"     * Accepts an optional -p flag to show only pinned notes.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"danielkwan2004"},"content":"     * Routes to parseListLinkedNotesCommand if the format matches listing linked notes.","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gordonajajar"},"content":"     * @param inputs The tokenized user input split by spaces","lastModifiedDate":"2025-10-29T12:46:53","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"danielkwan2004"},"content":"     * @return A ListNoteCommand or ListLinkedNotesCommand object with the appropriate parameters.","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException If the command format is invalid.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"danielkwan2004"},"content":"    private static Command parseListNoteCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"danielkwan2004"},"content":"        // Check if this is a list linked notes command","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length \u003e\u003d 3) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"danielkwan2004"},"content":"            return parseListLinkedNotesCommand(inputs);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"danielkwan2004"},"content":"        // Regular list command","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length !\u003d 1 \u0026\u0026 inputs.length !\u003d 2) {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(LIST_FORMAT);","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"danielkwan2004"},"content":"        // command is for sure either \"list\" or \"list \u003csomething\u003e\"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JianHao24"},"content":"            return new ListNoteCommand(false);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"danielkwan2004"},"content":"        } else if (!inputs[1].equals(\"-p\")) {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JianHao24"},"content":"            throw new InvalidFormatException(LIST_FORMAT);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JianHao24"},"content":"        return new ListNoteCommand(true);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JianHao24"},"content":"     * Parses an init command to initialize a new repository.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JianHao24"},"content":"     * The repository name must contain only alphanumeric characters, hyphens, and underscores.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gordonajajar"},"content":"     * @param inputs The tokenized user input split by spaces","lastModifiedDate":"2025-10-29T12:46:53","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JianHao24"},"content":"     * @return An InitCommand object with the specified repository name.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException If the repository name is empty or contains invalid characters.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"danielkwan2004"},"content":"    private static Command parseInitCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"danielkwan2004"},"content":"            throw new EmptyDescriptionException(INIT_EMPTY);","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(INIT_FORMAT);","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"danielkwan2004"},"content":"        String content \u003d inputs[1].trim();","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JianHao24"},"content":"        if (content.isEmpty()) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JianHao24"},"content":"            throw new EmptyDescriptionException(INIT_EMPTY);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:30:38","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"shira421"},"content":"        // Validate input - only alphanumeric, hyphens, and underscores","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"shauntsr"},"content":"        if (!content.matches(\"[a-zA-Z0-9_-]+\")) {","lastModifiedDate":"2025-10-16T17:30:38","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JianHao24"},"content":"            throw new InvalidFormatException(INIT_INVALID);","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-16T17:30:38","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JianHao24"},"content":"        return new InitCommand(content);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JianHao24"},"content":"     * Parses a new note command to create a new note with a title and optional body.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JianHao24"},"content":"     * Expected format: new -t TITLE [-b BODY]","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"gordonajajar"},"content":"     * @param inputs The tokenized user input split by spaces","lastModifiedDate":"2025-10-29T12:46:53","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JianHao24"},"content":"     * @return A NewNoteCommand object with the extracted title and body.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException If the format is invalid, title flag is missing, or title is empty.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"danielkwan2004"},"content":"    private static Command parseNewNoteCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"danielkwan2004"},"content":"            String content \u003d String.join(\" \", Arrays.copyOfRange(inputs, 1, inputs.length)).trim();","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JianHao24"},"content":"            int titleIndex \u003d content.indexOf(\"-t\");","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"JianHao24"},"content":"            int bodyIndex \u003d content.indexOf(\"-b\");","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JianHao24"},"content":"            if (titleIndex \u003d\u003d -1) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JianHao24"},"content":"                throw new InvalidFormatException(NOTE_FORMAT);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JianHao24"},"content":"            String title;","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"gordonajajar"},"content":"            String body \u003d null; // newNoteCommand sees null as not provided, \"\" as user wants an empty body.","lastModifiedDate":"2025-10-28T16:12:54","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JianHao24"},"content":"            if (bodyIndex !\u003d -1) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"JianHao24"},"content":"                title \u003d content.substring(titleIndex + 2, bodyIndex).trim();","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"JianHao24"},"content":"                body \u003d content.substring(bodyIndex + 2).trim();","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"JianHao24"},"content":"            } else {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"JianHao24"},"content":"                title \u003d content.substring(titleIndex + 2).trim();","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"JianHao24"},"content":"            if (title.isEmpty()) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"JianHao24"},"content":"                throw new EmptyDescriptionException(NOTE_EMPTY);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JianHao24"},"content":"            return new NewNoteCommand(title, body);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"JianHao24"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"JianHao24"},"content":"            throw new InvalidFormatException(NOTE_FORMAT);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"gordonajajar"},"content":"     * Parses an edit note command to edit an existing note\u0027s body.","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"gordonajajar"},"content":"     * Expected format: edit NOTE_ID","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"gordonajajar"},"content":"     * @param inputs The tokenized user input split by spaces","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"gordonajajar"},"content":"     * @return An EditNoteCommand object with the extracted note ID","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"gordonajajar"},"content":"     * @throws ZettelException If the format is invalid or note ID is missing","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"gordonajajar"},"content":"    private static Command parseEditNoteCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"gordonajajar"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2025-10-29T12:46:53","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"gordonajajar"},"content":"            throw new InvalidFormatException(\"Invalid format. Usage: edit \u003cNOTE_ID\u003e\");","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"gordonajajar"},"content":"        String noteId \u003d parseNoteId(inputs[1], \"edit\");","lastModifiedDate":"2025-10-29T12:46:53","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"gordonajajar"},"content":"        return new EditNoteCommand(noteId);","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"JianHao24"},"content":"     * Parses a find command to search for notes.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"JianHao24"},"content":"     * Expected format: find SEARCH_TERM","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"gordonajajar"},"content":"     * @param inputs The tokenized user input split by spaces","lastModifiedDate":"2025-10-29T12:46:53","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"JianHao24"},"content":"     * @return A FindNoteCommand object with the search query.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException If the search query is empty.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"danielkwan2004"},"content":"    private static Command parseFindNoteCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"danielkwan2004"},"content":"            throw new EmptyDescriptionException(FIND_FORMAT);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"danielkwan2004"},"content":"        String content \u003d inputs[1].trim();","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"JianHao24"},"content":"        if (content.isEmpty()) {","lastModifiedDate":"2025-10-01T00:40:08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"danielkwan2004"},"content":"            throw new EmptyDescriptionException(FIND_FORMAT);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-01T00:40:08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"JianHao24"},"content":"        return new FindNoteCommand(content);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-01T00:40:08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T00:40:08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"JianHao24"},"content":"     * Parses a pin or unpin command to toggle a note\u0027s pinned status.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"JianHao24"},"content":"     * Expected format: pin/unpin NOTE_ID","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"JianHao24"},"content":"     * @param inputs The tokenized user input split by spaces.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"JianHao24"},"content":"     * @param isPin True if pinning the note, false if unpinning.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"JianHao24"},"content":"     * @return A PinNoteCommand object with the note ID and pin status.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException If the format is invalid or note ID is missing/malformed.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"JianHao24"},"content":"    private static Command parsePinNoteCommand(String[] inputs, boolean isPin) throws ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"danielkwan2004"},"content":"            throw new EmptyDescriptionException(ID_EMPTY + (isPin ? \"pin\" : \"unpin\") + \"!\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"JianHao24"},"content":"        if (inputs.length \u003e 2) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"JianHao24"},"content":"            throw new InvalidFormatException(PIN_FORMAT);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"danielkwan2004"},"content":"        String noteId \u003d parseNoteId(inputs[1], isPin ? \"pin\" : \"unpin\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"danielkwan2004"},"content":"        return new PinNoteCommand(noteId, isPin);","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"JianHao24"},"content":"     * Parses a delete command to remove a note.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"JianHao24"},"content":"     * Accepts an optional -f flag for force deletion.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"JianHao24"},"content":"     * Expected format: delete [-f] NOTE_ID","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"JianHao24"},"content":"     * @param inputs The tokenized user input split by spaces.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"JianHao24"},"content":"     * @return A DeleteNoteCommand object with the note ID and force flag.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException If the format is invalid or note ID is missing/malformed.","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"JianHao24"},"content":"    private static Command parseDeleteNoteCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"JianHao24"},"content":"        boolean forceDelete \u003d false;","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"danielkwan2004"},"content":"            throw new EmptyDescriptionException(ID_EMPTY + \"delete!\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"JianHao24"},"content":"        if (inputs.length \u003e 3) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"JianHao24"},"content":"            throw new InvalidFormatException(DELETE_FORMAT);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"gordonajajar"},"content":"        } else if (inputs.length \u003d\u003d 3) {","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"JianHao24"},"content":"            if (!inputs[1].equals(\"-f\")) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"JianHao24"},"content":"                throw new InvalidInputException(DELETE_FORMAT);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"JianHao24"},"content":"            forceDelete \u003d true;","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"danielkwan2004"},"content":"        String noteId \u003d forceDelete ? parseNoteId(inputs[2], \"delete\") : ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"danielkwan2004"},"content":"                parseNoteId(inputs[1], \"delete\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"danielkwan2004"},"content":"        return new DeleteNoteCommand(noteId, forceDelete);","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"shauntsr"},"content":"     * Parses a tag command and delegates to the appropriate subcommand parser.","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"shauntsr"},"content":"     * Supported formats:","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"shauntsr"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"shauntsr"},"content":"     *     \u003cli\u003etag new TAG_NAME\u003c/li\u003e","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"shauntsr"},"content":"     *     \u003cli\u003etag add NOTE_ID TAG_NAME\u003c/li\u003e","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"shauntsr"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"shauntsr"},"content":"     * @param inputs The tokenized user input split by spaces.","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"shauntsr"},"content":"     * @return A TagNoteCommand or an AddTagCommand","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"shauntsr"},"content":"     * @throws ZettelException If the format is invalid or parameters are missing.","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"shauntsr"},"content":"    private static Command parseTagCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"shauntsr"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"shauntsr"},"content":"            throw new InvalidFormatException(TAG_FORMAT);","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"shauntsr"},"content":"        String subCommand \u003d inputs[1].toLowerCase();","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"shauntsr"},"content":"        return switch (subCommand) {","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"shauntsr"},"content":"        case \"add\" -\u003e parseTagNoteCommand(inputs);","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"shauntsr"},"content":"        case \"new\" -\u003e parseNewTagCommand(inputs); ","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"shauntsr"},"content":"        default -\u003e throw new InvalidFormatException(TAG_FORMAT);","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"shauntsr"},"content":"        };","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"shauntsr"},"content":"     * Parses a tag command to add a tag to a note.","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"shauntsr"},"content":"     * Expected Format: tag add NOTE_ID TAG_NAME","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"shauntsr"},"content":"     * @param inputs The tokenized user input split by spaces.","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"shauntsr"},"content":"     * @return A TagNoteCommand object with the note ID and tag.","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"shauntsr"},"content":"     * @throws ZettelException If the format is invalid or parameters are missing.","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"shauntsr"},"content":"    private static Command parseTagNoteCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"shauntsr"},"content":"        if (inputs.length !\u003d 4) {","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"shauntsr"},"content":"            throw new InvalidFormatException(TAG_NOTE_FORMAT);","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"danielkwan2004"},"content":"        String noteId \u003d parseNoteId(inputs[2], \"tag\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"shauntsr"},"content":"        String tag \u003d inputs[3].trim();","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"shauntsr"},"content":"        if (tag.isEmpty()) {","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"shauntsr"},"content":"            throw new EmptyDescriptionException(TAG_EMPTY);","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"shauntsr"},"content":"        return new TagNoteCommand(noteId, tag);","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"shauntsr"},"content":"     * Parses a new tag command to add a new tag to the config file.","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"shauntsr"},"content":"     * Expected Format: tag new TAG_NAME","lastModifiedDate":"2025-10-29T12:34:04","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"shauntsr"},"content":"     * @param inputs The tokenized user input split by spaces.","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"shauntsr"},"content":"     * @return An AddTagCommand object with the tag to add.","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"shauntsr"},"content":"     * @throws ZettelException If the format is invalid or tag is missing.","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"shauntsr"},"content":"    private static Command parseNewTagCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"shauntsr"},"content":"        if (inputs.length !\u003d 3) {","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"shauntsr"},"content":"            throw new InvalidFormatException(NEW_TAG_FORMAT);","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"danielkwan2004"},"content":"        String tag \u003d inputs[2];","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"shauntsr"},"content":"        if (tag.isEmpty()) {","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"shauntsr"},"content":"            throw new EmptyDescriptionException(TAG_EMPTY);","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"shauntsr"},"content":"        return new NewTagCommand(tag);","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"shauntsr"},"content":"     * Parses a command to list all tags globally across all notes.","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"shauntsr"},"content":"     * Expected format: list-tags-all","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"shauntsr"},"content":"     * @param inputs The tokenized user input split by spaces.","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"shauntsr"},"content":"     * @return A ListTagsGlobalCommand object.","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"shauntsr"},"content":"     * @throws ZettelException If the format is invalid.","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"shauntsr"},"content":"    private static Command parseListTagsGlobalCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-29T22:15:32","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"shauntsr"},"content":"        if (inputs.length !\u003d 1) {","lastModifiedDate":"2025-10-29T22:15:32","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"shauntsr"},"content":"            throw new InvalidFormatException(LIST_TAGS_GLOBAL_FORMAT);","lastModifiedDate":"2025-10-29T22:15:32","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-29T22:15:32","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"shauntsr"},"content":"        return new ListTagsGlobalCommand();","lastModifiedDate":"2025-10-29T22:15:32","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-29T22:15:32","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:15:32","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"danielkwan2004"},"content":"     * Parses a link notes command to create a unidirectional link between two notes.","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"danielkwan2004"},"content":"     * @param inputs The tokenized user input split by spaces.","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"danielkwan2004"},"content":"     * @return A LinkNotesCommand object with the note IDs to link.","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"danielkwan2004"},"content":"     * @throws ZettelException If the format is invalid or parameters are missing.","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"danielkwan2004"},"content":"    private static Command parseLinkNotesCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length !\u003d 3) {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(LINK_NOTES_FORMAT);","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"danielkwan2004"},"content":"        String sourceNoteId \u003d parseNoteId(inputs[1], \"link\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"danielkwan2004"},"content":"        String targetNoteId \u003d parseNoteId(inputs[2], \"link\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"danielkwan2004"},"content":"        return new LinkNotesCommand(sourceNoteId, targetNoteId);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"danielkwan2004"},"content":"     * Parses a list linked notes command to display incoming or outgoing links for a specific note.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"danielkwan2004"},"content":"     * Expected format: list incoming-links NOTE_ID or list outgoing-links NOTE_ID","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"danielkwan2004"},"content":"     * @param inputs The tokenized user input split by spaces.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"danielkwan2004"},"content":"     * @return A ListLinkedNotesCommand object with the link type and note ID.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"danielkwan2004"},"content":"     * @throws ZettelException If the format is invalid, link type is invalid, or note ID is malformed.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"danielkwan2004"},"content":"    private static Command parseListLinkedNotesCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"danielkwan2004"},"content":"        // Expected format: list \u003cincoming-links/outgoing-links\u003e \u003cNOTE_ID\u003e","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length !\u003d 3) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(LIST_LINKED_FORMAT);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"danielkwan2004"},"content":"        String linkType \u003d inputs[1].toLowerCase();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"danielkwan2004"},"content":"        String noteId \u003d parseNoteId(inputs[2], \"list linked notes\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"danielkwan2004"},"content":"        // Convert \"incoming-links\" to \"incoming\" and \"outgoing-links\" to \"outgoing\"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"danielkwan2004"},"content":"        String listToShow;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"danielkwan2004"},"content":"        switch (linkType) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"danielkwan2004"},"content":"        case \"incoming-links\" -\u003e listToShow \u003d \"incoming\";","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"danielkwan2004"},"content":"        case \"outgoing-links\" -\u003e listToShow \u003d \"outgoing\";","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"danielkwan2004"},"content":"        default -\u003e throw new InvalidFormatException(LIST_LINKED_TYPE_FORMAT);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"danielkwan2004"},"content":"        return new ListLinkedNotesCommand(listToShow, noteId);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"danielkwan2004"},"content":"     * Parses an unlink notes command to remove a unidirectional link between two notes.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"danielkwan2004"},"content":"     * Expected format: unlink SOURCE_NOTE_ID TARGET_NOTE_ID","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"danielkwan2004"},"content":"     * @param inputs The tokenized user input split by spaces.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"danielkwan2004"},"content":"     * @return An UnlinkNotesCommand object with the source and target note IDs.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"danielkwan2004"},"content":"     * @throws ZettelException If the format is invalid or note IDs are malformed.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"danielkwan2004"},"content":"    private static Command parseUnlinkNotesCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"danielkwan2004"},"content":"        // Expected format: unlink \u003cSOURCE_NOTE_ID\u003e \u003cTARGET_NOTE_ID\u003e","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length !\u003d 3) {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(UNLINK_NOTES_FORMAT);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"danielkwan2004"},"content":"        String sourceNoteId \u003d parseNoteId(inputs[1], \"unlink to\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"danielkwan2004"},"content":"        String targetNoteId \u003d parseNoteId(inputs[2], \"unlink to\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"danielkwan2004"},"content":"        return new UnlinkNotesCommand(sourceNoteId, targetNoteId);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"danielkwan2004"},"content":"     * Parses a link-both notes command to create a bidirectional link between two notes.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"danielkwan2004"},"content":"     * @param inputs The tokenized user input split by spaces.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"danielkwan2004"},"content":"     * @return A LinkBothNotesCommand object with the note IDs to link.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"danielkwan2004"},"content":"     * @throws ZettelException If the format is invalid or parameters are missing.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"danielkwan2004"},"content":"    private static Command parseLinkBothNotesCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"danielkwan2004"},"content":"        // Expected format: link-both \u003cnote_ID_1\u003e \u003cnote_ID_2\u003e","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length !\u003d 3) {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(LINK_BOTH_NOTES_FORMAT);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"danielkwan2004"},"content":"        String sourceNoteId \u003d parseNoteId(inputs[1], \"link in both directions\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"danielkwan2004"},"content":"        String targetNoteId \u003d parseNoteId(inputs[2], \"link in both directions\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"danielkwan2004"},"content":"        return new LinkBothNotesCommand(sourceNoteId, targetNoteId);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"danielkwan2004"},"content":"     * Parses an unlink-both notes command to remove a bidirectional link between two notes.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"danielkwan2004"},"content":"     * @param inputs The tokenized user input split by spaces.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"danielkwan2004"},"content":"     * @return An UnlinkBothNotesCommand object with the note IDs to unlink.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"danielkwan2004"},"content":"     * @throws ZettelException If the format is invalid or parameters are missing.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"danielkwan2004"},"content":"     */    ","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"danielkwan2004"},"content":"    private static Command parseUnlinkBothNotesCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"danielkwan2004"},"content":"        // Expected format: unlink-both \u003cnote_ID_1\u003e \u003cnote_ID_2\u003e","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length !\u003d 3) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(UNLINK_BOTH_NOTES_FORMAT);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"danielkwan2004"},"content":"        String noteId1 \u003d parseNoteId(inputs[1], \"unlink in both directions\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"danielkwan2004"},"content":"        String noteId2 \u003d parseNoteId(inputs[2], \"unlink in both directions\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"danielkwan2004"},"content":"        return new UnlinkBothNotesCommand(noteId1, noteId2);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"danielkwan2004"},"content":"     * Parses a list-tags command to display all tags associated with a specific note.","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"danielkwan2004"},"content":"     * @param inputs The tokenized user input split by spaces.","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"danielkwan2004"},"content":"     * @return A ListTagsIndividualNoteCommand object with the note ID.","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"danielkwan2004"},"content":"     * @throws ZettelException If the format is invalid or note ID is malformed.","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"danielkwan2004"},"content":"    private static Command parseListTagsIndividualNoteCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"danielkwan2004"},"content":"        // expected format: list-tags \u003cNOTE_ID\u003e","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"danielkwan2004"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(LIST_TAGS_INDIVIDUAL_NOTE_FORMAT);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"danielkwan2004"},"content":"        String noteId \u003d parseNoteId(inputs[1], \"list tags for\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"danielkwan2004"},"content":" ","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"danielkwan2004"},"content":"        return new ListTagsIndividualNoteCommand(noteId);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false}],"authorContributionMap":{"gordonajajar":25,"JianHao24":159,"shauntsr":95,"danielkwan2004":238,"shira421":2}},{"path":"src/main/java/seedu/zettel/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T14:13:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gordonajajar"},"content":"/**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gordonajajar"},"content":" * Handles all user interface interactions for Zettel.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gordonajajar"},"content":" * The UI class manages input reading and output display,","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gordonajajar"},"content":" * such as welcome or goodbye messages, note listing and error messages.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gordonajajar"},"content":" */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"public class UI {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"    private static final String LIST_INCOMING \u003d \"incoming\";","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"    private static final String LIST_OUTGOING \u003d \"outgoing\";","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"     * Constructs a UI object and initializes the Scanner for reading user input.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JianHao24"},"content":"    public UI() {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gordonajajar"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gordonajajar"},"content":"     * @return The raw user input string, or \"bye\" if no input is available.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":"    public String readCommand() {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"        if (!scanner.hasNextLine()) {","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"            return \"bye\";  // Auto-exit when no more input (prevents hanging in CI)","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-14T21:18:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"     * Displays the welcome message when the application starts,","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gordonajajar"},"content":"     * including a list of available commands.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JianHao24"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JianHao24"},"content":"        printLine();","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\" Hello! I\u0027m Zettel\");","lastModifiedDate":"2025-10-14T14:22:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JianHao24"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JianHao24"},"content":"        printLine();","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"        System.out.println();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"        System.out.println(\" Available Commands:\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   init \u003crepo-name\u003e             - Initialize a new repository\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   new -t \u003ctitle\u003e [-b \u003cbody\u003e]   - Create a new note\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\"   edit \u003cnote-id\u003e               - Edit an existing note\");","lastModifiedDate":"2025-10-29T00:00:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   list [-p]                    - List all notes (or pinned only)\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   delete [-f] \u003cnote-id\u003e        - Delete a note by ID\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   pin \u003cnote-id\u003e                - Pin a note\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   unpin \u003cnote-id\u003e              - Unpin a note\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"   tag new \u003ctag-name\u003e           - Adds a tag\");","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"   tag add \u003cnote-id\u003e \u003ctag-name\u003e - Tag a note\");","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\"   link \u003csource-id\u003e \u003ctarget-id\u003e - Link two notes\");","lastModifiedDate":"2025-10-29T20:48:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\"   unlink \u003csource-id\u003e \u003ctarget-id\u003e - Unlink two notes\");","lastModifiedDate":"2025-10-29T20:48:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\"   link-both \u003cid1\u003e \u003cid2\u003e        - Link two notes in both directions\");","lastModifiedDate":"2025-10-29T20:48:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\"   unlink-both \u003cid1\u003e \u003cid2\u003e      - Unlink two notes in both directions\");","lastModifiedDate":"2025-10-29T20:48:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\"   list-tags-all                - Lists all tags that exist globally\");","lastModifiedDate":"2025-10-29T23:11:53","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\"   list-tags \u003cnote-id\u003e          - List tags for an individual note\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   find \u003ctext\u003e                  - Search for notes\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   bye                          - Exit the application\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"        System.out.println();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"        printLine();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gordonajajar"},"content":"     * Displays a message indicating that a deletion was cancelled.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gordonajajar"},"content":"    public void showDeletionCancelled() {","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\"Deletion cancelled\");","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gordonajajar"},"content":"     * Displays a message confirming that a note has been deleted.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gordonajajar"},"content":"     * @param id The ID of the deleted note.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gordonajajar"},"content":"    public void showNoteDeleted(String id) {","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\"Note at \" + id + \" deleted\");","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gordonajajar"},"content":"     * Displays a confirmation prompt before deleting a note.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gordonajajar"},"content":"     * @param id The ID of the note to delete.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gordonajajar"},"content":"     * @param noteTitle The title of the note to delete.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"    public void showDeleteConfirmation(String id, String noteTitle) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\"Confirm deletion on \u0027\" + noteTitle + \"\u0027, noteID \" + id + \"? (y/n)\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gordonajajar"},"content":"     * Displays a generic error message.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gordonajajar"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JianHao24"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JianHao24"},"content":"        System.out.println(message);","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gordonajajar"},"content":"     * Displays the goodbye message when the application exits.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JianHao24"},"content":"    public void showBye() {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JianHao24"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gordonajajar"},"content":"     * Displays a message confirming that a note was added.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gordonajajar"},"content":"     * @param note The note that was added.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shauntsr"},"content":"    public void showAddedNote(Note note) {","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"Note created: \" + note.getFilename() + \" #\" + note.getId());","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gordonajajar"},"content":"     * Displays a message when no pinned notes are found.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shauntsr"},"content":"    public void showNoPinnedNotes() {","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"No pinned notes found. Pin a note to add to this list.\\n\");","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gordonajajar"},"content":"     * Displays a message when no notes exist in the repository.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shauntsr"},"content":"    public void showNoNotes() {","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"No notes found.\\n\");","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gordonajajar"},"content":"     * Displays a list of notes.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gordonajajar"},"content":"     * @param notes The list of notes to display.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gordonajajar"},"content":"     * @param isPinned True if displaying only pinned notes; false otherwise.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shauntsr"},"content":"    public void showNoteList(List\u003cNote\u003e notes, boolean isPinned) {","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shauntsr"},"content":"        // Show number of notes found.","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shauntsr"},"content":"        if (isPinned) {","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"You have \" + notes.size() + \" pinned notes:\");","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shauntsr"},"content":"        } else {","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"You have \" + notes.size() + \" notes:\");","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"shauntsr"},"content":"        // Show the list of notes.","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shauntsr"},"content":"        for (int idx \u003d 0; idx \u003c notes.size(); idx++) {","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"    \" + (idx + 1) + \". \" + notes.get(idx));","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gordonajajar"},"content":"     * Prints a horizontal line separator for formatting output.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JianHao24"},"content":"    public void printLine() {","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JianHao24"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gordonajajar"},"content":"     * Closes the scanner.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gordonajajar"},"content":"     * Called when the application terminates.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JianHao24"},"content":"    public void close() {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"shira421"},"content":"        scanner.close();","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"gordonajajar"},"content":"     * Displays a message when no notes match a search query.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"danielkwan2004"},"content":"    public void showNoNotesFound() {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\" No notes found matching the search criteria.\");","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"gordonajajar"},"content":"     * Displays a list of notes that match a search query.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"gordonajajar"},"content":"     * @param matchedNotes The list of notes matching the search.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"danielkwan2004"},"content":"    public void showFoundNotes(ArrayList\u003cNote\u003e matchedNotes) {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\" Here are the matching notes in your list:\");","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"danielkwan2004"},"content":"        for (int i \u003d 0; i \u003c matchedNotes.size(); i++) {","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"shira421"},"content":"            System.out.println(\" \" + (i + 1) + \". \" + matchedNotes.get(i));","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"gordonajajar"},"content":"     * Displays a message confirming that a note has been pinned or unpinned.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"gordonajajar"},"content":"     * @param note The note being pinned or unpinned.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"gordonajajar"},"content":"     * @param noteId The ID of the note.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"shira421"},"content":"    public void showJustPinnedNote(Note note, String noteId) {","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"shira421"},"content":"        System.out.println(\" Got it. I\u0027ve \" + (note.isPinned() ? \"pinned\" : \"unpinned\") + \" this note: \" + noteId);","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"gordonajajar"},"content":"     * Displays a message confirming that a repository has been initialized.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"gordonajajar"},"content":"     * @param repoName The name of the newly created repository.","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:20:42","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"shauntsr"},"content":"    public void showRepoInit(String repoName) {","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\" Repository /\" + repoName + \" has been created.\");","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T00:53:14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"shauntsr"},"content":"    public void showTaggedNote(String noteID, String tag) {","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\" Note #\"+ noteID + \" has been tagged with \u0027\"+ tag + \"\u0027\");","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"shauntsr"},"content":"    public void showTagAdded(String tag) {","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\" Tag \u0027\"+ tag + \"\u0027 has been added.\");","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:47:06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"gordonajajar"},"content":"    public void showOpeningEditor() {","lastModifiedDate":"2025-10-28T16:47:06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\"Opening editor for note body...\");","lastModifiedDate":"2025-10-28T16:47:06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-28T16:47:06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:47:06","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"gordonajajar"},"content":"    public void showNoteSavedFromEditor() {","lastModifiedDate":"2025-10-28T16:47:06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\"Note body saved from editor.\");","lastModifiedDate":"2025-10-28T16:47:06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-28T16:47:06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"gordonajajar"},"content":"    public void showNoteEdited(Note updatedNote) {","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\"Successfully edited note: \" + updatedNote.getFilename() + \", id: \" + updatedNote.getId());","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:46:53","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"danielkwan2004"},"content":"    public void showSuccessfulLinking(String referencingTitle, String linkedToTitle) {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\" Note \u0027\" + referencingTitle + \"\u0027 now links to note \u0027\" + linkedToTitle + \"\u0027.\");","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"danielkwan2004"},"content":"    public void showLinkedNotes(ArrayList\u003cNote\u003e linkedNotes, String noteId, String listToShow) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"danielkwan2004"},"content":"        if (listToShow.equals(LIST_INCOMING)) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"danielkwan2004"},"content":"            System.out.println(\" Here are the notes that link to note #\" + noteId + \" (incoming):\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"danielkwan2004"},"content":"        } else if (listToShow.equals(LIST_OUTGOING)) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"danielkwan2004"},"content":"            System.out.println(\" Here are the notes that note #\" + noteId + \" links to (outgoing):\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"danielkwan2004"},"content":"        for (int i \u003d 0; i \u003c linkedNotes.size(); i++) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"danielkwan2004"},"content":"            System.out.println(\" \" + (i + 1) + \". \" + linkedNotes.get(i));","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"danielkwan2004"},"content":"    public void showSuccessfullyUnlinkedNotes(String sourceNoteId, String targetNoteId) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\" The link from note #\" + sourceNoteId + \" to note #\" + targetNoteId + \" has been removed.\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"danielkwan2004"},"content":"    public void showSuccessfullyDoubleLinkedNotes(String noteTitle1, String noteTitle2) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\" Notes \u0027\" + noteTitle1 + \"\u0027 and \u0027\" + noteTitle2 + \"\u0027 are now linked in both directions.\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"danielkwan2004"},"content":"    public void showSuccessfullyUnlinkedBothNotes(String noteId1, String noteId2) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\" All links between note #\" + noteId1 + \" and note #\" + noteId2 + \" have been removed.\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T23:08:12","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"danielkwan2004"},"content":"    public void showTagsIndividualNote(List\u003cString\u003e tags, String noteId) {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\" Tags for note #\" + noteId + \":\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"danielkwan2004"},"content":"        for (int i \u003d 0; i \u003c tags.size(); i++) {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"danielkwan2004"},"content":"            System.out.println(\" \" + (i + 1) + \". \" + tags.get(i));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T23:08:12","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"shauntsr"},"content":"    public void showTagsListGlobal(List\u003cString\u003e tags) {","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"You have \" + tags.size() + \" tags:\");","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"shauntsr"},"content":"        // Show the list of tags.","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"shauntsr"},"content":"        for (int idx \u003d 0; idx \u003c tags.size(); idx++) {","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"    \" + (idx + 1) + \". \" + tags.get(idx));","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false}],"authorContributionMap":{"gordonajajar":109,"JianHao24":33,"shauntsr":45,"danielkwan2004":59,"shira421":25}},{"path":"src/main/java/seedu/zettel/Zettel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T14:13:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"import java.util.concurrent.ExecutorService;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shira421"},"content":"import java.util.concurrent.Future;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2025-10-15T13:30:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"import java.util.concurrent.TimeoutException;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.Command;","lastModifiedDate":"2025-10-15T13:30:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T13:30:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-15T13:30:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":" * Main class for the Zettel CLI application.","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":" * Handles initialization, storage setup, and the main program loop.","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":" * Zettel is a note-taking system that uses hash-based IDs for notes.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"public class Zettel {","lastModifiedDate":"2025-10-14T14:13:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-15T13:59:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"    private static final String DATA_FILE_PATH \u003d \"data/\";","lastModifiedDate":"2025-10-16T16:21:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"    private static final int READ_TIMEOUT_SECONDS \u003d 240;","lastModifiedDate":"2025-10-15T10:36:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"    private UI ui;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"    private boolean isRunning;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"     * Constructor for Zettel application.","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"     * Initializes the UI, storage, and loads existing notes from disk.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"    public Zettel() {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"        this.storage \u003d new Storage(DATA_FILE_PATH);","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"        storage.init();","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"        this.notes \u003d storage.load();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"        this.tags \u003d storage.readTagsLine();","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"     * Runs the main application loop.","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"     * Displays greeting, processes commands until exit command is received.","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"     * Implements timeout handling to prevent hanging in CI environments.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JianHao24"},"content":"    public void run() {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-15T13:59:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JianHao24"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"        ExecutorService executor \u003d Executors.newSingleThreadExecutor();","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"        while (isRunning) {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"            try {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"                // Read command with timeout","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"                Future\u003cString\u003e future \u003d executor.submit(() -\u003e ui.readCommand());","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"                String userInput;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"                try {","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"                    userInput \u003d future.get(READ_TIMEOUT_SECONDS, TimeUnit.SECONDS);","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"                } catch (TimeoutException e) {","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"                    future.cancel(true);","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"                    ui.showError(\"Input timeout. Exiting...\");","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"                    break;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"                }","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shira421"},"content":"                // Skip empty input","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shira421"},"content":"                if (userInput.trim().isEmpty()) {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shira421"},"content":"                    continue;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"                }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:37:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shira421"},"content":"                // Parse the command","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shira421"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shira421"},"content":"                // Check if it\u0027s an exit command","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shira421"},"content":"                if (command.isExit()) {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shira421"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JianHao24"},"content":"                    break;","lastModifiedDate":"2025-10-14T21:18:38","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JianHao24"},"content":"                }","lastModifiedDate":"2025-10-14T21:18:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"                // Execute the command","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"                command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shira421"},"content":"                // Save notes after each command (auto-save)","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shira421"},"content":"                storage.save(notes);","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JianHao24"},"content":"            } catch (ZettelException e) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JianHao24"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shira421"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shira421"},"content":"                ui.showError(\"An unexpected error occurred: \" + e.getMessage());","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shira421"},"content":"                break;","lastModifiedDate":"2025-10-15T00:25:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shira421"},"content":"        executor.shutdownNow();","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JianHao24"},"content":"        ui.close();","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shira421"},"content":"     * Main entry-point for the Zettel application.","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shira421"},"content":"     * @param args Command line arguments (not used)","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JianHao24"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shira421"},"content":"        new Zettel().run();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"gordonajajar":5,"JianHao24":20,"shauntsr":6,"danielkwan2004":4,"-":4,"shira421":69}},{"path":"src/main/java/seedu/zettel/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-29T20:48:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-29T20:48:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gordonajajar"},"content":"/**","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":" * Represents an abstract command that can be executed in Zettel.","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":" * A Command object defines execution of user input.","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":" * Subclasses implement specific command behaviors such as adding, deleting, or listing notes.","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gordonajajar"},"content":" */","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"public abstract class Command {","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"     * Executes the command with the given task list, UI, and storage.","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"     * This method must be implemented by subclasses to define specific command behavior.","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gordonajajar"},"content":"     * @param notes   The list of tasks to operate on.","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"     * @param tags    The list of current tags.","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gordonajajar"},"content":"     * @param ui      The UI object for displaying output to the user.","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gordonajajar"},"content":"     * @param storage The storage object for reading or writing changes to file.","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gordonajajar"},"content":"     * @throws ZettelException If an error occurs during command execution.","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    public abstract void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage)","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"            throws ZettelException;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"     * Checks if this command should terminate the application.","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"     * Returns false by default. Subclasses can override to return true for exit commands.","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gordonajajar"},"content":"     * @return True if this command exits the application, false otherwise.","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T16:57:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"        return false;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false}],"authorContributionMap":{"gordonajajar":20,"shauntsr":4,"danielkwan2004":16}},{"path":"src/main/java/seedu/zettel/commands/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"import java.util.Optional;","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T00:49:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":" * Command to delete a note by its ID.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":" * Supports optional force deletion to skip confirmation prompt.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"public class DeleteNoteCommand extends Command {","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-17T16:55:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"    private final String noteId;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gordonajajar"},"content":"    private final boolean isForce;","lastModifiedDate":"2025-10-17T16:55:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"     * Constructs a DeleteNoteCommand with the specified note ID and force flag.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"     * @param noteId The 8-character hexadecimal note ID to delete","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"     * @param force true to skip confirmation, false to prompt user","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gordonajajar"},"content":"    public DeleteNoteCommand(String noteId, boolean force) {","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"        this.noteId \u003d noteId;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"        this.isForce \u003d force;","lastModifiedDate":"2025-10-17T16:55:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"     * Executes the delete command on the specified note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"     * Prompts for confirmation unless force flag is set.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"     * @param notes   The list of all notes","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"     * @param tags    The list of current tags.","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"     * @param ui      The UI instance for user interaction","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"     * @param storage The storage instance for persistence","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If the notes list is empty or the note doesn\u0027t exist","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gordonajajar"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 1: Check if the notes list is empty","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"You have no notes to delete.\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 2: Check if note with the given ID exists","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"        Optional\u003cNote\u003e maybe \u003d notes.stream().filter(n -\u003e n.getId().equals(noteId)).findFirst();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gordonajajar"},"content":"        if (maybe.isEmpty()) {","lastModifiedDate":"2025-10-14T22:13:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\" + noteId + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"        // Happy path: Execute the delete operation","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gordonajajar"},"content":"        Note note \u003d maybe.get();","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-18T22:32:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gordonajajar"},"content":"        assert note !\u003d null : \"Note should not be null\";","lastModifiedDate":"2025-10-18T22:35:28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-15T13:59:19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gordonajajar"},"content":"        boolean shouldDelete \u003d isForce;","lastModifiedDate":"2025-10-17T16:55:13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gordonajajar"},"content":"        if (!isForce) {","lastModifiedDate":"2025-10-17T16:55:13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"            ui.showDeleteConfirmation(noteId, note.getTitle());","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gordonajajar"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gordonajajar"},"content":"            String input \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gordonajajar"},"content":"            shouldDelete \u003d input.equals(\"y\") || input.equals(\"yes\");","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gordonajajar"},"content":"        if (shouldDelete) {","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JianHao24"},"content":"            // Delete the physical body file from notes/ directory","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JianHao24"},"content":"            storage.deleteStorageFile(note.getFilename());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JianHao24"},"content":"            // Remove note from ArrayList (this removes metadata)","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gordonajajar"},"content":"            notes.remove(note);","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JianHao24"},"content":"            // Save updated index (writes to index.txt)","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gordonajajar"},"content":"            storage.save(notes);","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JianHao24"},"content":"            // Log and show confirmation","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"danielkwan2004"},"content":"            ui.showNoteDeleted(noteId);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gordonajajar"},"content":"        } else {","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gordonajajar"},"content":"            ui.showDeletionCancelled();","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false}],"authorContributionMap":{"gordonajajar":43,"JianHao24":8,"shauntsr":3,"danielkwan2004":17,"shira421":19}},{"path":"src/main/java/seedu/zettel/commands/EditNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.EditorNotFoundException;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.NoNoteFoundException;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.util.EditorUtil;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gordonajajar"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":"import java.util.List;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gordonajajar"},"content":"/**","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":" * Command to edit an existing note\u0027s body in the default text editor.","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gordonajajar"},"content":" * The note is identified by its ID hash and only the body content can be modified.","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":" */","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"public class EditNoteCommand extends Command {","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"    private final String noteId;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":"     * Constructs an EditNoteCommand with the specified note ID.","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gordonajajar"},"content":"     * @param noteId The ID of the note to edit","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gordonajajar"},"content":"    public EditNoteCommand(String noteId) {","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gordonajajar"},"content":"        this.noteId \u003d noteId;","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"     * Executes the command to edit a note\u0027s body in a text editor.","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"     * Opens the note file in the default editor, waits for it to close,","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gordonajajar"},"content":"     * then refreshes the notes list from storage.","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gordonajajar"},"content":"     * @param notes   The list of existing notes","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gordonajajar"},"content":"     * @param tags    The list of current tags","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"     * @param ui      The UI instance for user interaction","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gordonajajar"},"content":"     * @param storage The storage instance for persistence","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gordonajajar"},"content":"     * @throws ZettelException If the note is not found or editor operations fail","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gordonajajar"},"content":"    @Override","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gordonajajar"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage)","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gordonajajar"},"content":"            throws ZettelException {","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gordonajajar"},"content":"        // Find the note with matching ID","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gordonajajar"},"content":"        Note targetNote \u003d notes.stream()","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gordonajajar"},"content":"                .filter(n -\u003e n.getId().equals(noteId))","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gordonajajar"},"content":"                .findFirst()","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gordonajajar"},"content":"                .orElseThrow(() -\u003e new NoNoteFoundException(\"Note with ID \u0027\" + noteId + \"\u0027 not found.\"));","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gordonajajar"},"content":"        String filename \u003d targetNote.getFilename();","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gordonajajar"},"content":"        Path notePath \u003d storage.getNotePath(filename);","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gordonajajar"},"content":"        try {","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gordonajajar"},"content":"            ui.showOpeningEditor();","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gordonajajar"},"content":"            EditorUtil.openInEditor(notePath);","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gordonajajar"},"content":"            // Refresh ArrayList with all notes from Storage, after editing on disk","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gordonajajar"},"content":"            ArrayList\u003cNote\u003e reloadedNotes \u003d storage.load();","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gordonajajar"},"content":"            notes.clear();","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gordonajajar"},"content":"            notes.addAll(reloadedNotes);","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gordonajajar"},"content":"            // Find the updated note to show confirmation","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gordonajajar"},"content":"            Note updatedNote \u003d notes.stream()","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gordonajajar"},"content":"                    .filter(n -\u003e n.getId().equals(noteId))","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gordonajajar"},"content":"                    .findFirst()","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gordonajajar"},"content":"                    .orElseThrow(() -\u003e new NoNoteFoundException(\"Note disappeared after editing\"));","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gordonajajar"},"content":"            ui.showNoteEdited(updatedNote);","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gordonajajar"},"content":"        } catch (EditorNotFoundException e) {","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gordonajajar"},"content":"            throw new ZettelException(\"Failed to open editor: \" + e.getMessage());","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gordonajajar"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gordonajajar"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gordonajajar"},"content":"            throw new ZettelException(\"Editor was interrupted: \" + e.getMessage());","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gordonajajar"},"content":"        } catch (NoNoteFoundException e) {","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gordonajajar"},"content":"            throw new ZettelException(\"Note file not found: \" + e.getMessage());","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-28T21:52:26","isFullCredit":false}],"authorContributionMap":{"gordonajajar":82}},{"path":"src/main/java/seedu/zettel/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JianHao24"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gordonajajar"},"content":"/**","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":" * Command to exit the Zettel application.","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":" * An ExitCommand displays a goodbye message and signals the application to terminate.","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":" */","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"     * Executes the exit command by displaying a goodbye message to the user.","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"     * @param tags The list of current tags.","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gordonajajar"},"content":"     * @param ui   The UI object for displaying the goodbye message.","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JianHao24"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gordonajajar"},"content":"        ui.showBye();","lastModifiedDate":"2025-10-15T00:48:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-15T00:48:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-15T00:48:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gordonajajar"},"content":"     * Indicates that this command should terminate the application.","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gordonajajar"},"content":"     * @return True, as this command exits the application.","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T16:58:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"    @Override","lastModifiedDate":"2025-10-15T00:48:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gordonajajar"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-15T00:48:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gordonajajar"},"content":"        return true;","lastModifiedDate":"2025-10-15T00:48:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false}],"authorContributionMap":{"gordonajajar":22,"JianHao24":12,"shauntsr":3}},{"path":"src/main/java/seedu/zettel/commands/FindNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T00:14:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":"/**","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":" * Command to find notes containing a given keyword in their body.","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":" * Performs a case-insensitive search across all existing notes.","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gordonajajar"},"content":" */","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"public class FindNoteCommand extends Command{","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"    private final String keyword;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"     * Constructs a FindNoteCommand with the specified search keyword.","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gordonajajar"},"content":"     * @param keyword The keyword to search for in note body.","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"    public FindNoteCommand(String keyword) {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gordonajajar"},"content":"     * Executes the find command to search for notes containing the specified keyword.","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gordonajajar"},"content":"     * The search is case-insensitive and matches any note whose body includes the keyword.","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gordonajajar"},"content":"     * Displays the matching notes or a \"no results\" message if none are found.","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"     * @param notes   The list of existing notes","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"     * @param tags","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gordonajajar"},"content":"     * @param ui      The UI instance for user interaction","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gordonajajar"},"content":"     * @param storage The storage instance for persistence","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gordonajajar"},"content":"     * @throws ZettelException If the notes list is empty","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:01:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JianHao24"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"There are no notes available to search.\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"        assert notes !\u003d null : \"Notes list should not be null\";","lastModifiedDate":"2025-10-15T13:30:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e matchedNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"        for (Note note: notes) {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"            if (note.getBody().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"                matchedNotes.add(note);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"            }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        if (matchedNotes.isEmpty()) {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"            ui.showNoNotesFound();","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"        } else {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"            ui.showFoundNotes(matchedNotes);","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false}],"authorContributionMap":{"gordonajajar":22,"JianHao24":8,"shauntsr":3,"danielkwan2004":24}},{"path":"src/main/java/seedu/zettel/commands/InitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T23:13:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T23:13:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gordonajajar"},"content":"/**","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":" * Command to initialize a new Zettel repository with the specified name.","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":" * Creates a folder structure containing notes, archive, and index files.","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":" */","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"public class InitCommand extends Command {","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T23:13:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gordonajajar"},"content":"    /** The name of the repository to initialize. */","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"    private final String repoName;","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gordonajajar"},"content":"     * Constructs an InitCommand with the specified repository name.","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":"     * @param repoName The name of the repository to create","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"    public InitCommand(String repoName) {","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"        assert repoName !\u003d null: \"Repo name should not be null.\" ;","lastModifiedDate":"2025-10-17T16:21:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"        this.repoName \u003d repoName;","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gordonajajar"},"content":"     * Executes the repository initialization command.","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"     * Creates a new repository directory structure and","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"     * notifies the user of successful initialization.","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gordonajajar"},"content":"     * @param notes   The list of notes (not used)","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"     * @param tags","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gordonajajar"},"content":"     * @param ui      The UI instance for user interaction","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"     * @param storage The storage instance for file and directory management","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gordonajajar"},"content":"     * @throws ZettelException If an error occurs during repository creation","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:03:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JianHao24"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"        storage.createRepo(repoName);","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"        ui.showRepoInit(repoName);","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false}],"authorContributionMap":{"gordonajajar":27,"JianHao24":9,"shauntsr":10}},{"path":"src/main/java/seedu/zettel/commands/LinkBothNotesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.util.Optional;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoteSelfLinkException;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NotesAlreadyLinkedException;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":" * Represents a command to create a bidirectional link between two notes.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":" * This command creates links in both directions, meaning both notes will have","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":" * outgoing and incoming links to each other, allowing navigation in either direction.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"public class LinkBothNotesCommand extends Command {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"    private final String noteId1;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"    private final String noteId2;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a LinkBothNotesCommand for linking two notes by their IDs in both directions.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"     * @param noteId1 The ID of the first note to link.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"     * @param noteId2 The ID of the second note to link.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"    public LinkBothNotesCommand(String noteId1, String noteId2) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"        this.noteId1 \u003d noteId1;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"        this.noteId2 \u003d noteId2;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"     * Executes the bidirectional link command by creating links between the two notes in both directions.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"     * Performs multiple validations before linking:","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"     * 1. Checks if the notes list is empty","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"     * 2. Verifies both notes exist in the notes list","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"     * 3. Checks for self-link attempts","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"     * 4. Verifies a bidirectional link doesn\u0027t already exist","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"     * ","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"     * If a unidirectional link already exists, only the missing direction will be added.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"     * @param notes The list of all notes in the system.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"     * @param tags The list of all tags in the system (unused in this command).","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"     * @param ui The UI object to display messages to the user.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"     * @param storage The storage object to persist changes (unused in this command).","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"     * @throws NoNotesException If the notes list is empty.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"     * @throws InvalidNoteIdException If either note does not exist.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"     * @throws NoteSelfLinkException If attempting to link a note to itself.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"     * @throws NotesAlreadyLinkedException If a bidirectional link already exists between the notes.","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"    @Override","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) throws ","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"            NoNotesException, InvalidNoteIdException, NotesAlreadyLinkedException,","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"            NoteSelfLinkException {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"        // If no notes at all in the list, throw an exception","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"You have no notes to link.\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"        // Try to find both notes","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"        Optional\u003cNote\u003e note1 \u003d notes.stream()","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"                .filter(n -\u003e n.getId().equals(noteId1))","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"                .findFirst();","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"        if (note1.isEmpty()) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\"+ noteId1 + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"        Optional\u003cNote\u003e note2 \u003d notes.stream()","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"                .filter(n -\u003e n.getId().equals(noteId2))","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"                .findFirst();","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"        if (note2.isEmpty()) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\"+ noteId2 + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"        // Check if attempting to link a note to itself","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"        if (noteId1.equals(noteId2)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoteSelfLinkException(\"Cannot link a note to itself. Note ID: \u0027\" + noteId1 + \"\u0027.\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"danielkwan2004"},"content":"        // Check if two-way link already exists","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"        if (note1.get().isLinkedTo(noteId2) \u0026\u0026 note2.get().isLinkedTo(noteId1)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"            throw new NotesAlreadyLinkedException(\"Note with ID \u0027\" + noteId1","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"                    + \"\u0027 already links in both directions to note with ID \u0027\" + noteId2 + \"\u0027.\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"        // Create the two-way link","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"        // If a partial link already exists, only add the missing direction(s)","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"        // to prevent duplicates","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"        // Add links from note1 to note2 if not already present","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"        if (!note1.get().isLinkedTo(noteId2)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"            note1.get().addOutgoingLink(noteId2);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"        if (!note1.get().isLinkedBy(noteId2)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"            note1.get().addIncomingLink(noteId2);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"danielkwan2004"},"content":"        // Add links from note2 to note1 if not already present","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"danielkwan2004"},"content":"        if (!note2.get().isLinkedTo(noteId1)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"danielkwan2004"},"content":"            note2.get().addOutgoingLink(noteId1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"        if (!note2.get().isLinkedBy(noteId1)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"            note2.get().addIncomingLink(noteId1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"danielkwan2004"},"content":"        ui.showSuccessfullyDoubleLinkedNotes(note1.get().getTitle(), note2.get().getTitle());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":115}},{"path":"src/main/java/seedu/zettel/commands/LinkNotesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.util.Optional;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoteSelfLinkException;","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NotesAlreadyLinkedException;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"public class LinkNotesCommand extends Command {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"    private final String sourceNoteId;","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"    private final String targetNoteId;","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a LinkNotesCommand for linking two notes by their IDs.","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"     * @param sourceNoteId The ID of the source note that creates the link.","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"     * @param targetNoteId The ID of the target note that receives the link.","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"    public LinkNotesCommand(String sourceNoteId, String targetNoteId) {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"        this.sourceNoteId \u003d sourceNoteId;","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"        this.targetNoteId \u003d targetNoteId;","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"    @Override","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) throws ","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"            NoNotesException, InvalidNoteIdException, NotesAlreadyLinkedException,","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"            NoteSelfLinkException {","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"        // If no notes at all in the list, throw an exception","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"You have no notes to link.\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        // Try to find both notes","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"        Optional\u003cNote\u003e sourceNote \u003d notes.stream()","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"                .filter(n -\u003e n.getId().equals(sourceNoteId))","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"                .findFirst();","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"        if (sourceNote.isEmpty()) {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\"+ sourceNoteId + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        Optional\u003cNote\u003e targetNote \u003d notes.stream()","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"                .filter(n -\u003e n.getId().equals(targetNoteId))","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"                .findFirst();","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"        if (targetNote.isEmpty()) {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\"+ targetNoteId + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"        // Check if attempting to link a note to itself","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"        if (sourceNoteId.equals(targetNoteId)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoteSelfLinkException(\"Cannot link a note to itself. Note ID: \u0027\" + sourceNoteId + \"\u0027.\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"        // Check if link already exists","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"        if (sourceNote.get().isLinkedTo(targetNoteId)) {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"            throw new NotesAlreadyLinkedException(\"Note with ID \u0027\" + sourceNoteId","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"                    + \"\u0027 already links to note with ID \u0027\" + targetNoteId + \"\u0027.\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"        // Create unidirectional link","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"        sourceNote.get().addIncomingLink(targetNoteId);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"        targetNote.get().addOutgoingLink(sourceNoteId);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"        ui.showSuccessfulLinking(sourceNote.get().getTitle(), targetNote.get().getTitle());","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":75}},{"path":"src/main/java/seedu/zettel/commands/ListLinkedNotesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import java.util.Optional;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"public class ListLinkedNotesCommand extends Command {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"    private static final String LIST_INCOMING \u003d \"incoming\";","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"    private static final String LIST_OUTGOING \u003d \"outgoing\";","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"    private HashSet\u003cString\u003e outgoingLinks;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"    private HashSet\u003cString\u003e incomingLinks;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"    private String listToShow; // \"incoming\" or \"outgoing\" ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"    private String noteId;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"    public ListLinkedNotesCommand(String listToShow, String noteId) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"        this.listToShow \u003d listToShow;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"        this.noteId \u003d noteId;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"    @Override","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"            throws NoNotesException, InvalidInputException, InvalidNoteIdException {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 1: Check if notes list is empty","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"You have no notes to list links from.\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 2: Validate listToShow parameter","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"        if (!listToShow.equals(LIST_INCOMING) \u0026\u0026 !listToShow.equals(LIST_OUTGOING)) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidInputException(\"Invalid list type: \u0027\" + listToShow ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"                    + \"\u0027. Must be \u0027incoming\u0027 or \u0027outgoing\u0027.\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 3: Check if note with the given ID exists","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"        Optional\u003cNote\u003e maybe \u003d notes.stream().filter(n -\u003e n.getId().equals(noteId)).findFirst();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"        if (maybe.isEmpty()) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\" + noteId + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"        Note note \u003d maybe.get();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"        // get the links from the note","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        outgoingLinks \u003d note.getOutgoingLinks();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"        incomingLinks \u003d note.getIncomingLinks();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 4: Check if the note has any links of the requested type","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"        if (listToShow.equals(LIST_INCOMING) \u0026\u0026 incomingLinks.isEmpty()) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"Note with ID \u0027\" + noteId + \"\u0027 has no incoming links.\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T16:15:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:15:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"        if (listToShow.equals(LIST_OUTGOING) \u0026\u0026 outgoingLinks.isEmpty()) {","lastModifiedDate":"2025-10-28T16:15:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"Note with ID \u0027\" + noteId + \"\u0027 has no outgoing links.\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"        // at this point, we know we have links to show","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"        // so we can proceed to show them in UI","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e linkedNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"        for (Note n : notes) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"            if (listToShow.equals(LIST_OUTGOING) \u0026\u0026 outgoingLinks.contains(n.getId()) ||","lastModifiedDate":"2025-10-28T16:15:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"                    listToShow.equals(LIST_INCOMING) \u0026\u0026 incomingLinks.contains(n.getId())) {","lastModifiedDate":"2025-10-28T16:15:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"                linkedNotes.add(n);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"            }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"        // Edge case: Check if we found any actual notes (in case of orphaned/broken links)","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"        if (linkedNotes.isEmpty()) {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"Note with ID \u0027\" + noteId + \"\u0027 has \" + listToShow ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"                    + \" links, but the linked notes no longer exist.\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"        ui.showLinkedNotes(linkedNotes, noteId, listToShow);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":82}},{"path":"src/main/java/seedu/zettel/commands/ListNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-26T23:48:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":"/**","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":" * Command to list notes in the current repository.","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gordonajajar"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":" * Notes are sorted by creation time in descending order (most recent first).","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gordonajajar"},"content":" * Can optionally filter to display only pinned notes.","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":" */","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JianHao24"},"content":"public class ListNoteCommand extends Command{","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"    private final boolean showsPinnedOnly;","lastModifiedDate":"2025-10-14T21:49:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T21:49:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gordonajajar"},"content":"     * Constructs a ListNoteCommand.","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gordonajajar"},"content":"     * @param showsPinnedOnly If true, only pinned notes will be listed;","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gordonajajar"},"content":"     *                        if false, all notes are listed.","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"    public ListNoteCommand(boolean showsPinnedOnly) {","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"        this.showsPinnedOnly \u003d showsPinnedOnly;","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gordonajajar"},"content":"     * Executes the command to display notes.","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gordonajajar"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gordonajajar"},"content":"     * The notes are first sorted by creation time (newest first),","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gordonajajar"},"content":"     * then filtered based on the showsPinnedOnly flag.","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"     * If no notes are found, appropriate UI messages are displayed.","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gordonajajar"},"content":"     * @param notes   The list of all notes","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"     * @param tags    The list of current tags.","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gordonajajar"},"content":"     * @param ui      The UI instance for user interaction","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gordonajajar"},"content":"     * @param storage The storage instance (not used)","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gordonajajar"},"content":"     * @throws ZettelException If an error occurs during command execution","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-17T17:15:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JianHao24"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) throws ZettelException{","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"        // Add notes","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"        notes.sort(Comparator.comparing(Note::getCreatedAt).reversed());","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"        List\u003cNote\u003e filtered \u003d notes.stream()","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"                .filter(n -\u003e !showsPinnedOnly || n.isPinned())","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"                .toList();","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"        // Case 1: Cannot find any pinned notes to list","lastModifiedDate":"2025-10-26T23:48:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"        if (filtered.isEmpty() \u0026\u0026 showsPinnedOnly) {","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"            throw new NoNotesException(\"No pinned notes found. Pin a note to add to this list.\");","lastModifiedDate":"2025-10-26T23:48:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"        // Case 2: Cannot find any notes at all to list","lastModifiedDate":"2025-10-26T23:48:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"        if (filtered.isEmpty()) {","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"            throw new NoNotesException(\"No notes found.\");","lastModifiedDate":"2025-10-26T23:48:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"        ui.showNoteList(filtered, showsPinnedOnly);","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false}],"authorContributionMap":{"gordonajajar":29,"JianHao24":11,"shauntsr":27}},{"path":"src/main/java/seedu/zettel/commands/ListTagsGlobalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"/**","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":" * Command to list all tags available globally across all notes.","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":" * Displays every unique tag present in the repository, regardless of which note it belongs to.","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":" * Throws an exception if there are no tags to display.","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":" */","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"public class ListTagsGlobalCommand extends Command {","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"     * Constructs a {@code ListTagsGlobalCommand}.","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"    public ListTagsGlobalCommand() {","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"     * Executes the command to display all global tags.","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"     * @param notes   The list of all notes in the repository (unused in this command).","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"     * @param tags    The list of all unique tags available globally.","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"     * @param ui      The UI instance used to display the global tag list.","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"     * @param storage The storage instance (unused in this command).","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"     * @throws ZettelException If there are no tags to list.","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-29T22:22:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"    @Override","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"            throw new ZettelException(\"There are no tags to list\");","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"        ui.showTagsListGlobal(tags);","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-29T22:05:21","isFullCredit":false}],"authorContributionMap":{"shauntsr":42}},{"path":"src/main/java/seedu/zettel/commands/ListTagsIndividualNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.util.Optional;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoTagsException;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"public class ListTagsIndividualNoteCommand extends Command {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"    private String noteId;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"    public ListTagsIndividualNoteCommand(String noteId) {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"        this.noteId \u003d noteId;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"    @Override","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) ","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"            throws NoNotesException, InvalidInputException, InvalidNoteIdException, NoTagsException {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 1: Check if notes list is empty","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"You have no notes to list tags of.\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 2: Check if note with the given ID exists","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"        Optional\u003cNote\u003e maybe \u003d notes.stream().filter(n -\u003e n.getId().equals(noteId)).findFirst();","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"        if (maybe.isEmpty()) {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\" + noteId + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 3: Check if tag list is empty for that individual note","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"        if (maybe.get().getTags().isEmpty()) {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoTagsException(\"No tags are tagged to note with ID \u0027\" + noteId + \"\u0027.\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"        // Show the tags for the individual note","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        ui.showTagsIndividualNote(maybe.get().getTags(), noteId);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":45}},{"path":"src/main/java/seedu/zettel/commands/NewNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.EditorNotFoundException;","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.NoNoteFoundException;","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.util.EditorUtil;","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"import seedu.zettel.util.IdGenerator;","lastModifiedDate":"2025-10-17T11:24:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-15T00:36:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gordonajajar"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":" * Command to create a new note with a given title and optional body.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":" * Generates a deterministic ID based on the title and creation timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JianHao24"},"content":"public class NewNoteCommand extends Command {","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"    private final String title;","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"    private final String body;","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gordonajajar"},"content":"    private final boolean shouldOpenEditor;","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"     * Constructs a NewNoteCommand with the specified title and body.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"     * @param title The title of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"     * @param body The body content of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"    public NewNoteCommand(String title, String body) {","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gordonajajar"},"content":"        this.body \u003d body \u003d\u003d null ? \"\" : body;","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"        this.shouldOpenEditor \u003d (body \u003d\u003d null);","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"     * Executes the command to create a new note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"     * Generates a hash-based ID from title and timestamp,","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"     * checks for duplicate filenames, and saves the note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"     * @param notes   The list of existing notes","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"     * @param tags    The list of current tags.","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"     * @param ui      The UI instance for user interaction","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"     * @param storage The storage instance for persistence","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If a note with the same filename already exists","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JianHao24"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"        assert title !\u003d null : \"Title should not be null\";","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"        Instant now \u003d Instant.now();","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"        // Generate deterministic ID based on title and timestamp","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"        String idInput \u003d title + now.toString();","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(idInput);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T13:58:06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"        String filename \u003d title.replaceAll(\"\\\\s+\", \"_\") + \".txt\";","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"        // Check if filename already exists","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"        boolean filenameExists \u003d notes.stream()","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"                .anyMatch(n -\u003e n.getFilename().equals(filename));","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"        if (filenameExists) {","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"            throw new InvalidInputException(\"Note already exists!\");","lastModifiedDate":"2025-10-15T00:36:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"        Note newNote \u003d new Note(","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"                id,","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"                title,","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"                filename,","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"                body,","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"                now,","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"                now","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"        );","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gordonajajar"},"content":"        // Save note to disk","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"        notes.add(newNote);","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T03:16:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gordonajajar"},"content":"        storage.createStorageFile(newNote);","lastModifiedDate":"2025-10-20T03:16:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"        storage.save(notes);","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gordonajajar"},"content":"        // If no body was provided, open in editor","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gordonajajar"},"content":"        if (shouldOpenEditor) {","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gordonajajar"},"content":"            try {","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gordonajajar"},"content":"                Path notePath \u003d storage.getNotePath(filename);","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gordonajajar"},"content":"                ui.showOpeningEditor();","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gordonajajar"},"content":"                EditorUtil.openInEditor(notePath);","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gordonajajar"},"content":"                // Read the edited content from disk back into Object","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gordonajajar"},"content":"                String editedBody \u003d Files.readString(notePath);","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gordonajajar"},"content":"                newNote.setBody(editedBody);","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gordonajajar"},"content":"                // Update the modified timestamp and save again (to update timestamp)","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gordonajajar"},"content":"                newNote.updateModifiedAt();","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gordonajajar"},"content":"                storage.save(notes);","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gordonajajar"},"content":"                ui.showNoteSavedFromEditor();","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gordonajajar"},"content":"            } catch (EditorNotFoundException e) {","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gordonajajar"},"content":"                throw new EditorNotFoundException(\"Could not open text editor, empty body will be used: \" +","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gordonajajar"},"content":"                        e.getMessage());","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gordonajajar"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gordonajajar"},"content":"                Thread.currentThread().interrupt(); // preserves interrupted state","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gordonajajar"},"content":"                throw new ZettelException(\"Editor was interrupted: \" + e.getMessage());","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gordonajajar"},"content":"            } catch (NoNoteFoundException e) {","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gordonajajar"},"content":"                throw new NoNoteFoundException(\"Failed to open note file: \" + e.getMessage());","lastModifiedDate":"2025-10-29T13:15:29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gordonajajar"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gordonajajar"},"content":"                throw new ZettelException(\"Failed to read edited content: \" + e.getMessage());","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gordonajajar"},"content":"            }","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:47:36","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shauntsr"},"content":"        ui.showAddedNote(newNote);","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false}],"authorContributionMap":{"gordonajajar":46,"JianHao24":12,"shauntsr":32,"shira421":28}},{"path":"src/main/java/seedu/zettel/commands/NewTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.InvalidFormatException;","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.TagAlreadyExistsException;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"/**","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":" * Command to add a new tag to the global list of tags.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":" */","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"public class NewTagCommand extends Command {","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"    private final String tag;","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"     * Constructs a NewTagCommand with the specified tag.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"     * @param tag The tag to add.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"    public NewTagCommand(String tag) {","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"     * Executes the command to add the tag.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"     * Validates the tag, adds it to the global list if not present,","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"     * persists the updated tags in storage, and shows UI feedback.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"     * @param notes List of notes in the repository (not used in this command).","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"     * @param tags Global list of tags.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"     * @param ui UI object to display messages.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"     * @param storage Storage object to persist changes.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"     * @throws ZettelException If the tag is invalid or already exists.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"    @Override","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"        if (tag \u003d\u003d null || tag.isBlank()) {","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"            throw new InvalidFormatException(\"No tag provided to add.\");","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"        if (tags.contains(tag)) {","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"            throw new TagAlreadyExistsException(tag + \" already exists.\");","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"        tags.add(tag);","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"        storage.updateTags(tags);","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"        ui.showTagAdded(tag);","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-26T05:18:55","isFullCredit":false}],"authorContributionMap":{"shauntsr":48,"danielkwan2004":5}},{"path":"src/main/java/seedu/zettel/commands/PinNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"import java.util.Optional;","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-17T20:29:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.AlreadyPinnedException;","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shira421"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":" * Command to pin or unpin a note by its ID.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":" * Pinned notes can be listed separately for quick access.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"public class PinNoteCommand extends Command {","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"    private static final Logger logger \u003d Logger.getLogger(PinNoteCommand.class.getName());","lastModifiedDate":"2025-10-17T20:29:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"    private final boolean isPin;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"    private final String noteId;","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"     * Constructs a PinNoteCommand with the specified note ID and pin status.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"     * @param noteId The 8-character hexadecimal note ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"     * @param isPin true to pin the note, false to unpin","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"    public PinNoteCommand(String noteId, boolean isPin) {","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"        this.noteId \u003d noteId;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"        this.isPin \u003d isPin;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"    ","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"     * Executes the pin/unpin command on the specified note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"     * @param notes   The list of all notes","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"     * @param tags    The list of current tags.","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"     * @param ui      The UI instance for user interaction","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"     * @param storage The storage instance for persistence","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If the note ID is invalid or the note doesn\u0027t exist","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"    @Override","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"        logger.info(\"Executing PinNoteCommand for noteId: \" + noteId);","lastModifiedDate":"2025-10-17T20:29:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 1: Check if the notes list is empty","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"You have no notes to pin/unpin.\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 2: Check if note with the given ID exists","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"        Optional\u003cNote\u003e maybe \u003d notes.stream().filter(n -\u003e n.getId().equals(noteId)).findFirst();","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"        if (maybe.isEmpty()) {","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\" + noteId + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"        // Happy path: Execute the pin/unpin operation","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"        Note note \u003d maybe.get();","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"        if (note.isPinned() \u003d\u003d isPin) {","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"            throw new AlreadyPinnedException(\"Note with ID \u0027\" + noteId + \"\u0027 is already \" + ","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"                    (isPin ? \"pinned.\" : \"unpinned.\"));","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"        note.setPinned(isPin);","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shira421"},"content":"        ui.showJustPinnedNote(note, noteId);","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"        storage.save(notes);","lastModifiedDate":"2025-10-14T23:01:40","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false}],"authorContributionMap":{"shauntsr":3,"danielkwan2004":43,"shira421":25}},{"path":"src/main/java/seedu/zettel/commands/TagNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.util.Optional;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.InvalidFormatException;","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.TagAlreadyExistsException;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"/**","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":" * Command to tag a specific note with a new tag.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":" */","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"public class TagNoteCommand extends Command {","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"    private static final String LIST_DELIM \u003d \";;\";","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"    private final String noteID;","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"    private final String tag;","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"     * Constructs a TagNoteCommand for a given note ID and tag.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"     * @param noteID The ID of the note to tag.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"     * @param tag The tag to add to the note.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"    public TagNoteCommand(String noteID, String tag) {","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"        this.noteID \u003d noteID;","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"     * Executes the tagging command.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"     * Adds the tag to the note if it does not already exist,","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"     * updates global tags if necessary, and shows UI feedback.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"     * @param notes List of notes in the repository.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"     * @param tags Global list of tags.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"     * @param ui UI object to display messages.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"     * @param storage Storage object to persist changes.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"     * @throws ZettelException If note not found, tag exists, or validation fails.","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-26T05:24:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"    @Override","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"        // Validate Inputs","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"        validateTag(tag);","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"        // Try to find the note","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"        Optional\u003cNote\u003e noteOpt \u003d notes.stream()","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"                .filter(n -\u003e n.getId().equals(noteID))","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"                .findFirst();","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"        if (noteOpt.isEmpty()) {","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\"+ noteID + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"        Note note \u003d noteOpt.get();","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"        // Ensure the note doesn\u0027t have this tag currently","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e tagList \u003d note.getTags();","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"        boolean tagExists \u003d tagList.stream()","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"                .anyMatch(n -\u003e n.equals(tag));","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"        if (tagExists) {","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"            throw new TagAlreadyExistsException(\"This note is already tagged with \u0027\" + tag + \"\u0027\");","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"        if (!tags.contains(tag)) {","lastModifiedDate":"2025-10-26T05:22:01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"            tags.add(tag);","lastModifiedDate":"2025-10-26T05:22:01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"            storage.updateTags(tags);","lastModifiedDate":"2025-10-26T05:22:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"            ui.showTagAdded(tag);","lastModifiedDate":"2025-10-26T05:22:01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T05:22:01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:22:01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"        note.addTag(tag);","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"        ui.showTaggedNote(noteID, tag);","lastModifiedDate":"2025-10-26T03:57:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"    private void validateTag(String tag) throws InvalidFormatException {","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"        if (tag.contains(LIST_DELIM)) {","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"            throw new InvalidFormatException(\"Tag should not contain \" + LIST_DELIM);","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-26T03:29:51","isFullCredit":false}],"authorContributionMap":{"shauntsr":76,"danielkwan2004":8}},{"path":"src/main/java/seedu/zettel/commands/UnlinkBothNotesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.util.Optional;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoteSelfLinkException;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NotesAlreadyUnlinkedException;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":" * Represents a command to remove a bidirectional link between two notes.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":" * This command removes all links between the first and the second note,","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":" * updating both the first and second note\u0027s outgoing links and incoming links.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"public class UnlinkBothNotesCommand extends Command {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"    private String noteId1;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"    private String noteId2;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs an UnlinkBothNotesCommand with the specified note IDs.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"     * @param noteId1 The ID of the first note.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"     * @param noteId2 The ID of the second note.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"    public UnlinkBothNotesCommand(String noteId1, String noteId2) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"        this.noteId1 \u003d noteId1; ","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"        this.noteId2 \u003d noteId2;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"     * Executes the unlink command by removing all link between the first and second notes.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"     * Performs multiple validations before unlinking:","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"     * 1. Checks if the notes list is empty","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"     * 2. Verifies both notes exist in the notes list","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"     * 3. Checks for self-unlink attempts (fail-fast)","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"     * 4. Verifies the link actually exists before attempting to remove it","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"     * @param notes The list of all notes in the system.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"     * @param tags The list of all tags in the system (unused in this command).","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"     * @param ui The UI object to display messages to the user.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"     * @param storage The storage object to persist changes (unused in this command).","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"     * @throws NoNotesException If the notes list is empty.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"     * @throws NoteSelfLinkException If attempting to unlink a note from itself.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"     * @throws InvalidNoteIdException If either the source or target note does not exist.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"     * @throws NotesAlreadyUnlinkedException If the link does not exist between the notes.","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"    @Override","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) ","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"            throws NoNotesException, InvalidNoteIdException, InvalidInputException, NoteSelfLinkException,","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"            NotesAlreadyUnlinkedException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 1: Check if notes list is empty","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"You have no notes to unlink.\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 2: Try to find both notes","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"        Optional\u003cNote\u003e note1 \u003d notes.stream()","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"                .filter(n -\u003e n.getId().equals(noteId1))","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"                .findFirst();","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"        if (note1.isEmpty()) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\"+ noteId1 + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"        Optional\u003cNote\u003e note2 \u003d notes.stream()","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"                .filter(n -\u003e n.getId().equals(noteId2))","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"                .findFirst();","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"        if (note2.isEmpty()) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\"+ noteId2 + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 3: Check for self-unlink attempt (fail fast)","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"danielkwan2004"},"content":"        if (noteId1.equals(noteId2)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoteSelfLinkException(\"Cannot unlink a note from itself. Note ID: \u0027\" ","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"                    + noteId1 + \"\u0027.\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"        Note firstNote \u003d note1.get();","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"danielkwan2004"},"content":"        Note secondNote \u003d note2.get();","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 4: Check if the notes are actually linked (in any direction)","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"        if (!firstNote.isLinkedTo(noteId2) \u0026\u0026 !firstNote.isLinkedBy(noteId2) ","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"                \u0026\u0026 !secondNote.isLinkedTo(noteId1) \u0026\u0026 !secondNote.isLinkedBy(noteId1)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"            throw new NotesAlreadyUnlinkedException(\"Any link between note \u0027\" + noteId1","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"                    + \"\u0027 and note \u0027\" + noteId2 + \"\u0027 does not exist. Nothing to unlink.\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"        // Remove all possible link directions between the two notes","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"        if (firstNote.isLinkedTo(noteId2)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"            firstNote.removeOutgoingLink(noteId2);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"        if (firstNote.isLinkedBy(noteId2)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"            firstNote.removeIncomingLink(noteId2);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"        if (secondNote.isLinkedTo(noteId1)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"danielkwan2004"},"content":"            secondNote.removeOutgoingLink(noteId1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"danielkwan2004"},"content":"        if (secondNote.isLinkedBy(noteId1)) {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"danielkwan2004"},"content":"            secondNote.removeIncomingLink(noteId1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"        ui.showSuccessfullyUnlinkedBothNotes(noteId1, noteId2);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":110}},{"path":"src/main/java/seedu/zettel/commands/UnlinkNotesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.util.Optional;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoteSelfLinkException;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NotesAlreadyUnlinkedException;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":" * Represents a command to remove a unidirectional link between two notes.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":" * This command removes the link from the source note to the target note,","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":" * updating both the source note\u0027s outgoing links and the target note\u0027s incoming links.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"public class UnlinkNotesCommand extends Command {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"    private String sourceNoteId;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"    private String targetNoteId;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs an UnlinkNotesCommand with the specified source and target note IDs.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"     * @param sourceNoteId The ID of the note from which the link originates.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"     * @param targetNoteId The ID of the note to which the link points.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"    public UnlinkNotesCommand(String sourceNoteId, String targetNoteId) {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"        this.sourceNoteId \u003d sourceNoteId;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"        this.targetNoteId \u003d targetNoteId;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"     * Executes the unlink command by removing the link between the source and target notes.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"     * Performs multiple validations before unlinking:","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"     * 1. Checks if the notes list is empty","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"     * 2. Checks for self-unlink attempts (fail-fast)","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"     * 3. Verifies both notes exist in the notes list","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"     * 4. Verifies the link actually exists before attempting to remove it","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"     * @param notes The list of all notes in the system.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"     * @param tags The list of all tags in the system (unused in this command).","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"     * @param ui The UI object to display messages to the user.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"     * @param storage The storage object to persist changes (unused in this command).","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"     * @throws NoNotesException If the notes list is empty.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"     * @throws NoteSelfLinkException If attempting to unlink a note from itself.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"     * @throws InvalidNoteIdException If either the source or target note does not exist.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"     * @throws NotesAlreadyUnlinkedException If the link does not exist between the notes.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"    @Override","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, List\u003cString\u003e tags, UI ui, Storage storage) ","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"            throws NoNotesException, InvalidNoteIdException, InvalidInputException, NoteSelfLinkException,","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"            NotesAlreadyUnlinkedException {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 1: Check if notes list is empty","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"You have no notes to unlink.\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 2: Try to find both notes","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"        Optional\u003cNote\u003e sourceNote \u003d notes.stream()","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"                .filter(n -\u003e n.getId().equals(sourceNoteId))","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"                .findFirst();","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"        if (sourceNote.isEmpty()) {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\"+ sourceNoteId + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"        Optional\u003cNote\u003e targetNote \u003d notes.stream()","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"                .filter(n -\u003e n.getId().equals(targetNoteId))","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"                .findFirst();","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"        if (targetNote.isEmpty()) {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\"+ targetNoteId + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 3: Check for self-unlink attempt (fail fast)","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"danielkwan2004"},"content":"        if (sourceNoteId.equals(targetNoteId)) {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoteSelfLinkException(\"Cannot unlink a note from itself. Note ID: \u0027\" ","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"                    + sourceNoteId + \"\u0027.\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"        Note srcNote \u003d sourceNote.get();","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"danielkwan2004"},"content":"        Note tgtNote \u003d targetNote.get();","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 4: Check if the notes are actually linked","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"        if (!srcNote.isLinkedTo(targetNoteId)) {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"            throw new NotesAlreadyUnlinkedException(\"Link from note \u0027\" + sourceNoteId ","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"                    + \"\u0027 to note \u0027\" + targetNoteId + \"\u0027 does not exist. Nothing to unlink.\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"        // Unlink the notes - use the Note class methods to modify the actual sets","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"        srcNote.removeOutgoingLink(targetNoteId);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"        tgtNote.removeIncomingLink(sourceNoteId);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"        ui.showSuccessfullyUnlinkedNotes(sourceNoteId, targetNoteId);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"    }  ","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":99}},{"path":"src/main/java/seedu/zettel/exceptions/AlreadyPinnedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when a user tries to pin a note that is already pinned, opr","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * unpin a note that is already unpinned.","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"public class AlreadyPinnedException extends ZettelException {","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new AlreadyPinnedException with the specified detail message.","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining that the note is already pinned.","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"    public AlreadyPinnedException(String message) {","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"        super(message);","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"    ","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":18}},{"path":"src/main/java/seedu/zettel/exceptions/EditorNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"public class EditorNotFoundException extends ZettelException {","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"    public EditorNotFoundException(String message) {","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"        super(message);","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false}],"authorContributionMap":{"gordonajajar":9}},{"path":"src/main/java/seedu/zettel/exceptions/EmptyDescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when a required description field is empty or missing.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is used to enforce that certain operations require","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * non-empty description text.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"public class EmptyDescriptionException extends ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new EmptyDescriptionException with the specified detail message.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining which description field is empty","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     *                and why it is required.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"        super(message);","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"JianHao24":6,"danielkwan2004":11}},{"path":"src/main/java/seedu/zettel/exceptions/InvalidFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when input or data is not in the expected format.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is used to indicate that the structure or format of","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * the provided data does not match the required specifications.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"public class InvalidFormatException extends ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new InvalidFormatException with the specified detail message.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining what format was expected","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     *                and how the actual format differs.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"        super(message);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"JianHao24":6,"danielkwan2004":11}},{"path":"src/main/java/seedu/zettel/exceptions/InvalidInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when user input is invalid or cannot be processed.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is used to indicate that the user has provided input","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * that does not conform to expected formats or constraints.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"public class InvalidInputException extends ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new InvalidInputException with the specified detail message.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     * The message is automatically prefixed with \"Invalid Input: \".","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining what aspect of the input is invalid.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"        super(\"Invalid Input: \" + message);","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"JianHao24":6,"danielkwan2004":11}},{"path":"src/main/java/seedu/zettel/exceptions/InvalidNoteIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when an invalid noteId is provided for note operations.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is typically thrown when the user specifies an index that is","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * out of bounds or does not correspond to an existing note.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"public class InvalidNoteIdException extends ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new InvalidNoteIdException with the specified detail message.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     * The message is automatically prefixed with \"Invalid Note ID! \".","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining why the note ID is invalid.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"    public InvalidNoteIdException(String message) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"        super(\"Invalid Note ID! \" + message);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":18}},{"path":"src/main/java/seedu/zettel/exceptions/InvalidRepoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-20T00:53:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T00:53:14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when a repository name or repository state is invalid.","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is used to indicate issues with repository validation,","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * such as invalid repository names, non-existent repositories, or","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" * repository structure problems.","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gordonajajar"},"content":"public class InvalidRepoException extends ZettelException {","lastModifiedDate":"2025-10-20T00:53:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new InvalidRepoException with the specified detail message.","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining what aspect of the repository is invalid,","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"     *                such as invalid naming conventions or missing repository structure.","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":"    public InvalidRepoException(String message) {","lastModifiedDate":"2025-10-20T00:53:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gordonajajar"},"content":"        super(message);","lastModifiedDate":"2025-10-20T00:53:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-20T00:53:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-20T00:53:14","isFullCredit":false}],"authorContributionMap":{"gordonajajar":7,"danielkwan2004":12}},{"path":"src/main/java/seedu/zettel/exceptions/NoNoteFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when a requested note cannot be found","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is typically thrown when attempting to access, modify, or delete","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * a note that is not present in the note list.","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"public class NoNoteFoundException extends ZettelException {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new NoNoteFoundException with the specified detail message.","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining which note was not found.","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"    public NoNoteFoundException(String message) {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"        super(message);","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":17}},{"path":"src/main/java/seedu/zettel/exceptions/NoNotesException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when there is no notes in the list at all.","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is typically thrown when attempting to perform actions on an empty","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * note list.","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"public class NoNotesException extends ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new NoNoteException with the specified detail message.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining which note was not found.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"    public NoNotesException(String message) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"        super(message);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":17}},{"path":"src/main/java/seedu/zettel/exceptions/NoTagsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when there is no tags that are tagged to the note at all.","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is typically thrown when attempting to perform actions on an empty","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * tag list.","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" * This exception is also thrown when trying to list all global tags, and there are no","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":" * tags at all.","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"public class NoTagsException extends ZettelException {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new NoTagsException with the specified detail message.","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining which note was not found.","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"    public NoTagsException(String message) {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"        super(message);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":19}},{"path":"src/main/java/seedu/zettel/exceptions/NoteSelfLinkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when attempting to link a note to itself.","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This prevents circular self-references in the note-linking system.","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"public class NoteSelfLinkException extends ZettelException {","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a SelfLinkException with the specified error message.","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The error message describing why the exception was thrown.","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"    public NoteSelfLinkException(String message) {","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"        super(message);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":16}},{"path":"src/main/java/seedu/zettel/exceptions/NotesAlreadyLinkedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when attempting to link two notes that are already linked in that particular direction.","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is typically thrown when trying to create a unidirectional link between two notes,","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * but an exception will also be thrown when trying to create a bidirection link if the notes are already","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" * linked in both directions.","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"public class NotesAlreadyLinkedException extends ZettelException {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new NotesAlreadyLinkedException with the specified detail message.","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining which notes are already linked.","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"    public NotesAlreadyLinkedException (String message) {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"        super(message);","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":18}},{"path":"src/main/java/seedu/zettel/exceptions/NotesAlreadyUnlinkedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when attempting to unlink two notes that are already unlinked.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is typically thrown when trying to unlink between two notes that were not ","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * linked in the first place, be is unidirectionally or bidirectionally.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"public class NotesAlreadyUnlinkedException extends ZettelException {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new NotesAlreadyUnlinkedException with the specified detail message.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining which notes are already linked.","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"    public NotesAlreadyUnlinkedException (String message) {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"        super(message);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":17}},{"path":"src/main/java/seedu/zettel/exceptions/TagAlreadyExistsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"public class TagAlreadyExistsException extends ZettelException {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new TagAlreadyExistsException with the specified detail message.","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"     * This exception is usually thrown when the user adds a tag that already exists,","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"     * or tries to tag a note with a duplicate tag.","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining the cause of the exception.","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"    public TagAlreadyExistsException(String message) {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"        super(message);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":14}},{"path":"src/main/java/seedu/zettel/exceptions/ZettelException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Represents the base exception class for all Zettel-related exceptions.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This is the parent class for all custom exceptions in the Zettel application.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"public class ZettelException extends Exception {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new ZettelException with the specified detail message.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining the cause of the exception.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"    public ZettelException(String message) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"        super(message);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"JianHao24":6,"danielkwan2004":9}},{"path":"src/main/java/seedu/zettel/storage/FileSystemManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JianHao24"},"content":"package seedu.zettel.storage;","lastModifiedDate":"2025-10-24T03:54:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:54:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JianHao24"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.DirectoryStream;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import java.util.List;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.exceptions.InvalidRepoException;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"/**","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":" * Manages file system operations for Zettel repositories.","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":" * Handles directory creation, validation, and file management.","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":" */","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"public class FileSystemManager {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JianHao24"},"content":"    /** Configuration file name for storing repository settings. */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JianHao24"},"content":"    static final String CONFIG_FILE \u003d \".zettelConfig\";","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JianHao24"},"content":"    /** Directory name for storing note body files within a repository. */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JianHao24"},"content":"    static final String REPO_NOTES \u003d \"notes\";","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JianHao24"},"content":"    /** Directory name for storing archived notes within a repository. */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"    static final String REPO_ARCHIVE \u003d \"archive\";","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JianHao24"},"content":"    /** File name for the repository index that stores note metadata. */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":"    static final String REPO_INDEX \u003d \"index.txt\";","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JianHao24"},"content":"    private final Path rootPath;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"     * Constructs a FileSystemManager with the specified root path.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JianHao24"},"content":"     * @param rootPath the root directory path for all repositories","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JianHao24"},"content":"    public FileSystemManager(String rootPath) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"        this.rootPath \u003d Paths.get(rootPath);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JianHao24"},"content":"     * Gets the root path of the file system manager.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JianHao24"},"content":"     * @return the root directory path","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JianHao24"},"content":"    public Path getRootPath() {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JianHao24"},"content":"        return rootPath;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JianHao24"},"content":"     * Creates the root folder if it doesn\u0027t exist.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JianHao24"},"content":"    public void createRootFolder() {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JianHao24"},"content":"            if (Files.notExists(rootPath)) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JianHao24"},"content":"                Files.createDirectories(rootPath);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Error creating \" + rootPath + \" folder.\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JianHao24"},"content":"     * Creates the configuration file with default repository settings if it doesn\u0027t exist.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JianHao24"},"content":"     * @param defaultRepo the default repository name to use in the config file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JianHao24"},"content":"    public void createConfigFile(String defaultRepo) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"        Path configPath \u003d rootPath.resolve(CONFIG_FILE);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JianHao24"},"content":"            if (Files.notExists(configPath)) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JianHao24"},"content":"                Files.createFile(configPath);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JianHao24"},"content":"                List\u003cString\u003e lines \u003d List.of(defaultRepo, defaultRepo);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JianHao24"},"content":"                Files.write(configPath, lines);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Error creating \" + CONFIG_FILE + \".\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JianHao24"},"content":"     * Creates the directory structure for a new repository.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JianHao24"},"content":"     * @param repoName the name of the repository to create","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JianHao24"},"content":"     * @return true if the repository was created successfully, false if it already exists","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JianHao24"},"content":"    public boolean createRepoStructure(String repoName) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JianHao24"},"content":"        Path repoPath \u003d rootPath.resolve(repoName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JianHao24"},"content":"        if (Files.exists(repoPath)) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Repository /\" + repoName + \" already exists.\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JianHao24"},"content":"            return false;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JianHao24"},"content":"            Files.createDirectories(repoPath.resolve(REPO_NOTES));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JianHao24"},"content":"            Files.createDirectories(repoPath.resolve(REPO_ARCHIVE));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JianHao24"},"content":"            Files.createFile(repoPath.resolve(REPO_INDEX));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JianHao24"},"content":"            return true;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Error initialising repository \" + repoName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JianHao24"},"content":"            return false;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JianHao24"},"content":"     * Creates a note file with the specified content in the given repository.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JianHao24"},"content":"     * @param noteFilename the name of the note file to create","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JianHao24"},"content":"     * @param noteBody the content to write to the note file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JianHao24"},"content":"     * @param repoName the repository where the note file should be created","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JianHao24"},"content":"    public void createNoteFile(String noteFilename, String noteBody, String repoName) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JianHao24"},"content":"        Path repoPath \u003d rootPath.resolve(repoName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JianHao24"},"content":"        Path notesDir \u003d repoPath.resolve(REPO_NOTES);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JianHao24"},"content":"            Path noteFile \u003d notesDir.resolve(noteFilename);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JianHao24"},"content":"            if (Files.notExists(noteFile)) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JianHao24"},"content":"                Files.createFile(noteFile);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JianHao24"},"content":"            } else {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JianHao24"},"content":"                System.out.println(\"Note file already exists. Overwriting... \" + noteFile);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JianHao24"},"content":"            Files.writeString(noteFile, noteBody !\u003d null ? noteBody : \"\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Error writing note file: \" + e.getMessage());","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JianHao24"},"content":"     * Validates the structure of a repository and creates missing components.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JianHao24"},"content":"     * @param repoName the name of the repository to validate","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JianHao24"},"content":"     * @param expectedFiles the list of expected note body files","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException if the repository structure is invalid","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JianHao24"},"content":"    public void validateRepoStructure(String repoName, List\u003cString\u003e expectedFiles) throws ZettelException {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JianHao24"},"content":"        Path repoPath \u003d rootPath.resolve(repoName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JianHao24"},"content":"        Path notesDir \u003d repoPath.resolve(REPO_NOTES);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JianHao24"},"content":"        Path archiveDir \u003d repoPath.resolve(REPO_ARCHIVE);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JianHao24"},"content":"        Path indexFile \u003d repoPath.resolve(REPO_INDEX);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JianHao24"},"content":"        Path configFile \u003d rootPath.resolve(CONFIG_FILE);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JianHao24"},"content":"        if (!Files.exists(configFile)) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JianHao24"},"content":"            throw new InvalidRepoException(\".zettelConfig missing at \" + configFile.toAbsolutePath());","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JianHao24"},"content":"        createIfMissing(repoPath, \"repository folder: \" + repoName, true);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JianHao24"},"content":"        createIfMissing(notesDir, \"notes/ for repo: \" + repoName, true);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JianHao24"},"content":"        createIfMissing(archiveDir, \"archive/ for repo: \" + repoName, true);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JianHao24"},"content":"        createIfMissing(indexFile, \"index.txt for repo: \" + repoName, false);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JianHao24"},"content":"        for (String fileName : expectedFiles) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JianHao24"},"content":"            Path bodyFile \u003d notesDir.resolve(fileName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JianHao24"},"content":"            try {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JianHao24"},"content":"                createIfMissing(bodyFile, \"body file: \" + fileName, false);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JianHao24"},"content":"            } catch (ZettelException e) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JianHao24"},"content":"                System.out.println(\"Warning: \" + e.getMessage());","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JianHao24"},"content":"        detectOrphans(notesDir, expectedFiles, repoName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JianHao24"},"content":"     * Creates a file or directory if it doesn\u0027t exist.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JianHao24"},"content":"     * @param path the path to create","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JianHao24"},"content":"     * @param description a description of what is being created","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JianHao24"},"content":"     * @param isDirectory true if creating a directory, false for a file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException if the creation fails","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JianHao24"},"content":"    private void createIfMissing(Path path, String description, boolean isDirectory) throws ZettelException {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JianHao24"},"content":"            if (Files.notExists(path)) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JianHao24"},"content":"                if (isDirectory) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JianHao24"},"content":"                    Files.createDirectories(path);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JianHao24"},"content":"                } else {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JianHao24"},"content":"                    Files.createFile(path);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JianHao24"},"content":"                }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JianHao24"},"content":"                System.out.println(\"Created missing \" + description);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Failed to create \" + description + \": \" + e.getMessage());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JianHao24"},"content":"     * Detects orphan files (files not referenced in the index) in the notes directory.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JianHao24"},"content":"     * @param notesDir the notes directory to scan","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JianHao24"},"content":"     * @param expectedFiles the list of expected files from the index","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JianHao24"},"content":"     * @param repoName the name of the repository being scanned","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException if scanning the directory fails","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JianHao24"},"content":"    private void detectOrphans(Path notesDir, List\u003cString\u003e expectedFiles, String repoName) throws ZettelException {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JianHao24"},"content":"        try (DirectoryStream\u003cPath\u003e notesStream \u003d Files.newDirectoryStream(notesDir, \"*.txt\")) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JianHao24"},"content":"            List\u003cString\u003e orphans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JianHao24"},"content":"            for (Path p : notesStream) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JianHao24"},"content":"                if (!expectedFiles.contains(p.getFileName().toString())) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JianHao24"},"content":"                    orphans.add(p.getFileName().toString());","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"JianHao24"},"content":"                }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JianHao24"},"content":"            if (!orphans.isEmpty()) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JianHao24"},"content":"                System.out.println(\"Notice: Found \" + orphans.size() +","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JianHao24"},"content":"                        \" orphan note file(s) in repo \u0027\" + repoName + \"\u0027:\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JianHao24"},"content":"                orphans.forEach(f -\u003e System.out.println(\"  - \" + f));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Failed to scan notes directory for orphans: \" + e.getMessage());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"JianHao24"},"content":"     * Gets the path to the index file for the specified repository.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"JianHao24"},"content":"     * @param repoName the repository name","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"JianHao24"},"content":"     * @return the path to the repository\u0027s index file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JianHao24"},"content":"    public Path getIndexPath(String repoName) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JianHao24"},"content":"        return rootPath.resolve(repoName).resolve(REPO_INDEX);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"JianHao24"},"content":"     * Gets the path to the notes directory for the specified repository.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"JianHao24"},"content":"     * @param repoName the repository name","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"JianHao24"},"content":"     * @return the path to the repository\u0027s notes directory","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"JianHao24"},"content":"    public Path getNotesPath(String repoName) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"JianHao24"},"content":"        return rootPath.resolve(repoName).resolve(REPO_NOTES);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"JianHao24"},"content":"     * Gets the path to the configuration file.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"JianHao24"},"content":"     * @return the path to the configuration file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"JianHao24"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"JianHao24"},"content":"        return rootPath.resolve(CONFIG_FILE);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-24T03:54:02","isFullCredit":false}],"authorContributionMap":{"JianHao24":244}},{"path":"src/main/java/seedu/zettel/storage/NoteSerializer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JianHao24"},"content":"package seedu.zettel.storage;","lastModifiedDate":"2025-10-24T03:54:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:54:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JianHao24"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import java.util.List;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"import java.util.Objects;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"/**","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":" * Handles serialization and deserialization of Note objects.","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":" * Converts notes to/from file format for persistence.","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":" */","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JianHao24"},"content":"public class NoteSerializer {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JianHao24"},"content":"    /** Delimiter used for separating items in lists during serialization. */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"    static final String LIST_DELIM \u003d \";;\";","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JianHao24"},"content":"     * Loads notes from the index file and their corresponding body files.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JianHao24"},"content":"     * @param indexPath the path to the index file containing note metadata","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JianHao24"},"content":"     * @param notesDir the directory containing note body files","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":"     * @return an ArrayList of loaded notes","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JianHao24"},"content":"    public ArrayList\u003cNote\u003e loadNotes(Path indexPath, Path notesDir) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JianHao24"},"content":"        try (Stream\u003cString\u003e lines \u003d Files.lines(indexPath)) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JianHao24"},"content":"            return lines.map(this::parseIndex)","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"                    .filter(Objects::nonNull)","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"                    .map(note -\u003e loadNoteBody(note, notesDir))","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JianHao24"},"content":"                    .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Error loading file: \" + indexPath);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JianHao24"},"content":"     * Saves a list of notes to the index file.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JianHao24"},"content":"     * @param notes the list of notes to save","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JianHao24"},"content":"     * @param indexPath the path where the index file should be written","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JianHao24"},"content":"     * @throws IOException if there\u0027s an error writing to the file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JianHao24"},"content":"    public void saveNotes(List\u003cNote\u003e notes, Path indexPath) throws IOException {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JianHao24"},"content":"        List\u003cString\u003e lines \u003d notes.stream()","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JianHao24"},"content":"                .map(this::toIndexFormat)","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JianHao24"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JianHao24"},"content":"        Files.write(indexPath, lines);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JianHao24"},"content":"     * Reads the index file and extracts the expected filenames of note body files.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JianHao24"},"content":"     * @param indexPath the path to the index file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JianHao24"},"content":"     * @return a list of expected filenames","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JianHao24"},"content":"    public List\u003cString\u003e getExpectedFilenames(Path indexPath) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JianHao24"},"content":"        List\u003cString\u003e expectedFiles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JianHao24"},"content":"        try (Stream\u003cString\u003e lines \u003d Files.lines(indexPath)) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JianHao24"},"content":"            lines.map(this::parseIndex)","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JianHao24"},"content":"                    .filter(Objects::nonNull)","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"                    .forEach(note -\u003e expectedFiles.add(note.getFilename()));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Warning: Could not read index file for validation: \" + e.getMessage());","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JianHao24"},"content":"        return expectedFiles;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JianHao24"},"content":"     * Loads the body content for a note from its corresponding body file.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JianHao24"},"content":"     * @param note the note to load the body for","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JianHao24"},"content":"     * @param notesDir the directory containing note body files","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JianHao24"},"content":"     * @return the note with its body loaded","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JianHao24"},"content":"    private Note loadNoteBody(Note note, Path notesDir) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JianHao24"},"content":"        Path bodyFile \u003d notesDir.resolve(note.getFilename());","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JianHao24"},"content":"            String body \u003d Files.readString(bodyFile);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JianHao24"},"content":"            note.loadBody(body);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Warning: cannot read body file for \u0027\" +","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JianHao24"},"content":"                    note.getTitle() + \"\u0027: \" + e.getMessage());","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JianHao24"},"content":"            note.loadBody(\"\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JianHao24"},"content":"        return note;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JianHao24"},"content":"     * Converts a note to its string representation for storage in the index file.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JianHao24"},"content":"     * @param note the note to convert","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JianHao24"},"content":"     * @return the string representation of the note in index format","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JianHao24"},"content":"    private String toIndexFormat(Note note) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shauntsr"},"content":"        String logsStr \u003d String.join(LIST_DELIM, note.getLogs());","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shauntsr"},"content":"        String tagsStr \u003d String.join(LIST_DELIM, note.getTags());","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JianHao24"},"content":"        String filename \u003d note.getFilename() !\u003d null ? note.getFilename() : \"\";","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JianHao24"},"content":"        String archiveName \u003d note.getArchiveName() !\u003d null ? note.getArchiveName() : \"\";","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shauntsr"},"content":"        return String.format(\"%s | %s | %s | %s | %s | %s | %s | %s | %s | %s\",","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JianHao24"},"content":"                note.getId(),","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JianHao24"},"content":"                note.getTitle(),","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JianHao24"},"content":"                filename,","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JianHao24"},"content":"                note.getCreatedAt().toString(),","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JianHao24"},"content":"                note.getModifiedAt().toString(),","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JianHao24"},"content":"                note.isPinned() ? \"1\" : \"0\",","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JianHao24"},"content":"                note.isArchived() ? \"1\" : \"0\",","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JianHao24"},"content":"                archiveName,","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shauntsr"},"content":"                logsStr,","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shauntsr"},"content":"                tagsStr","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shauntsr"},"content":"        );","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JianHao24"},"content":"     * Parses a line from the index file and creates a Note object.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JianHao24"},"content":"     * @param line the line to parse from the index file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JianHao24"},"content":"     * @return a Note object, or null if the line is corrupted or invalid","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JianHao24"},"content":"    private Note parseIndex(String line) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JianHao24"},"content":"        if (line \u003d\u003d null || line.isBlank()) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JianHao24"},"content":"            return null;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JianHao24"},"content":"        String[] fields \u003d line.split(\" \\\\| \", -1);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JianHao24"},"content":"            String id \u003d fields[0];","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JianHao24"},"content":"            String title \u003d fields[1];","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JianHao24"},"content":"            String filename \u003d fields[2];","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JianHao24"},"content":"            String body \u003d \"\";","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JianHao24"},"content":"            Instant createdAt \u003d Instant.parse(fields[3]);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JianHao24"},"content":"            Instant modifiedAt \u003d Instant.parse(fields[4]);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JianHao24"},"content":"            boolean pinned \u003d fields[5].equals(\"1\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JianHao24"},"content":"            boolean archived \u003d fields[6].equals(\"1\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JianHao24"},"content":"            String archiveName \u003d fields[7].isEmpty() ? null : fields[7];","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JianHao24"},"content":"            List\u003cString\u003e logs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JianHao24"},"content":"            if (fields.length \u003e 8 \u0026\u0026 !fields[8].isEmpty()) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shauntsr"},"content":"                logs \u003d Arrays.asList(fields[8].split(LIST_DELIM));","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shauntsr"},"content":"            String tagsStr \u003d fields[9];","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"shauntsr"},"content":"            List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"shauntsr"},"content":"            if (!tagsStr.isEmpty()) {","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shauntsr"},"content":"                tags \u003d Arrays.asList(tagsStr.split(LIST_DELIM));","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"shauntsr"},"content":"            }","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T02:54:42","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JianHao24"},"content":"            return new Note(id, title, filename, body, createdAt, modifiedAt,","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"shauntsr"},"content":"                    pinned, archived, archiveName, logs, tags);","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JianHao24"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Skipping corrupted line: \" + line);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JianHao24"},"content":"            return null;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-24T03:54:02","isFullCredit":false}],"authorContributionMap":{"JianHao24":150,"shauntsr":16}},{"path":"src/main/java/seedu/zettel/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JianHao24"},"content":"package seedu.zettel.storage;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JianHao24"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import java.util.List;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gordonajajar"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-10-20T00:53:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-24T04:06:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-29T00:43:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"/**","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":" * Orchestrates storage operations for Zettel repositories.","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":" * Manages repository state and coordinates file system and serialization operations.","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":" */","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":"public class Storage {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JianHao24"},"content":"    /** Default repository name used when no other repository is specified. */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JianHao24"},"content":"    static final String DEFAULT_REPO \u003d \"main\";","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JianHao24"},"content":"    private static final Logger logger \u003d Logger.getLogger(Storage.class.getName());","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JianHao24"},"content":"    private final FileSystemManager fileSystemManager;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JianHao24"},"content":"    private final NoteSerializer noteSerializer;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JianHao24"},"content":"    private String repoName \u003d DEFAULT_REPO;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JianHao24"},"content":"    private ArrayList\u003cString\u003e repoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JianHao24"},"content":"     * Constructs a Storage instance with the specified root path.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JianHao24"},"content":"     * @param rootPath the root directory path where repositories will be stored","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"    public Storage(String rootPath) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JianHao24"},"content":"        assert rootPath !\u003d null : \"Root path should not be null\";","lastModifiedDate":"2025-10-29T00:56:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JianHao24"},"content":"        this.fileSystemManager \u003d new FileSystemManager(rootPath);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JianHao24"},"content":"        this.noteSerializer \u003d new NoteSerializer();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JianHao24"},"content":"     * Initializes the storage system by creating necessary directories and files.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JianHao24"},"content":"     * Loads configuration and validates all repositories.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JianHao24"},"content":"    public void init() {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JianHao24"},"content":"        fileSystemManager.createRootFolder();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JianHao24"},"content":"        fileSystemManager.createConfigFile(DEFAULT_REPO);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JianHao24"},"content":"        Path defaultRepoPath \u003d fileSystemManager.getRootPath().resolve(DEFAULT_REPO);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"        if (Files.notExists(defaultRepoPath)) {","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"            createRepo(DEFAULT_REPO);","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gordonajajar"},"content":"        try {","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gordonajajar"},"content":"            loadConfig();","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JianHao24"},"content":"            String checkedOutRepo \u003d readCurrRepo();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JianHao24"},"content":"            changeRepo(checkedOutRepo);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gordonajajar"},"content":"            for (String repo : repoList) {","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gordonajajar"},"content":"                validateRepo(repo);","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gordonajajar"},"content":"            }","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gordonajajar"},"content":"        } catch (ZettelException e) {","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gordonajajar"},"content":"            System.out.println(\"Error during init: \" + e.getMessage());","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JianHao24"},"content":"     * Reads the currently checked-out repository from the configuration file.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"     * @return the name of the current repository, or DEFAULT_REPO if not found","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JianHao24"},"content":"    public String readCurrRepo() {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JianHao24"},"content":"        Path configFile \u003d fileSystemManager.getConfigPath();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gordonajajar"},"content":"        try {","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gordonajajar"},"content":"            if (Files.exists(configFile)) {","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gordonajajar"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(configFile);","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gordonajajar"},"content":"                if (lines.size() \u003d\u003d 2 \u0026\u0026 !lines.get(1).isBlank()) {","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gordonajajar"},"content":"                    return lines.get(1).trim();","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gordonajajar"},"content":"                }","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gordonajajar"},"content":"            }","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gordonajajar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gordonajajar"},"content":"            System.out.println(\"Warning: failed to read checked-out repo: \" + e.getMessage());","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gordonajajar"},"content":"        return DEFAULT_REPO;","lastModifiedDate":"2025-10-20T01:29:55","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JianHao24"},"content":"     * Reads the tags line from the configuration file.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JianHao24"},"content":"     * @return a list of tags, or an empty list if no tags are configured","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"    public List\u003cString\u003e readTagsLine() {","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"        Path configFile \u003d fileSystemManager.getConfigPath();","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"        try {","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shauntsr"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(configFile);","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shauntsr"},"content":"            if (lines.size() \u003e\u003d 3) {","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shauntsr"},"content":"                String tagsLine \u003d lines.get(2).trim();","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shauntsr"},"content":"                if (!tagsLine.isEmpty()) {","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shauntsr"},"content":"                    return Arrays.stream(tagsLine.split(\"\\\\|\"))","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shauntsr"},"content":"                            .map(String::trim)","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shauntsr"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shauntsr"},"content":"                }","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shauntsr"},"content":"            }","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shauntsr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"Warning: failed to read tags line: \" + e.getMessage());","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shauntsr"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JianHao24"},"content":"     * Creates a storage file for the specified note in the current repository.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JianHao24"},"content":"     * @param note the note to create a storage file for","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JianHao24"},"content":"    public void createStorageFile(Note note) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JianHao24"},"content":"        fileSystemManager.createNoteFile(note.getFilename(), note.getBody(), repoName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JianHao24"},"content":"     * Loads the repository configuration from the config file.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JianHao24"},"content":"     * Populates the repoList with available repositories.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JianHao24"},"content":"    public void loadConfig() {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JianHao24"},"content":"        fileSystemManager.createConfigFile(DEFAULT_REPO);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JianHao24"},"content":"        Path configFile \u003d fileSystemManager.getConfigPath();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JianHao24"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(configFile);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JianHao24"},"content":"            String firstLine \u003d lines.isEmpty() ? DEFAULT_REPO : lines.get(0);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gordonajajar"},"content":"            repoList \u003d Arrays.stream(firstLine.split(\"\\\\|\"))","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gordonajajar"},"content":"                    .map(String::trim)","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gordonajajar"},"content":"                    .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gordonajajar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gordonajajar"},"content":"            System.out.println(\"Error reading .zettelConfig, defaulting to main: \" + e.getMessage());","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gordonajajar"},"content":"            repoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gordonajajar"},"content":"            repoList.add(\"main\");","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JianHao24"},"content":"     * Updates the configuration file with the specified repository as current.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JianHao24"},"content":"     * @param newRepo the repository to set as current","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException if there\u0027s an error writing to the config file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gordonajajar"},"content":"    public void updateConfig(String newRepo) throws ZettelException {","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JianHao24"},"content":"        logger.info(\"Updating config with current repository: \" + newRepo);","lastModifiedDate":"2025-10-29T00:43:54","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JianHao24"},"content":"        fileSystemManager.createConfigFile(DEFAULT_REPO);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JianHao24"},"content":"        Path configFile \u003d fileSystemManager.getConfigPath();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JianHao24"},"content":"        try (Stream\u003cString\u003e stream \u003d Files.lines(configFile)) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gordonajajar"},"content":"            List\u003cString\u003e lines \u003d stream.collect(Collectors.toList());","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gordonajajar"},"content":"            if (lines.isEmpty()) {","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gordonajajar"},"content":"                lines.add(DEFAULT_REPO);","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gordonajajar"},"content":"                lines.add(newRepo);","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gordonajajar"},"content":"            } else if (lines.size() \u003d\u003d 1) {","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gordonajajar"},"content":"                lines.add(newRepo);","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gordonajajar"},"content":"            } else {","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gordonajajar"},"content":"                lines.set(1, newRepo);","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gordonajajar"},"content":"            }","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gordonajajar"},"content":"            Files.write(configFile, lines);","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JianHao24"},"content":"            logger.info(\"Config updated successfully\");","lastModifiedDate":"2025-10-29T00:43:54","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gordonajajar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JianHao24"},"content":"            logger.warning(\"Failed to update checked-out repo in .zettelConfig: \" + e.getMessage());","lastModifiedDate":"2025-10-29T00:43:54","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gordonajajar"},"content":"            throw new ZettelException(\"Failed to update checked-out repo in .zettelConfig: \" + e.getMessage());","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JianHao24"},"content":"     * Updates the tags configuration in the config file.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JianHao24"},"content":"     * @param tags the list of tags to write to the config file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException if there\u0027s an error writing to the config file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"shauntsr"},"content":"    public void updateTags(List\u003cString\u003e tags) throws ZettelException {","lastModifiedDate":"2025-10-26T04:46:04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JianHao24"},"content":"        logger.info(\"Updating tags in config: \" + tags);","lastModifiedDate":"2025-10-29T00:43:54","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"shauntsr"},"content":"        fileSystemManager.createConfigFile(DEFAULT_REPO);","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"shauntsr"},"content":"        Path configFile \u003d fileSystemManager.getConfigPath();","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"shauntsr"},"content":"        try (Stream\u003cString\u003e stream \u003d Files.lines(configFile)) {","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"shauntsr"},"content":"            List\u003cString\u003e lines \u003d stream.collect(Collectors.toList());","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"shauntsr"},"content":"            String tagsLine \u003d (tags \u003d\u003d null) ? \"\" : String.join(\" | \", tags);","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"shauntsr"},"content":"            if (lines.isEmpty()) {","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"shauntsr"},"content":"                lines.add(DEFAULT_REPO);","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"shauntsr"},"content":"                lines.add(repoName);","lastModifiedDate":"2025-10-26T04:46:04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"shauntsr"},"content":"                lines.add(tagsLine);","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"shauntsr"},"content":"            } else if (lines.size() \u003d\u003d 1) {","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"shauntsr"},"content":"                lines.add(repoName);","lastModifiedDate":"2025-10-26T04:46:04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"shauntsr"},"content":"                lines.add(tagsLine);","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"shauntsr"},"content":"            } else if (lines.size() \u003d\u003d 2) {","lastModifiedDate":"2025-10-26T04:41:01","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"shauntsr"},"content":"                lines.add(tagsLine);","lastModifiedDate":"2025-10-26T04:41:01","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"shauntsr"},"content":"            } else {","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"shauntsr"},"content":"                lines.set(1, repoName);","lastModifiedDate":"2025-10-26T04:46:04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"shauntsr"},"content":"                lines.set(2, tagsLine);","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"shauntsr"},"content":"            }","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"shauntsr"},"content":"            Files.write(configFile, lines);","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JianHao24"},"content":"            logger.info(\"Tags updated successfully\");","lastModifiedDate":"2025-10-29T00:43:54","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"shauntsr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JianHao24"},"content":"            logger.warning(\"Failed to update tags line in .zettelConfig: \" + e.getMessage());","lastModifiedDate":"2025-10-29T00:43:54","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"shauntsr"},"content":"            throw new ZettelException(\"Failed to update tags line in .zettelConfig: \" + e.getMessage());","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T04:36:41","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JianHao24"},"content":"     * Loads all notes from the current repository.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JianHao24"},"content":"     * @return an ArrayList of notes loaded from the repository","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"JianHao24"},"content":"    public ArrayList\u003cNote\u003e load() {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"JianHao24"},"content":"        Path indexPath \u003d fileSystemManager.getIndexPath(repoName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JianHao24"},"content":"        Path notesDir \u003d fileSystemManager.getNotesPath(repoName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"shauntsr"},"content":"        try {","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"gordonajajar"},"content":"            validateRepo(repoName);","lastModifiedDate":"2025-10-20T00:53:14","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"gordonajajar"},"content":"        } catch (ZettelException e) {","lastModifiedDate":"2025-10-20T00:53:14","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"gordonajajar"},"content":"            System.out.println(\"Error validating repo: \" + e.getMessage());","lastModifiedDate":"2025-10-20T00:53:14","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"JianHao24"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"JianHao24"},"content":"        return noteSerializer.loadNotes(indexPath, notesDir);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"JianHao24"},"content":"     * Validates the structure of the specified repository.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"JianHao24"},"content":"     * @param repoName the name of the repository to validate","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException if the repository structure is invalid","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"JianHao24"},"content":"    private void validateRepo(String repoName) throws ZettelException {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"JianHao24"},"content":"        Path indexPath \u003d fileSystemManager.getIndexPath(repoName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"JianHao24"},"content":"        List\u003cString\u003e expectedFiles \u003d noteSerializer.getExpectedFilenames(indexPath);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"JianHao24"},"content":"        fileSystemManager.validateRepoStructure(repoName, expectedFiles);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"JianHao24"},"content":"     * Creates a new repository with the specified name.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"JianHao24"},"content":"     * @param repoName the name of the repository to create","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"JianHao24"},"content":"    public void createRepo(String repoName) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"JianHao24"},"content":"        logger.info(\"Creating repository: \" + repoName);","lastModifiedDate":"2025-10-29T00:43:54","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"JianHao24"},"content":"        boolean created \u003d fileSystemManager.createRepoStructure(repoName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"JianHao24"},"content":"        if (created) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"JianHao24"},"content":"            addToConfig(repoName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"JianHao24"},"content":"            logger.info(\"Repository \" + repoName + \" successfully created\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"JianHao24"},"content":"        } else {","lastModifiedDate":"2025-10-29T00:43:54","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"JianHao24"},"content":"            logger.warning(\"Repository \" + repoName + \" already exists or creation failed\");","lastModifiedDate":"2025-10-29T00:43:54","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"JianHao24"},"content":"     * Adds a repository to the configuration file.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"JianHao24"},"content":"     * @param repoName the name of the repository to add","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"JianHao24"},"content":"    private void addToConfig(String repoName) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"JianHao24"},"content":"        fileSystemManager.createConfigFile(DEFAULT_REPO);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"JianHao24"},"content":"        Path configFile \u003d fileSystemManager.getConfigPath();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"gordonajajar"},"content":"        try {","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"gordonajajar"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(configFile);","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"gordonajajar"},"content":"            String firstLine \u003d lines.isEmpty() ? DEFAULT_REPO : lines.get(0);","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"gordonajajar"},"content":"            String secondLine \u003d (lines.size() \u003c 2) ? DEFAULT_REPO : lines.get(1);","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"gordonajajar"},"content":"            if (!firstLine.contains(repoName)) {","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"gordonajajar"},"content":"                firstLine \u003d firstLine.concat(\" | \" + repoName);","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"gordonajajar"},"content":"                Files.write(configFile, Arrays.asList(firstLine, secondLine));","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"gordonajajar"},"content":"                if (!repoList.contains(repoName)) {","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"gordonajajar"},"content":"                    repoList.add(repoName);","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"gordonajajar"},"content":"                }","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"gordonajajar"},"content":"            }","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"gordonajajar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"gordonajajar"},"content":"            System.out.println(\"Error updating .zettelConfig: \" + e.getMessage());","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:30:47","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"JianHao24"},"content":"     * Changes the current repository to the specified repository.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"JianHao24"},"content":"     * @param newRepo the name of the repository to switch to","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"gordonajajar"},"content":"    public void changeRepo(String newRepo) {","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"gordonajajar"},"content":"        if (!repoList.contains(newRepo)) {","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"gordonajajar"},"content":"            System.out.println(\"Repo \u0027\" + newRepo + \"\u0027 does not exist. Falling back to \u0027main\u0027.\");","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"gordonajajar"},"content":"            newRepo \u003d \"main\";","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"gordonajajar"},"content":"        this.repoName \u003d newRepo;","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"shauntsr"},"content":"        try {","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"gordonajajar"},"content":"            updateConfig(newRepo);","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"gordonajajar"},"content":"        } catch (ZettelException e) {","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"gordonajajar"},"content":"            System.out.println(\"Error switching repo: \" + e.getMessage());","lastModifiedDate":"2025-10-20T01:24:34","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"JianHao24"},"content":"     * Saves the list of notes to the current repository.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"JianHao24"},"content":"     * @param notes the list of notes to save","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"JianHao24"},"content":"    public void save(List\u003cNote\u003e notes) {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"JianHao24"},"content":"        Path indexPath \u003d fileSystemManager.getIndexPath(repoName);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"JianHao24"},"content":"            Files.createDirectories(indexPath.getParent());","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"JianHao24"},"content":"            noteSerializer.saveNotes(notes, indexPath);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"gordonajajar"},"content":"            validateRepo(repoName);","lastModifiedDate":"2025-10-20T03:16:00","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"gordonajajar"},"content":"            System.out.println(\"Error writing to index file: \" + e.getMessage());","lastModifiedDate":"2025-10-19T23:54:33","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"gordonajajar"},"content":"        } catch (ZettelException e) {","lastModifiedDate":"2025-10-20T03:16:00","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"gordonajajar"},"content":"            System.out.println(\"Error while validating repo: \" + e.getMessage());","lastModifiedDate":"2025-10-20T03:16:00","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:46:33","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"gordonajajar"},"content":"    public Path getNotePath(String filename) {","lastModifiedDate":"2025-10-28T16:46:33","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"gordonajajar"},"content":"        return fileSystemManager.getNotesPath(repoName).resolve(filename);","lastModifiedDate":"2025-10-28T16:46:33","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-28T16:46:33","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:46:53","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"JianHao24"},"content":"    /**","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"JianHao24"},"content":"     * Deletes note\u0027s body text from the current repository.","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"JianHao24"},"content":"     *","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"JianHao24"},"content":"     * @param filename the name of the note of body text to delete","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"JianHao24"},"content":"     * @throws ZettelException if there\u0027s an error deleting the file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"JianHao24"},"content":"     */","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"JianHao24"},"content":"    public void deleteStorageFile(String filename) throws ZettelException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"JianHao24"},"content":"        Path notesDir \u003d fileSystemManager.getNotesPath(repoName);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"JianHao24"},"content":"        Path noteFile \u003d notesDir.resolve(filename);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"JianHao24"},"content":"            if (Files.exists(noteFile)) {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"JianHao24"},"content":"                Files.delete(noteFile);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"JianHao24"},"content":"            throw new ZettelException(\"Error while deleting body file \u0027\" + filename + \"\u0027: \" + e.getMessage());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false}],"authorContributionMap":{"gordonajajar":91,"JianHao24":195,"shauntsr":55}},{"path":"src/main/java/seedu/zettel/util/EditorUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.util;","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import java.io.File;","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gordonajajar"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.EditorNotFoundException;","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.NoNoteFoundException;","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gordonajajar"},"content":"/**","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gordonajajar"},"content":" * CLI utility to open an existing file in the user\u0027s preferred text editor.","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":" * Priority order for editor selection:","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":" *  1) $VISUAL","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gordonajajar"},"content":" *  2) $EDITOR","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":" *  3) fallback editors: vim, nano, vi","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gordonajajar"},"content":" */","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"public final class EditorUtil {","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gordonajajar"},"content":"     * Opens an existing file in the user\u0027s preferred text editor.","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gordonajajar"},"content":"     * Attempts to use $VISUAL or $EDITOR environment variables first,","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":"     * then falls back to common CLI editors (vim, nano, vi).","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gordonajajar"},"content":"     * @param filePath path to the file to open","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gordonajajar"},"content":"     * @throws EditorNotFoundException if no editor could be launched","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gordonajajar"},"content":"     * @throws InterruptedException if interrupted while waiting for the editor to close","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gordonajajar"},"content":"     * @throws NoNoteFoundException if the target file does not exist","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gordonajajar"},"content":"    public static void openInEditor(Path filePath)","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gordonajajar"},"content":"            throws EditorNotFoundException, InterruptedException, NoNoteFoundException {","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"        File file \u003d filePath.toFile();","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gordonajajar"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gordonajajar"},"content":"            throw new NoNoteFoundException(\"Note does not exist at \" + filePath);","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"        if (System.console() \u003d\u003d null) {","lastModifiedDate":"2025-10-28T16:52:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gordonajajar"},"content":"            // No interactive console available (IDE Run, background process, etc.)","lastModifiedDate":"2025-10-28T16:52:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gordonajajar"},"content":"            throw new EditorNotFoundException(","lastModifiedDate":"2025-10-28T16:52:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gordonajajar"},"content":"                    \"No interactive terminal available. \" +","lastModifiedDate":"2025-10-28T16:52:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gordonajajar"},"content":"                    \"Run the program from a real terminal/console or supply the note body via -b.\");","lastModifiedDate":"2025-10-28T16:52:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-28T16:52:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:52:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gordonajajar"},"content":"        // Try environment variables first","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gordonajajar"},"content":"        String[] envVars \u003d {\"VISUAL\", \"EDITOR\"};","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gordonajajar"},"content":"        for (String var : envVars) {","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gordonajajar"},"content":"            String editor \u003d System.getenv(var);","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gordonajajar"},"content":"            if (editor !\u003d null \u0026\u0026 !editor.isBlank()) {","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gordonajajar"},"content":"                if (tryLaunchEditor(editor, file)) {","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gordonajajar"},"content":"                    return;","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gordonajajar"},"content":"                }","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gordonajajar"},"content":"            }","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gordonajajar"},"content":"        String os \u003d System.getProperty(\"os.name\").toLowerCase();","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gordonajajar"},"content":"        if (os.contains(\"win\")) {","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gordonajajar"},"content":"            // If on Windows, try notepad","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gordonajajar"},"content":"            if (tryLaunchEditor(\"notepad.exe\", file)) {","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gordonajajar"},"content":"                return;","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gordonajajar"},"content":"            }","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:34:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gordonajajar"},"content":"        // Try common CLI editors, as fallback","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gordonajajar"},"content":"        String[] commonEditors \u003d {\"vim\", \"nano\", \"vi\"};","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gordonajajar"},"content":"        for (String editor : commonEditors) {","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gordonajajar"},"content":"            if (tryLaunchEditor(editor, file)) {","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gordonajajar"},"content":"                return;","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gordonajajar"},"content":"            }","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gordonajajar"},"content":"        throw new EditorNotFoundException(","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gordonajajar"},"content":"            \"No suitable text editor found. Tried: $VISUAL, $EDITOR, vim, nano, vi\"","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gordonajajar"},"content":"        );","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gordonajajar"},"content":"    /**","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gordonajajar"},"content":"     * Attempts to launch the specified editor with the given file.","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gordonajajar"},"content":"     *","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gordonajajar"},"content":"     * @param editor the editor command to run","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gordonajajar"},"content":"     * @param file the file to open","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gordonajajar"},"content":"     * @return true if the editor was successfully launched and exited, false otherwise","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gordonajajar"},"content":"     * @throws InterruptedException if interrupted while waiting for the editor","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gordonajajar"},"content":"     */","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gordonajajar"},"content":"    private static boolean tryLaunchEditor(String editor, File file) throws InterruptedException {","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gordonajajar"},"content":"        try {","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gordonajajar"},"content":"            Process process \u003d new ProcessBuilder(editor, file.getAbsolutePath())","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gordonajajar"},"content":"                    .inheritIO()","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gordonajajar"},"content":"                    .start();","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gordonajajar"},"content":"            int exitCode \u003d process.waitFor();","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gordonajajar"},"content":"            return exitCode \u003d\u003d 0 || exitCode \u003d\u003d 1;","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gordonajajar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gordonajajar"},"content":"            // Return false to try next editor","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gordonajajar"},"content":"            return false;","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-28T16:07:07","isFullCredit":false}],"authorContributionMap":{"gordonajajar":97}},{"path":"src/main/java/seedu/zettel/util/IdGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shira421"},"content":"package seedu.zettel.util;","lastModifiedDate":"2025-10-17T11:24:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shira421"},"content":"import java.security.MessageDigest;","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"import java.security.NoSuchAlgorithmException;","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":" * Utility class for generating deterministic 8-character hexadecimal IDs","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":" * based on note content and creation timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shira421"},"content":"public class IdGenerator {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shira421"},"content":"    private static final int ID_LENGTH \u003d 8;","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shira421"},"content":"    private static final String HASH_ALGORITHM \u003d \"SHA-256\";","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":"    private static final int BYTES_FOR_ID \u003d 4; // 4 bytes \u003d 8 hex characters","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":"     * Generates an 8-character hexadecimal ID by hashing the input string.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":"     * Uses SHA-256 algorithm and takes the first 4 bytes of the hash.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"     * @param input The string to hash (typically title + timestamp)","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"     * @return 8-character lowercase hexadecimal ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"    public static String generateId(String input) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"        try {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"            MessageDigest digest \u003d MessageDigest.getInstance(HASH_ALGORITHM);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"            byte[] hash \u003d digest.digest(input.getBytes(StandardCharsets.UTF_8));","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"            // Convert first 4 bytes to hex (8 characters)","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"            StringBuilder hexString \u003d new StringBuilder();","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"            for (int i \u003d 0; i \u003c BYTES_FOR_ID; i++) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"                String hex \u003d Integer.toHexString(0xff \u0026 hash[i]);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"                if (hex.length() \u003d\u003d 1) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"                    hexString.append(\u00270\u0027);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"                }","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"                hexString.append(hex);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"            }","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"            return hexString.toString();","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"        } catch (NoSuchAlgorithmException e) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"            // Fallback to timestamp-based ID if SHA-256 unavailable","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"            // This should never happen in standard JVM environments","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"            return generateFallbackId(input);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"        }","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"     * Generates a fallback ID based on the hashCode of the input.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"     * Used only if SHA-256 is unavailable.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"     * @param input The string to generate ID from","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"     * @return 8-character hexadecimal ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"    private static String generateFallbackId(String input) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"        int hashCode \u003d input.hashCode();","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"        long timestamp \u003d System.currentTimeMillis();","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"        long combined \u003d ((long) hashCode \u003c\u003c 32) | (timestamp \u0026 0xFFFFFFFFL);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"        String hex \u003d Long.toHexString(combined);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"        // Ensure exactly 8 characters","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"        if (hex.length() \u003e\u003d ID_LENGTH) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"            return hex.substring(0, ID_LENGTH);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"        } else {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"            return String.format(\"%8s\", hex).replace(\u0027 \u0027, \u00270\u0027);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"        }","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"}","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false}],"authorContributionMap":{"shira421":65}},{"path":"src/test/java/seedu/zettel/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shira421"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shira421"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"import java.util.List;","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-14T19:02:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-14T19:02:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-14T19:02:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-10-14T19:02:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-14T19:02:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":" * Unit tests for the Note class.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":" * Tests note creation, getters, setters, and hash-based ID functionality.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"public class NoteTest {","lastModifiedDate":"2025-10-14T23:13:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"    private Note note;","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"    private final String id \u003d \"a1b2c3d4\"; // 8-character lowercase hex ID","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"    private final String title \u003d \"Test Title\";","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"    private final String filename \u003d \"test_note.txt\";","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"    private final String body \u003d \"This is the body of the test note.\";","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"    private final Instant createdAt \u003d Instant.now().minus(1, ChronoUnit.DAYS);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"    private final Instant modifiedAt \u003d Instant.now();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"    void setUp() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"        // This setup runs before each test, providing a fresh note instance","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"        note \u003d new Note(id, title, filename, body, createdAt, modifiedAt);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Test primary constructor for new note creation\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"    void testNewNoteConstructor() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"        // The note from setUp is created with this constructor","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"        assertEquals(id, note.getId());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"        assertEquals(title, note.getTitle());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"        assertEquals(filename, note.getFilename());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"        assertEquals(body, note.getBody());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"        assertEquals(createdAt, note.getCreatedAt());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"        assertEquals(modifiedAt, note.getModifiedAt());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"        // Check default values for a new note","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"        assertFalse(note.isPinned(), \"New note should not be pinned by default.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"        assertFalse(note.isArchived(), \"New note should not be archived by default.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"        assertNull(note.getArchiveName(), \"Archive name should be null for a new note.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getLogs().isEmpty(), \"Logs should be empty for a new note.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Test full constructor for loading a note\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"    void testFullConstructor() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"        List\u003cString\u003e logs \u003d List.of(\"Log entry 1\", \"Log entry 2\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e tags \u003d List.of(\"Homework\");","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"        Note loadedNote \u003d new Note(id, title, filename, body, createdAt, modifiedAt,","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"                true, true, \"my-archive\", logs, tags);","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"        assertEquals(id, loadedNote.getId());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"        assertEquals(title, loadedNote.getTitle());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"        assertTrue(loadedNote.isPinned(), \"Pinned status should be loaded correctly.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"        assertTrue(loadedNote.isArchived(), \"Archived status should be loaded correctly.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"        assertEquals(\"my-archive\", loadedNote.getArchiveName());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shira421"},"content":"        assertEquals(2, loadedNote.getLogs().size());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shira421"},"content":"        assertEquals(\"Log entry 1\", loadedNote.getLogs().get(0));","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"        assertEquals(1, loadedNote.getTags().size());","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"Homework\", loadedNote.getTags().get(0));","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Test full constructor with null logs list\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shira421"},"content":"    void testFullConstructorWithNullLogs() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shira421"},"content":"        Note loadedNote \u003d new Note(id, title, filename, body, createdAt, modifiedAt,","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"                false, false, null, null,null);","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shira421"},"content":"        assertNotNull(loadedNote.getLogs(), \"Logs list should be initialized to an empty list, not null.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"        assertTrue(loadedNote.getLogs().isEmpty(), \"Logs list should be empty when loaded with null.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Getters should return correct values\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shira421"},"content":"    void testGetters() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shira421"},"content":"        assertEquals(id, note.getId());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shira421"},"content":"        assertEquals(title, note.getTitle());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shira421"},"content":"        assertEquals(filename, note.getFilename());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shira421"},"content":"        assertEquals(body, note.getBody());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shira421"},"content":"        assertEquals(createdAt, note.getCreatedAt());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shira421"},"content":"        assertEquals(modifiedAt, note.getModifiedAt());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Setters should update values and modifiedAt timestamp\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shira421"},"content":"    void testSettersAndUpdateTimestamp() throws InterruptedException {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shira421"},"content":"        Instant initialModifiedAt \u003d note.getModifiedAt();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shira421"},"content":"        // Allow a millisecond to pass to ensure Instant.now() is different","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shira421"},"content":"        Thread.sleep(1);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shira421"},"content":"        note.setTitle(\"New Title\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shira421"},"content":"        assertEquals(\"New Title\", note.getTitle());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getModifiedAt().isAfter(initialModifiedAt), \"setTitle should update modifiedAt.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shira421"},"content":"        initialModifiedAt \u003d note.getModifiedAt();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shira421"},"content":"        Thread.sleep(1);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shira421"},"content":"        note.setBody(\"New body content.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shira421"},"content":"        assertEquals(\"New body content.\", note.getBody());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getModifiedAt().isAfter(initialModifiedAt), \"setBody should update modifiedAt.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"setFilename should not update modifiedAt timestamp\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shira421"},"content":"    void testSetFilenameDoesNotUpdateTimestamp() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shira421"},"content":"        Instant initialModifiedAt \u003d note.getModifiedAt();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shira421"},"content":"        note.setFilename(\"new_filename.md\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shira421"},"content":"        assertEquals(\"new_filename.md\", note.getFilename());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shira421"},"content":"        assertEquals(initialModifiedAt, note.getModifiedAt(), \"setFilename should not update modifiedAt.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"setPinned should update value and modifiedAt timestamp\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shira421"},"content":"    void testSetPinned() throws InterruptedException {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shira421"},"content":"        Instant initialModifiedAt \u003d note.getModifiedAt();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shira421"},"content":"        Thread.sleep(1);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shira421"},"content":"        note.setPinned(true);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shira421"},"content":"        assertTrue(note.isPinned());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getModifiedAt().isAfter(initialModifiedAt), \"setPinned should update modifiedAt.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"addLog should add an entry to the logs\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shira421"},"content":"    void testAddLog() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getLogs().isEmpty());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shira421"},"content":"        String logEntry \u003d \"Note created.\";","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shira421"},"content":"        note.addLog(logEntry);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shira421"},"content":"        assertEquals(1, note.getLogs().size());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"shira421"},"content":"        assertEquals(logEntry, note.getLogs().get(0));","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"getLogs should return a defensive copy\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shira421"},"content":"    void testGetLogsReturnsDefensiveCopy() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shira421"},"content":"        note.addLog(\"Original log\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shira421"},"content":"        List\u003cString\u003e logsCopy \u003d note.getLogs();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"shira421"},"content":"        // Modify the returned copy","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shira421"},"content":"        logsCopy.add(\"This should not affect the original\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shira421"},"content":"        assertEquals(1, note.getLogs().size(), \"Modifying the copy should not affect the original list.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shira421"},"content":"        assertEquals(\"Original log\", note.getLogs().get(0));","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"danielkwan2004"},"content":"    @DisplayName(\"updateModifiedAt should update the modifiedAt timestamp\")","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"danielkwan2004"},"content":"    void testUpdateModifiedAt() throws InterruptedException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"shira421"},"content":"        Instant initialModifiedAt \u003d note.getModifiedAt();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"shira421"},"content":"        Thread.sleep(1); // Ensure the clock tick is registered","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"danielkwan2004"},"content":"        note.updateModifiedAt();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getModifiedAt().isAfter(initialModifiedAt),","lastModifiedDate":"2025-10-14T19:02:32","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"danielkwan2004"},"content":"                \"updateModifiedAt should update the timestamp to a later time.\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"toString should return correctly formatted string\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"shira421"},"content":"    void testToString() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"shira421"},"content":"        String noteString \u003d note.toString();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"shira421"},"content":"        // Expected format: \"FILENAME yyyy-MM-dd NOTEID\"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"shira421"},"content":"        // Example: test_note.txt 2025-10-14 a1b2c3d4","lastModifiedDate":"2025-10-16T13:52:38","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"shira421"},"content":"        String[] parts \u003d noteString.split(\" \");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"shira421"},"content":"        assertEquals(3, parts.length, \"toString() output should have 3 parts separated by spaces.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"shira421"},"content":"        assertEquals(filename, parts[0]);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"shira421"},"content":"        assertEquals(id, parts[2]);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"shira421"},"content":"        // Verify the date part matches the yyyy-MM-dd pattern","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"shira421"},"content":"        assertTrue(parts[1].matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\"), \"Date part should be in yyyy-MM-dd format.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Static note counter should increment on object creation\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"shira421"},"content":"    void testNumberOfNotesCounter() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"shira421"},"content":"        // This test is self-contained to avoid interference from other tests\u0027 object creations","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"shira421"},"content":"        int countBefore \u003d Note.getNumberOfNotes();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"shira421"},"content":"        // Use lowercase hex IDs","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"shira421"},"content":"        Note note1 \u003d new Note(\"abcd1234\", \"t1\", \"f1\", \"b1\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"shira421"},"content":"        assertEquals(countBefore + 1, Note.getNumberOfNotes());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"shira421"},"content":"        Note note2 \u003d new Note(\"def56789\", \"t2\", \"f2\", \"b2\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"shira421"},"content":"        assertEquals(countBefore + 2, Note.getNumberOfNotes());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"shira421"},"content":"}","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"shauntsr":5,"danielkwan2004":7,"shira421":183}},{"path":"src/test/java/seedu/zettel/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JianHao24"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.Command;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.DeleteNoteCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.commands.EditNoteCommand;","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.ExitCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.FindNoteCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.InitCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.LinkBothNotesCommand;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.LinkNotesCommand;","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.ListNoteCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.ListTagsIndividualNoteCommand;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.NewNoteCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.PinNoteCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.TagNoteCommand;","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.UnlinkBothNotesCommand;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.UnlinkNotesCommand;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.exceptions.EmptyDescriptionException;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.exceptions.InvalidFormatException;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":" * Unit tests for the Parser class.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":" * Tests parsing of all commands and validation of hexadecimal note IDs.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JianHao24"},"content":"class ParserTest {","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"    void testParseExitCommandReturnsExitCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(ExitCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"    void testParseListCommandReturnsListNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(ListNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"    void testParseListWithPinnedFlagReturnsListNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"list -p\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(ListNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"    void testParseListWithInvalidFlagThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JianHao24"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list -x\"));","lastModifiedDate":"2025-10-15T14:13:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"    void testParseNewNoteWithTitleOnlyReturnsNewNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"new -t My Title\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(NewNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"    void testParseNewNoteWithTitleAndBodyReturnsNewNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"new -t My Title -b My Body\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(NewNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"    void testParseNewNoteWithoutTitleFlagThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"new My Title\"));","lastModifiedDate":"2025-10-15T14:13:40","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"    void testParseNewNoteWithEmptyTitleThrowsEmptyDescriptionException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JianHao24"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e Parser.parse(\"new -t\"));","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"    void testParseDeleteWithValidHexIdReturnsDeleteNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"        Command command \u003d Parser.parse(\"delete abcd1234\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(DeleteNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shira421"},"content":"    void testParseDeleteWithUppercaseHexThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shira421"},"content":"        // IDs must be lowercase hex only","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"delete ABCD1234\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"    void testParseDeleteWithSpecialCharactersThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"delete abcd-234\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"    void testParseDeleteWithInvalidCharactersThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shira421"},"content":"        // \u0027g\u0027 is not a valid hex character","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"delete abcdefgh\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"    void testParseDeleteWithForceFlagReturnsDeleteNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shira421"},"content":"        Command command \u003d Parser.parse(\"delete -f abcd1234\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(DeleteNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"    void testParseDeleteWithoutIdThrowsEmptyDescriptionException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JianHao24"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e Parser.parse(\"delete\"));","lastModifiedDate":"2025-10-15T14:13:40","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"    void testParseDeleteWithTooShortIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"delete abc\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"danielkwan2004"},"content":"    void testParseDeleteWithTooLongIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"delete abcdef123\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shira421"},"content":"    void testParsePinWithValidHexIdReturnsPinNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shira421"},"content":"        Command command \u003d Parser.parse(\"pin abcd1234\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(PinNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shira421"},"content":"    void testParseUnpinWithValidHexIdReturnsPinNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shira421"},"content":"        Command command \u003d Parser.parse(\"unpin def56789\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(PinNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"danielkwan2004"},"content":"    void testParsePinWithoutIdThrowsEmptyDescriptionException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JianHao24"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e Parser.parse(\"pin\"));","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"danielkwan2004"},"content":"    void testParsePinWithSpecialCharactersThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"pin abcd-234\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"danielkwan2004"},"content":"    void testParsePinWithTooShortIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"pin abc\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"danielkwan2004"},"content":"    void testParsePinWithTooLongIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"pin abcdef123\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shira421"},"content":"    void testParsePinWithUppercaseHexThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"shira421"},"content":"        // IDs must be lowercase hex only","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"pin ABCD1234\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"danielkwan2004"},"content":"    void testParseInitWithRepoNameReturnsInitCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"init myRepo\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(InitCommand.class,command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"danielkwan2004"},"content":"    void testParseInitWithoutRepoNameThrowsEmptyDescriptionException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JianHao24"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e Parser.parse(\"init\"));","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JianHao24"},"content":"    void testParseInitWithInvalidFormatThrowsInvalidInputException() {","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JianHao24"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"init my repo!\"));","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-17T03:13:45","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"danielkwan2004"},"content":"    void testParseFindWithSearchTermReturnsFindNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"find test\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(FindNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"danielkwan2004"},"content":"    void testParseFindWithoutSearchTermThrowsEmptyDescriptionException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JianHao24"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e Parser.parse(\"find\"));","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Link Command Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithValidIdsReturnsLinkNotesCommand() throws ZettelException {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"danielkwan2004"},"content":"        Command command \u003d Parser.parse(\"link abcd1234 ef567890\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"danielkwan2004"},"content":"        assertInstanceOf(LinkNotesCommand.class, command);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithoutArgumentsThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithOnlyOneIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link abcd1234\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithTooManyArgumentsThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link abcd1234 ef567890 12345678\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithTooShortFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link abc ef567890\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithTooShortSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link abcd1234 ef5\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithTooLongFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link abcd12345 ef567890\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithTooLongSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link abcd1234 ef567890123\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithSpecialCharactersFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link abcd-234 ef567890\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithSpecialCharactersSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link abcd1234 ef56@890\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithUppercaseFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link ABCD1234 ef567890\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithUppercaseSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link abcd1234 EF567890\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithInvalidHexCharactersFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link abcdefgh ef567890\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkWithInvalidHexCharactersSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link abcd1234 ghijk890\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tag Command Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"danielkwan2004"},"content":"    void testParseTagAddWithValidIdAndTagReturnsTagNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"danielkwan2004"},"content":"        Command command \u003d Parser.parse(\"tag add abcd1234 urgent\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"danielkwan2004"},"content":"        assertInstanceOf(TagNoteCommand.class, command);","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"danielkwan2004"},"content":"    void testParseTagAddWithoutArgumentsThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"tag add\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"danielkwan2004"},"content":"    void testParseTagAddWithOnlyNoteIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"tag add abcd1234\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"danielkwan2004"},"content":"    void testParseTagAddWithTooShortIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"tag add abc urgent\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"danielkwan2004"},"content":"    void testParseTagAddWithTooLongIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"tag add abcd12345 urgent\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"danielkwan2004"},"content":"    void testParseTagAddWithSpecialCharactersIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"tag add abcd-234 urgent\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"danielkwan2004"},"content":"    void testParseTagAddWithUppercaseIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"tag add ABCD1234 urgent\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"danielkwan2004"},"content":"    void testParseTagAddWithInvalidHexCharactersThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"tag add abcdefgh urgent\"));","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnknownCommandThrowsInvalidInputException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"JianHao24"},"content":"        assertThrows(InvalidInputException.class, () -\u003e Parser.parse(\"unknown\"));","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"gordonajajar"},"content":"    void testParseEditWithValidHexIdReturnsEditNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"gordonajajar"},"content":"        Command command \u003d Parser.parse(\"edit abcd1234\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"gordonajajar"},"content":"        assertInstanceOf(EditNoteCommand.class, command);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"gordonajajar"},"content":"    void testParseEditWithoutIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T12:46:53","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"gordonajajar"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"edit\"));","lastModifiedDate":"2025-10-29T12:46:53","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"gordonajajar"},"content":"    void testParseEditWithTooShortIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"gordonajajar"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"edit abc\"));","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"gordonajajar"},"content":"    void testParseEditWithTooLongIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"gordonajajar"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"edit abcdef123\"));","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"gordonajajar"},"content":"    void testParseEditWithUppercaseHexThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"gordonajajar"},"content":"        // IDs must be lowercase hex only","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"gordonajajar"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"edit ABCD1234\"));","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"gordonajajar"},"content":"    void testParseEditWithSpecialCharactersThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"gordonajajar"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"edit abcd-234\"));","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"gordonajajar"},"content":"    void testParseEditWithInvalidCharactersThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"gordonajajar"},"content":"        // \u0027g\u0027 is not a valid hex character","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"gordonajajar"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"edit abcdefgh\"));","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"gordonajajar"},"content":"    void testParseEditWithTooManyArgumentsThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"gordonajajar"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"edit abcd1234 extra\"));","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"gordonajajar"},"content":"    void testParseNewNoteWithEmptyBodyFlagReturnsNewNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"gordonajajar"},"content":"        // \"new -t Title -b\" should parse successfully with empty body string","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"gordonajajar"},"content":"        Command command \u003d Parser.parse(\"new -t Title -b\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"gordonajajar"},"content":"        assertInstanceOf(NewNoteCommand.class, command);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"gordonajajar"},"content":"    void testParseNewNoteWithTitleOnlyCreatesCommandWithNullBody() throws ZettelException {","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"gordonajajar"},"content":"        // \"new -t Title\" (no -b flag) should create command with null body","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"gordonajajar"},"content":"        // This triggers editor opening behavior","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"gordonajajar"},"content":"        Command command \u003d Parser.parse(\"new -t Title\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"gordonajajar"},"content":"        assertInstanceOf(NewNoteCommand.class, command);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Unlink Command Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithValidIdsReturnsUnlinkNotesCommand() throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"danielkwan2004"},"content":"        Command command \u003d Parser.parse(\"unlink abcd1234 ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"danielkwan2004"},"content":"        assertInstanceOf(UnlinkNotesCommand.class, command);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithoutArgumentsThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithOnlyOneIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithTooManyArgumentsThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink abcd1234 ef567890 12345678\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithTooShortFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink abc ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithTooShortSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink abcd1234 ef5\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithTooLongFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink abcd12345 ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithTooLongSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink abcd1234 ef567890123\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithSpecialCharactersFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink abcd-234 ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithSpecialCharactersSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink abcd1234 ef56@890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithUppercaseFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink ABCD1234 ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithUppercaseSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink abcd1234 EF567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithInvalidHexCharactersFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink abcdefgh ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkWithInvalidHexCharactersSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink abcd1234 ghijk890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Link-Both Command Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithValidIdsReturnsLinkBothNotesCommand() throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"danielkwan2004"},"content":"        Command command \u003d Parser.parse(\"link-both abcd1234 ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"danielkwan2004"},"content":"        assertInstanceOf(LinkBothNotesCommand.class, command);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithoutArgumentsThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithOnlyOneIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithTooManyArgumentsThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both abcd1234 ef567890 12345678\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithTooShortFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both abc ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithTooShortSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both abcd1234 ef5\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithTooLongFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both abcd12345 ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithTooLongSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both abcd1234 ef567890123\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithSpecialCharactersFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both abcd-234 ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithSpecialCharactersSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both abcd1234 ef56@890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithUppercaseFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both ABCD1234 ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithUppercaseSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both abcd1234 EF567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithInvalidHexCharactersFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both abcdefgh ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"danielkwan2004"},"content":"    void testParseLinkBothWithInvalidHexCharactersSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"link-both abcd1234 ghijk890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Unlink-Both Command Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithValidIdsReturnsUnlinkBothNotesCommand() throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"danielkwan2004"},"content":"        Command command \u003d Parser.parse(\"unlink-both abcd1234 ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"danielkwan2004"},"content":"        assertInstanceOf(UnlinkBothNotesCommand.class, command);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithoutArgumentsThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithOnlyOneIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithTooManyArgumentsThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both abcd1234 ef567890 12345678\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithTooShortFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both abc ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithTooShortSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both abcd1234 ef5\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithTooLongFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both abcd12345 ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithTooLongSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both abcd1234 ef567890123\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithSpecialCharactersFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both abcd-234 ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithSpecialCharactersSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both abcd1234 ef56@890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithUppercaseFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both ABCD1234 ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithUppercaseSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both abcd1234 EF567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithInvalidHexCharactersFirstIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both abcdefgh ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnlinkBothWithInvalidHexCharactersSecondIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"unlink-both abcd1234 ghijk890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"    //@@author danielkwan2004-reused","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"    //Reused from testParseUnlinkBoth tests above with modifications","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"    //list-tags command parser tests","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithValidIdReturnsListTagsIndividualNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"        Command command \u003d Parser.parse(\"list-tags abcd1234\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"        assertTrue(command instanceof ListTagsIndividualNoteCommand);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithoutArgumentsThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list-tags\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithTooManyArgumentsThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list-tags abcd1234 ef567890\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithTooShortIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list-tags abc123\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithTooLongIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list-tags abcd12345\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithSpecialCharactersIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list-tags abcd@234\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithUppercaseIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list-tags ABCD1234\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithInvalidHexCharactersIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list-tags abcdefgh\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithWhitespaceInIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list-tags abc 1234\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithEmptyStringIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list-tags \"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithMixedCaseIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list-tags AbCd1234\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithSymbolsIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list-tags abcd#234\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithNumbersOnlyIdReturnsListTagsIndividualNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"        Command command \u003d Parser.parse(\"list-tags 12345678\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"        assertTrue(command instanceof ListTagsIndividualNoteCommand);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"    void testParseListTagsIndividualNoteWithLettersOnlyIdReturnsListTagsIndividualNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"        Command command \u003d Parser.parse(\"list-tags abcdefab\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"        assertTrue(command instanceof ListTagsIndividualNoteCommand);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false}],"authorContributionMap":{"gordonajajar":59,"JianHao24":106,"danielkwan2004":389,"-":76,"shira421":31}},{"path":"src/test/java/seedu/zettel/ZettelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shira421"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":" * Unit tests for the Zettel main class.","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":" * Tests application initialization and configuration.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":"class ZettelTest {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"    private static final Path DATA_DIR \u003d Path.of(\"data\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"    private static final Path NOTES_FILE \u003d DATA_DIR.resolve(\"notes.txt\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"    void setUp() throws Exception {","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"        // Ensure data directory exists before each test","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"        Files.createDirectories(DATA_DIR);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"    @AfterEach","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"        // Clean up data files after each test","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"        try {","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"            Files.deleteIfExists(NOTES_FILE);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"            Files.deleteIfExists(DATA_DIR);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"            System.err.println(\"Cleanup failed: \" + e.getMessage());","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"        }","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-14T21:18:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"    void constructor_initializesDependenciesSuccessfully() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"            Zettel zettel \u003d new Zettel();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"            assertNotNull(zettel, \"Zettel instance should not be null\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"        });","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"    void constructor_createsUIAndStorageAndNotesList() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"        Zettel zettel \u003d new Zettel();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"        // Use reflection to access private fields","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"        try {","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"            var uiField \u003d Zettel.class.getDeclaredField(\"ui\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"            var storageField \u003d Zettel.class.getDeclaredField(\"storage\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"            var notesField \u003d Zettel.class.getDeclaredField(\"notes\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"            uiField.setAccessible(true);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"            storageField.setAccessible(true);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"            notesField.setAccessible(true);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"            assertNotNull(uiField.get(zettel), \"UI should be initialized\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"            assertNotNull(storageField.get(zettel), \"Storage should be initialized\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"            assertNotNull(notesField.get(zettel), \"Notes list should be initialized\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"        } catch (ReflectiveOperationException e) {","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"            fail(\"Reflection access failed: \" + e.getMessage());","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shira421"},"content":"        }","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shira421"},"content":"    void mainMethod_existsAndDoesNotThrow() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shira421"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shira421"},"content":"            Zettel.class.getDeclaredMethod(\"main\", String[].class);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shira421"},"content":"        }, \"Zettel should have a main method\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shira421"},"content":"    void multipleInstances_canBeCreatedIndependently() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"            Zettel z1 \u003d new Zettel();","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"            Zettel z2 \u003d new Zettel();","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"            assertNotSame(z1, z2, \"Each Zettel instance should be unique\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shira421"},"content":"        });","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false}],"authorContributionMap":{"gordonajajar":8,"JianHao24":1,"danielkwan2004":3,"shira421":73}},{"path":"src/test/java/seedu/zettel/commands/DeleteNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"import java.util.List;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JianHao24"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JianHao24"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JianHao24"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JianHao24"},"content":"class DeleteNoteCommandTest {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JianHao24"},"content":"    @TempDir","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JianHao24"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":"    private UI ui;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JianHao24"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JianHao24"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gordonajajar"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"    void setUp() {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JianHao24"},"content":"        storage.init();","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JianHao24"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JianHao24"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JianHao24"},"content":"    void execute_successfulDelete_removesFileAndMetadata() throws Exception {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JianHao24"},"content":"        // Create a test note","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JianHao24"},"content":"        Note testNote \u003d new Note(","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JianHao24"},"content":"                \"12345678\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JianHao24"},"content":"                \"Test Note\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JianHao24"},"content":"                \"Test_Note.txt\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JianHao24"},"content":"                \"Test body content\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JianHao24"},"content":"                Instant.now(),","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JianHao24"},"content":"                Instant.now()","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JianHao24"},"content":"        );","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JianHao24"},"content":"        notes.add(testNote);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JianHao24"},"content":"        // Create the physical file","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JianHao24"},"content":"        storage.createStorageFile(testNote);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JianHao24"},"content":"        storage.save(notes);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JianHao24"},"content":"        // Verify file exists before deletion","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JianHao24"},"content":"        Path notesDir \u003d tempDir.resolve(\"main\").resolve(\"notes\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JianHao24"},"content":"        Path noteFile \u003d notesDir.resolve(\"Test_Note.txt\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JianHao24"},"content":"        assertTrue(Files.exists(noteFile), \"Note file should exist before deletion\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JianHao24"},"content":"        // Execute delete with force flag (skip confirmation)","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JianHao24"},"content":"        DeleteNoteCommand command \u003d new DeleteNoteCommand(\"12345678\", true);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JianHao24"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JianHao24"},"content":"        // Verify note removed from list","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JianHao24"},"content":"        assertEquals(0, notes.size(), \"Note should be removed from ArrayList\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JianHao24"},"content":"        // Verify physical file deleted","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JianHao24"},"content":"        assertFalse(Files.exists(noteFile), \"Note file should be deleted\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JianHao24"},"content":"        // Verify metadata removed from index.txt","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JianHao24"},"content":"        Path indexPath \u003d tempDir.resolve(\"main\").resolve(\"index.txt\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JianHao24"},"content":"        String indexContent \u003d Files.readString(indexPath);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JianHao24"},"content":"        assertFalse(indexContent.contains(\"12345678\"), \"Note ID should not be in index.txt\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JianHao24"},"content":"    void execute_missingBodyFile_stillRemovesMetadata() throws Exception {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JianHao24"},"content":"        // Create a note","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JianHao24"},"content":"        Note testNote \u003d new Note(","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JianHao24"},"content":"                \"abcdefgh\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JianHao24"},"content":"                \"Orphan Note\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JianHao24"},"content":"                \"Orphan_Note.txt\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JianHao24"},"content":"                \"Body content\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JianHao24"},"content":"                Instant.now(),","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JianHao24"},"content":"                Instant.now()","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JianHao24"},"content":"        );","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JianHao24"},"content":"        notes.add(testNote);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JianHao24"},"content":"        // Manually write only metadata to index.txt (without body file)","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JianHao24"},"content":"        Path indexPath \u003d tempDir.resolve(\"main\").resolve(\"index.txt\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JianHao24"},"content":"        Files.createDirectories(indexPath.getParent());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JianHao24"},"content":"        // Follow actual index format","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JianHao24"},"content":"        String metadata \u003d String.join(\" | \",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JianHao24"},"content":"                testNote.getId(),","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JianHao24"},"content":"                testNote.getTitle(),","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JianHao24"},"content":"                testNote.getFilename(),","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JianHao24"},"content":"                testNote.getCreatedAt().toString(),","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JianHao24"},"content":"                testNote.getModifiedAt().toString(),","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JianHao24"},"content":"                \"0\",  // pin flag","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JianHao24"},"content":"                \"0\",  // archive flag","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JianHao24"},"content":"                \"\",   // tags (empty)","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JianHao24"},"content":"                \"\",   // tags (empty)","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JianHao24"},"content":"                \"\"    // extra placeholder","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JianHao24"},"content":"        );","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(indexPath, metadata + System.lineSeparator());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JianHao24"},"content":"        // Verify body file is missing","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JianHao24"},"content":"        Path notesDir \u003d tempDir.resolve(\"main\").resolve(\"notes\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JianHao24"},"content":"        Path noteFile \u003d notesDir.resolve(\"Orphan_Note.txt\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JianHao24"},"content":"        assertFalse(Files.exists(noteFile), \"Note file should not exist\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JianHao24"},"content":"        // Execute delete","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JianHao24"},"content":"        DeleteNoteCommand command \u003d new DeleteNoteCommand(\"abcdefgh\", true);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JianHao24"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JianHao24"},"content":"        // Verify note removed from list","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JianHao24"},"content":"        assertEquals(0, notes.size(), \"Note should be removed even if file is missing\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JianHao24"},"content":"        // Verify metadata removed","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JianHao24"},"content":"        String indexContent \u003d Files.readString(indexPath);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JianHao24"},"content":"        assertFalse(indexContent.contains(\"abcdefgh\"), \"Note ID should not be in index.txt\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JianHao24"},"content":"    void execute_nonExistentId_throwsException() {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JianHao24"},"content":"        // Add a different note","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JianHao24"},"content":"        Note testNote \u003d new Note(","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JianHao24"},"content":"                \"11111111\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JianHao24"},"content":"                \"Existing Note\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JianHao24"},"content":"                \"Existing_Note.txt\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JianHao24"},"content":"                \"Content\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JianHao24"},"content":"                Instant.now(),","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JianHao24"},"content":"                Instant.now()","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JianHao24"},"content":"        );","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JianHao24"},"content":"        notes.add(testNote);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JianHao24"},"content":"        // Try to delete non-existent note","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JianHao24"},"content":"        DeleteNoteCommand command \u003d new DeleteNoteCommand(\"99999999\", true);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-15T00:49:07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JianHao24"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JianHao24"},"content":"        }, \"Should throw InvalidNoteIdException for non-existent ID\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JianHao24"},"content":"        // Verify original note still exists","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JianHao24"},"content":"        assertEquals(1, notes.size(), \"Original note should remain\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JianHao24"},"content":"    void execute_emptyNotesList_throwsException() {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JianHao24"},"content":"        // Try to delete from empty list","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JianHao24"},"content":"        DeleteNoteCommand command \u003d new DeleteNoteCommand(\"12345678\", true);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JianHao24"},"content":"        assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JianHao24"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JianHao24"},"content":"        }, \"Should throw NoNotesException when notes list is empty\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JianHao24"},"content":"    void execute_withConfirmation_deletesOnYes() throws Exception {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JianHao24"},"content":"        // Create test note","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JianHao24"},"content":"        Note testNote \u003d new Note(","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JianHao24"},"content":"                \"22222222\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JianHao24"},"content":"                \"Confirm Delete\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JianHao24"},"content":"                \"Confirm_Delete.txt\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JianHao24"},"content":"                \"Test content\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JianHao24"},"content":"                Instant.now(),","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JianHao24"},"content":"                Instant.now()","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JianHao24"},"content":"        );","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JianHao24"},"content":"        notes.add(testNote);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JianHao24"},"content":"        storage.createStorageFile(testNote);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JianHao24"},"content":"        storage.save(notes);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JianHao24"},"content":"        // Simulate user typing \"yes\"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JianHao24"},"content":"        String userInput \u003d \"yes\\n\";","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"gordonajajar"},"content":"        System.setIn(new ByteArrayInputStream(userInput.getBytes()));","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JianHao24"},"content":"        // Execute delete without force flag","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JianHao24"},"content":"        DeleteNoteCommand command \u003d new DeleteNoteCommand(\"22222222\", false);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JianHao24"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JianHao24"},"content":"        // Verify deletion occurred","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JianHao24"},"content":"        assertEquals(0, notes.size(), \"Note should be deleted after confirmation\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JianHao24"},"content":"    void execute_withConfirmation_cancelsOnNo() throws Exception {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JianHao24"},"content":"        // Create test note","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JianHao24"},"content":"        Note testNote \u003d new Note(","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JianHao24"},"content":"                \"33333333\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JianHao24"},"content":"                \"Cancel Delete\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JianHao24"},"content":"                \"Cancel_Delete.txt\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JianHao24"},"content":"                \"Test content\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JianHao24"},"content":"                Instant.now(),","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JianHao24"},"content":"                Instant.now()","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JianHao24"},"content":"        );","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"JianHao24"},"content":"        notes.add(testNote);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JianHao24"},"content":"        storage.createStorageFile(testNote);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JianHao24"},"content":"        storage.save(notes);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JianHao24"},"content":"        // Simulate user typing \"no\"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JianHao24"},"content":"        String userInput \u003d \"no\\n\";","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"danielkwan2004"},"content":"        System.setIn(new ByteArrayInputStream(userInput.getBytes()));","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JianHao24"},"content":"        // Execute delete without force flag","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"JianHao24"},"content":"        DeleteNoteCommand command \u003d new DeleteNoteCommand(\"33333333\", false);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"JianHao24"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"JianHao24"},"content":"        // Verify deletion was cancelled","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"JianHao24"},"content":"        assertEquals(1, notes.size(), \"Note should not be deleted after cancellation\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"JianHao24"},"content":"        // Verify file still exists","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"JianHao24"},"content":"        Path notesDir \u003d tempDir.resolve(\"main\").resolve(\"notes\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"JianHao24"},"content":"        Path noteFile \u003d notesDir.resolve(\"Cancel_Delete.txt\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JianHao24"},"content":"        assertTrue(Files.exists(noteFile), \"Note file should still exist after cancellation\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false}],"authorContributionMap":{"gordonajajar":27,"JianHao24":180,"danielkwan2004":17}},{"path":"src/test/java/seedu/zettel/commands/EditNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gordonajajar"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gordonajajar"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gordonajajar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gordonajajar"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gordonajajar"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gordonajajar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"import java.util.List;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gordonajajar"},"content":"/**","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gordonajajar"},"content":" * Note: These tests do NOT actually open editors because:","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":" * 1. JUnit has no console (System.console() returns null)","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gordonajajar"},"content":" * 2. EditorUtil will throw EditorNotFoundException in test environment","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gordonajajar"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gordonajajar"},"content":" * We test the command\u0027s logic and error handling paths.","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gordonajajar"},"content":" */","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gordonajajar"},"content":"class EditNoteCommandTest {","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gordonajajar"},"content":"    @TempDir","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gordonajajar"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gordonajajar"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gordonajajar"},"content":"    private UI ui;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gordonajajar"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gordonajajar"},"content":"    void setUp() {","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gordonajajar"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gordonajajar"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gordonajajar"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gordonajajar"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gordonajajar"},"content":"        storage.init();","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gordonajajar"},"content":"    void testValidNoteId_createsCommand() {","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gordonajajar"},"content":"        EditNoteCommand command \u003d new EditNoteCommand(\"12ab34cd\");","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gordonajajar"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gordonajajar"},"content":"    void testNoteNotFound_throwsNoNoteFoundException() {","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gordonajajar"},"content":"        String nonExistentId \u003d \"99999999\";","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gordonajajar"},"content":"        EditNoteCommand command \u003d new EditNoteCommand(nonExistentId);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gordonajajar"},"content":"        ZettelException exception \u003d assertThrows(","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gordonajajar"},"content":"            ZettelException.class,","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gordonajajar"},"content":"            () -\u003e command.execute(notes, tags, ui, storage)","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gordonajajar"},"content":"        );","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(exception.getMessage().contains(\"Note with ID \u002799999999\u0027 not found\"));","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gordonajajar"},"content":"    void testEmptyNotesList_throwsNoNoteFoundException() {","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gordonajajar"},"content":"        EditNoteCommand command \u003d new EditNoteCommand(\"12ab34cd\");","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gordonajajar"},"content":"        // notes list is empty","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gordonajajar"},"content":"        ZettelException exception \u003d assertThrows(","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gordonajajar"},"content":"            ZettelException.class,","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gordonajajar"},"content":"            () -\u003e command.execute(notes, tags, ui, storage)","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gordonajajar"},"content":"        );","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(exception.getMessage().contains(\"not found\"));","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gordonajajar"},"content":"    void testValidNoteId_attemptsToOpenEditor() {","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gordonajajar"},"content":"        Note testNote \u003d new Note(","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gordonajajar"},"content":"            \"12ab34cd\",","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gordonajajar"},"content":"            \"Test Note\",","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gordonajajar"},"content":"            \"Test_Note.txt\",","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gordonajajar"},"content":"            \"Original body\",","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gordonajajar"},"content":"            Instant.now(),","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"gordonajajar"},"content":"            Instant.now()","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gordonajajar"},"content":"        );","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gordonajajar"},"content":"        notes.add(testNote);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gordonajajar"},"content":"        // Create the actual file on disk","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gordonajajar"},"content":"        storage.createStorageFile(testNote);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gordonajajar"},"content":"        storage.save(notes);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gordonajajar"},"content":"        EditNoteCommand command \u003d new EditNoteCommand(\"12ab34cd\");","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gordonajajar"},"content":"        // In test environment (no console), EditorUtil will throw EditorNotFoundException","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gordonajajar"},"content":"        // The command should catch it and wrap it in ZettelException","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gordonajajar"},"content":"        ZettelException exception \u003d assertThrows(","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gordonajajar"},"content":"            ZettelException.class,","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gordonajajar"},"content":"            () -\u003e command.execute(notes, tags, ui, storage)","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gordonajajar"},"content":"        );","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(exception.getMessage().contains(\"Failed to open editor\")","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gordonajajar"},"content":"                || exception.getMessage().contains(\"No interactive terminal\"));","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gordonajajar"},"content":"    void testMultipleNotes_findsCorrectNote() {","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gordonajajar"},"content":"        Note note1 \u003d new Note(\"11111111\", \"First\", \"First.txt\", \"Body 1\",","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gordonajajar"},"content":"                             Instant.now(), Instant.now());","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gordonajajar"},"content":"        Note note2 \u003d new Note(\"22222222\", \"Second\", \"Second.txt\", \"Body 2\",","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gordonajajar"},"content":"                             Instant.now(), Instant.now());","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gordonajajar"},"content":"        Note note3 \u003d new Note(\"33333333\", \"Third\", \"Third.txt\", \"Body 3\",","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gordonajajar"},"content":"                             Instant.now(), Instant.now());","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gordonajajar"},"content":"        notes.add(note1);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gordonajajar"},"content":"        notes.add(note2);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gordonajajar"},"content":"        notes.add(note3);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gordonajajar"},"content":"        // Create files","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gordonajajar"},"content":"        storage.createStorageFile(note1);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gordonajajar"},"content":"        storage.createStorageFile(note2);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gordonajajar"},"content":"        storage.createStorageFile(note3);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gordonajajar"},"content":"        storage.save(notes);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gordonajajar"},"content":"        EditNoteCommand command \u003d new EditNoteCommand(\"22222222\");","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gordonajajar"},"content":"        // Will fail at editor opening, but should find the correct note first","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gordonajajar"},"content":"        assertThrows(ZettelException.class,","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gordonajajar"},"content":"            () -\u003e command.execute(notes, tags, ui, storage));","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gordonajajar"},"content":"        // If we got past note finding, the correct note was identified","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gordonajajar"},"content":"        // (otherwise would throw \"not found\" instead of editor error)","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gordonajajar"},"content":"    void testNoteIdCaseSensitive_mustMatchExactly() {","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gordonajajar"},"content":"        Note testNote \u003d new Note(\"12ab34cd\", \"Test\", \"Test.txt\", \"Body\",","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gordonajajar"},"content":"                                Instant.now(), Instant.now());","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gordonajajar"},"content":"        notes.add(testNote);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gordonajajar"},"content":"        storage.createStorageFile(testNote);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gordonajajar"},"content":"        storage.save(notes);","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gordonajajar"},"content":"        // Try with uppercase (should not match)","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gordonajajar"},"content":"        EditNoteCommand command \u003d new EditNoteCommand(\"12AB34CD\");","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gordonajajar"},"content":"        ZettelException exception \u003d assertThrows(","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gordonajajar"},"content":"            ZettelException.class,","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gordonajajar"},"content":"            () -\u003e command.execute(notes, tags, ui, storage)","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gordonajajar"},"content":"        );","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(exception.getMessage().contains(\"not found\"));","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false}],"authorContributionMap":{"gordonajajar":156}},{"path":"src/test/java/seedu/zettel/commands/FindNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:57:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"public class FindNoteCommandTest {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"    public void testValidFindNoteCommandNoteIsFound(){","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"id-0\", \"Title 0\", \"file0.txt\", \"Body 0\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"id-1\", \"Title 1\", \"file1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"        // FindNoteCommand searches in note body (case-insensitive)","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"        String keyword \u003d \"body 1\";","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"        FindNoteCommand command \u003d new FindNoteCommand(keyword);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/findnote-test.txt\");","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"        int sizeBefore \u003d notes.size();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"        assertDoesNotThrow(() -\u003e command.execute(notes, tags, ui, storage));","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(sizeBefore, notes.size(), \"execute should not mutate the notes list size\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"    @Test ","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"    public void testNoNotesFound() {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"id-0\", \"Title 0\", \"file0.txt\", \"Body 0\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"id-1\", \"Title 1\", \"file1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"        String keyword \u003d \"Hello\";","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"        FindNoteCommand command \u003d new FindNoteCommand(keyword);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/findnote-test.txt\");","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"        int sizeBefore \u003d notes.size();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"        assertDoesNotThrow(() -\u003e command.execute(notes, tags, ui, storage));","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(sizeBefore, notes.size(), \"execute should not mutate the notes list size\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"    @Test ","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"    public void testNoNotesAvailable() {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"        FindNoteCommand command \u003d new FindNoteCommand(\"Title\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/findnote-test.txt\");","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"        try {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"            org.junit.jupiter.api.Assertions.fail(\"Expected ZettelException when there are no notes\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"        } catch (ZettelException ex) {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"            assertTrue(ex.getMessage() \u003d\u003d null || ex.getMessage().toLowerCase().contains(\"no notes\"),","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"                    \"Exception message should mention that there are no notes\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false}],"authorContributionMap":{"JianHao24":1,"shauntsr":7,"danielkwan2004":57}},{"path":"src/test/java/seedu/zettel/commands/InitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"public class InitCommandTest {","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"    private UI ui;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"    void setup() {","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"    @AfterEach","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"    void teardown() {","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"    void testNewRepoInitShowsCreatedMessage() {","lastModifiedDate":"2025-10-16T18:20:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"        String repoName \u003d \"myRepo\";","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"        ui.showRepoInit(repoName);","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString().trim();","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(\"Repository /\" + repoName + \" has been created.\"));","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false}],"authorContributionMap":{"shauntsr":38}},{"path":"src/test/java/seedu/zettel/commands/LinkBothNotesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoteSelfLinkException;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NotesAlreadyLinkedException;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"public class LinkBothNotesCommandTest {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"    @TempDir","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"    private UI ui;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"    void setUp() {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"        storage.init();","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"        // Create three sample notes for linking","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d new Note(\"abcd1234\", \"First Note\", \"First_Note.txt\",","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of first note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d new Note(\"ef567890\", \"Second Note\", \"Second_Note.txt\",","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of second note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d new Note(\"12345678\", \"Third Note\", \"Third_Note.txt\",","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of third note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note1);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note2);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note3);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"    @AfterEach","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Exception Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"    void execute_emptyNotesList_throwsNoNotesException() {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e emptyNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command \u003d new LinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"        NoNotesException exception \u003d assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(emptyNotes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"You have no notes to link.\", exception.getMessage());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"    void execute_selfLink_throwsNoteSelfLinkException() {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command \u003d new LinkBothNotesCommand(\"abcd1234\", \"abcd1234\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"        NoteSelfLinkException exception \u003d assertThrows(NoteSelfLinkException.class, () -\u003e {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Cannot link a note to itself. Note ID: \u0027abcd1234\u0027.\", exception.getMessage());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"    void execute_sourceNoteNotFound_throwsInvalidNoteIdException() {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command \u003d new LinkBothNotesCommand(\"99999999\", \"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"        InvalidNoteIdException exception \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u002799999999\u0027 does not exist.\", exception.getMessage());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"    void execute_targetNoteNotFound_throwsInvalidNoteIdException() {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command \u003d new LinkBothNotesCommand(\"abcd1234\", \"99999999\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"danielkwan2004"},"content":"        InvalidNoteIdException exception \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u002799999999\u0027 does not exist.\", exception.getMessage());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"    void execute_bothNotesNotFound_throwsInvalidNoteIdException() {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command \u003d new LinkBothNotesCommand(\"99999999\", \"88888888\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"danielkwan2004"},"content":"        InvalidNoteIdException exception \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"danielkwan2004"},"content":"        // Should fail on the first note ID check","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u002799999999\u0027 does not exist.\", exception.getMessage());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"danielkwan2004"},"content":"    void execute_bidirectionalLinkAlreadyExists_throwsNotesAlreadyLinkedException() throws ZettelException {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"danielkwan2004"},"content":"        // Manually create a bidirectional link","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"danielkwan2004"},"content":"        note2.addOutgoingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"danielkwan2004"},"content":"        // Try to link them again","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command \u003d new LinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"danielkwan2004"},"content":"        NotesAlreadyLinkedException exception \u003d assertThrows(NotesAlreadyLinkedException.class, () -\u003e {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Note with ID \u0027abcd1234\u0027 already links in both directions to note with ID \u0027ef567890\u0027.\",","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"danielkwan2004"},"content":"                exception.getMessage());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Happy Path Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"danielkwan2004"},"content":"    void execute_successfulBidirectionalLink_createsLinksBothDirections() throws ZettelException {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command \u003d new LinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1); // ef567890","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"danielkwan2004"},"content":"        // Verify bidirectional links exist","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"ef567890\"), \"Note1 should have Note2 in outgoingLinks\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedBy(\"ef567890\"), \"Note1 should have Note2 in incomingLinks\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedTo(\"abcd1234\"), \"Note2 should have Note1 in outgoingLinks\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedBy(\"abcd1234\"), \"Note2 should have Note1 in incomingLinks\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"danielkwan2004"},"content":"        // Verify UI message","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Notes \u0027First Note\u0027 and \u0027Second Note\u0027 are now linked in both directions\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"danielkwan2004"},"content":"    void execute_reverseOrderBidirectionalLink_createsLinksBothDirections() throws ZettelException {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"danielkwan2004"},"content":"        // Link in reverse order: ef567890 ↔ abcd1234","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command \u003d new LinkBothNotesCommand(\"ef567890\", \"abcd1234\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1); // ef567890","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"danielkwan2004"},"content":"        // Verify bidirectional links exist","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"ef567890\"), \"Note1 should have Note2 in outgoingLinks\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedBy(\"ef567890\"), \"Note1 should have Note2 in incomingLinks\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedTo(\"abcd1234\"), \"Note2 should have Note1 in outgoingLinks\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedBy(\"abcd1234\"), \"Note2 should have Note1 in incomingLinks\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"danielkwan2004"},"content":"        // Verify UI message","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Notes \u0027Second Note\u0027 and \u0027First Note\u0027 are now linked in both directions\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"danielkwan2004"},"content":"    void execute_unidirectionalLinkExists_addsOnlyMissingDirection() throws ZettelException {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"danielkwan2004"},"content":"        // Create only a unidirectional link: note1 → note2 (but not note2 → note1)","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"danielkwan2004"},"content":"        // Verify unidirectional link exists","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"danielkwan2004"},"content":"        // Execute bidirectional link command","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command \u003d new LinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"danielkwan2004"},"content":"        // Verify now bidirectional","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedBy(\"ef567890\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"danielkwan2004"},"content":"    void execute_reversUnidirectionalLinkExists_addsOnlyMissingDirection() throws ZettelException {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"danielkwan2004"},"content":"        // Create only a reverse unidirectional link: note2 → note1 (but not note1 → note2)","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"danielkwan2004"},"content":"        note2.addOutgoingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"danielkwan2004"},"content":"        // Verify unidirectional link exists","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"danielkwan2004"},"content":"        // Execute bidirectional link command","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command \u003d new LinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"danielkwan2004"},"content":"        // Verify now bidirectional","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedBy(\"ef567890\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"danielkwan2004"},"content":"    void execute_multipleBidirectionalLinks_eachNoteHasMultipleLinks() throws ZettelException {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"danielkwan2004"},"content":"        // Create bidirectional link: note1 ↔ note2","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command1 \u003d new LinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"danielkwan2004"},"content":"        command1.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"danielkwan2004"},"content":"        // Create bidirectional link: note1 ↔ note3","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command2 \u003d new LinkBothNotesCommand(\"abcd1234\", \"12345678\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"danielkwan2004"},"content":"        command2.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1); // ef567890","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d notes.get(2); // 12345678","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"danielkwan2004"},"content":"        // Verify note1 has bidirectional links to both note2 and note3","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedBy(\"ef567890\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"12345678\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedBy(\"12345678\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"danielkwan2004"},"content":"        // Verify note2 only has bidirectional link to note1","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedTo(\"12345678\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedBy(\"12345678\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"danielkwan2004"},"content":"        // Verify note3 only has bidirectional link to note1","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note3.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note3.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note3.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note3.isLinkedBy(\"ef567890\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"danielkwan2004"},"content":"    void execute_linkCountVerification_correctNumberOfLinks() throws ZettelException {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command \u003d new LinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"danielkwan2004"},"content":"        // Each note should have exactly 1 outgoing and 1 incoming link","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(1, note1.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(1, note1.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(1, note2.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(1, note2.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"danielkwan2004"},"content":"    void execute_threeWayBidirectionalLinks_allNotesLinked() throws ZettelException {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"danielkwan2004"},"content":"        // Create bidirectional links: note1 ↔ note2 ↔ note3","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command1 \u003d new LinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"danielkwan2004"},"content":"        command1.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command2 \u003d new LinkBothNotesCommand(\"ef567890\", \"12345678\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"danielkwan2004"},"content":"        command2.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d notes.get(2);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"danielkwan2004"},"content":"        // Note2 should have bidirectional links to both note1 and note3","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(2, note2.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(2, note2.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedTo(\"12345678\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedBy(\"12345678\"));","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"danielkwan2004"},"content":"    void execute_noDuplicateLinksCreated_linksRemainsUnique() throws ZettelException {","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"danielkwan2004"},"content":"        // Create partial link manually","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"danielkwan2004"},"content":"        // Execute bidirectional link command","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"danielkwan2004"},"content":"        LinkBothNotesCommand command \u003d new LinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"danielkwan2004"},"content":"        // Verify no duplicates (each link set should have size 1)","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(1, note1.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(1, note1.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(1, note2.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(1, note2.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-28T17:37:26","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":324}},{"path":"src/test/java/seedu/zettel/commands/LinkNotesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoteSelfLinkException;","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NotesAlreadyLinkedException;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"public class LinkNotesCommandTest {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"    @TempDir","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"    private UI ui;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"    void setUp() {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"        storage.init();","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"        // Create two sample notes for linking","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d new Note(\"abcd1234\", \"First Note\", \"First_Note.txt\",","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of first note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d new Note(\"ef567890\", \"Second Note\", \"Second_Note.txt\",","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of second note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note1);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note2);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"    @AfterEach","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Self-Link Validation Test \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"    void testNoteSelfLinkThrowsException() {","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"        LinkNotesCommand cmd \u003d new LinkNotesCommand(\"abcd1234\", \"abcd1234\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"        ZettelException e \u003d assertThrows(NoteSelfLinkException.class, () -\u003e {","lastModifiedDate":"2025-10-28T00:27:50","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Cannot link a note to itself. Note ID: \u0027abcd1234\u0027.\", e.getMessage());","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Empty Notes List Test \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"    void testEmptyNotesListThrowsException() {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"        notes.clear(); // Clear all notes","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"danielkwan2004"},"content":"        LinkNotesCommand cmd \u003d new LinkNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"        ZettelException e \u003d assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"You have no notes to link.\", e.getMessage());","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Note Not Found Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"    void testFirstNoteIdNotFoundThrowsException() {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"        LinkNotesCommand cmd \u003d new LinkNotesCommand(\"deadbeef\", \"ef567890\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"        ZettelException e \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u0027deadbeef\u0027 does not exist.\", e.getMessage());","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"danielkwan2004"},"content":"    void testSecondNoteIdNotFoundThrowsException() {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"        LinkNotesCommand cmd \u003d new LinkNotesCommand(\"abcd1234\", \"deadbeef\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"danielkwan2004"},"content":"        ZettelException e \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u0027deadbeef\u0027 does not exist.\", e.getMessage());","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"    void testBothNoteIdsNotFoundThrowsException() {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"        LinkNotesCommand cmd \u003d new LinkNotesCommand(\"deadbeef\", \"cafebabe\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"danielkwan2004"},"content":"        ZettelException e \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"danielkwan2004"},"content":"        // Should fail on the first note ID check","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u0027deadbeef\u0027 does not exist.\", e.getMessage());","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Already Linked Test \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"danielkwan2004"},"content":"    void testLinkAlreadyExistsThrowsException() throws ZettelException {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"danielkwan2004"},"content":"        // The command checks: noteLinkedTo.get().isLinkedTo(noteIdLinkedBy)","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"danielkwan2004"},"content":"        // which checks if noteIdLinkedBy is in noteLinkedTo\u0027s linkedTo set","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"danielkwan2004"},"content":"        // So we need to add ef567890 to abcd1234\u0027s outgoingLinks set to simulate existing link","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");  // Simulate the link already exists","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"danielkwan2004"},"content":"        // Try to link them again","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"danielkwan2004"},"content":"        LinkNotesCommand cmd \u003d new LinkNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"danielkwan2004"},"content":"        ZettelException e \u003d assertThrows(NotesAlreadyLinkedException.class, () -\u003e {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Note with ID \u0027abcd1234\u0027 already links to note with ID \u0027ef567890\u0027.\", e.getMessage());","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Happy Path Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"danielkwan2004"},"content":"    void testLinkNotesSuccessfully() throws ZettelException {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"danielkwan2004"},"content":"        LinkNotesCommand cmd \u003d new LinkNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1); // ef567890","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"danielkwan2004"},"content":"        // After linking abcd1234 → ef567890:","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"danielkwan2004"},"content":"        // - abcd1234\u0027s incomingLinks set contains ef567890","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"danielkwan2004"},"content":"        // - ef567890\u0027s outgoingLinks set contains abcd1234","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.getIncomingLinks().contains(\"ef567890\"), ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"danielkwan2004"},"content":"                \"First note should have second note in its incomingLinks set\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.getOutgoingLinks().contains(\"abcd1234\"), ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"danielkwan2004"},"content":"                \"Second note should have first note in its outgoingLinks set\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"danielkwan2004"},"content":"    void testLinkNotesReverseOrderSuccessfully() throws ZettelException {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"danielkwan2004"},"content":"        // Link in reverse order: ef567890 → abcd1234","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"danielkwan2004"},"content":"        LinkNotesCommand cmd \u003d new LinkNotesCommand(\"ef567890\", \"abcd1234\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1); // ef567890","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"danielkwan2004"},"content":"        // After linking ef567890 → abcd1234:","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"danielkwan2004"},"content":"        // - ef567890\u0027s incomingLinks set contains abcd1234","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"danielkwan2004"},"content":"        // - abcd1234\u0027s outgoingLinks set contains ef567890","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.getIncomingLinks().contains(\"abcd1234\"), ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"danielkwan2004"},"content":"                \"Second note should have first note in its incomingLinks set\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.getOutgoingLinks().contains(\"ef567890\"), ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"danielkwan2004"},"content":"                \"First note should have second note in its outgoingLinks set\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"danielkwan2004"},"content":"    void testLinkMultipleNotesToSameNote() throws ZettelException {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"danielkwan2004"},"content":"        // Add a third note","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d new Note(\"12345678\", \"Third Note\", \"Third_Note.txt\",","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of third note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note3);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"danielkwan2004"},"content":"        // Link note1 → note2","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"danielkwan2004"},"content":"        LinkNotesCommand cmd1 \u003d new LinkNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"danielkwan2004"},"content":"        cmd1.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"danielkwan2004"},"content":"        // Link note3 → note2 (multiple notes linking to the same note)","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"danielkwan2004"},"content":"        LinkNotesCommand cmd2 \u003d new LinkNotesCommand(\"12345678\", \"ef567890\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"danielkwan2004"},"content":"        cmd2.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1); // ef567890","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"danielkwan2004"},"content":"        Note note3Updated \u003d notes.get(2); // 12345678","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"danielkwan2004"},"content":"        // After linking abcd1234 → ef567890 and 12345678 → ef567890:","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"danielkwan2004"},"content":"        // - abcd1234\u0027s incomingLinks set contains ef567890","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"danielkwan2004"},"content":"        // - 12345678\u0027s incomingLinks set contains ef567890","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"danielkwan2004"},"content":"        // - ef567890\u0027s outgoingLinks set contains both abcd1234 and 12345678","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.getIncomingLinks().contains(\"ef567890\"), ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"danielkwan2004"},"content":"                \"First note should have second note in incomingLinks\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note3Updated.getIncomingLinks().contains(\"ef567890\"), ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"danielkwan2004"},"content":"                \"Third note should have second note in incomingLinks\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.getOutgoingLinks().contains(\"abcd1234\"), ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"danielkwan2004"},"content":"                \"Second note should have first note in outgoingLinks\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.getOutgoingLinks().contains(\"12345678\"), ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"danielkwan2004"},"content":"                \"Second note should have third note in outgoingLinks\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"danielkwan2004"},"content":"    void testLinkSameNoteToMultipleNotes() throws ZettelException {","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"danielkwan2004"},"content":"        // Add a third note","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d new Note(\"12345678\", \"Third Note\", \"Third_Note.txt\",","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of third note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note3);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"danielkwan2004"},"content":"        // Link note1 → note2","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"danielkwan2004"},"content":"        LinkNotesCommand cmd1 \u003d new LinkNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"danielkwan2004"},"content":"        cmd1.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"danielkwan2004"},"content":"        // Link note1 → note3 (same note linking to multiple notes)","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"danielkwan2004"},"content":"        LinkNotesCommand cmd2 \u003d new LinkNotesCommand(\"abcd1234\", \"12345678\");","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"danielkwan2004"},"content":"        cmd2.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1); // ef567890","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"danielkwan2004"},"content":"        Note note3Updated \u003d notes.get(2); // 12345678","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"danielkwan2004"},"content":"        // After linking abcd1234 → ef567890 and abcd1234 → 12345678:","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"danielkwan2004"},"content":"        // - abcd1234\u0027s incomingLinks set contains both ef567890 and 12345678","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"danielkwan2004"},"content":"        // - ef567890\u0027s outgoingLinks set contains abcd1234","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"danielkwan2004"},"content":"        // - 12345678\u0027s outgoingLinks set contains abcd1234","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.getIncomingLinks().contains(\"ef567890\"), ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"danielkwan2004"},"content":"                \"First note should have second note in incomingLinks\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.getIncomingLinks().contains(\"12345678\"), ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"danielkwan2004"},"content":"                \"First note should have third note in incomingLinks\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.getOutgoingLinks().contains(\"abcd1234\"), ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"danielkwan2004"},"content":"                \"Second note should have first note in outgoingLinks\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note3Updated.getOutgoingLinks().contains(\"abcd1234\"), ","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"danielkwan2004"},"content":"                \"Third note should have first note in outgoingLinks\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:07:06","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":249}},{"path":"src/test/java/seedu/zettel/commands/ListLinkedNotesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"public class ListLinkedNotesCommandTest {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"    @TempDir","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"    private UI ui;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"    void setUp() {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"        storage.init();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"        // Create sample notes for testing","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d new Note(\"abcd1234\", \"First Note\", \"First_Note.txt\",","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of first note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d new Note(\"ef567890\", \"Second Note\", \"Second_Note.txt\",","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of second note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d new Note(\"12345678\", \"Third Note\", \"Third_Note.txt\",","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of third note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note1);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note2);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note3);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"    @AfterEach","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Exception Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"    void testNoteIdNotFoundThrowsException() {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"outgoing\", \"deadbeef\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"        InvalidNoteIdException ex \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u0027deadbeef\u0027 does not exist.\", ex.getMessage());","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"    void testNoOutgoingLinksThrowsException() {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"danielkwan2004"},"content":"        // Note with no outgoing links","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"outgoing\", \"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"        NoNotesException ex \u003d assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Note with ID \u0027abcd1234\u0027 has no outgoing links.\", ex.getMessage());","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"    void testNoIncomingLinksThrowsException() {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"        // Note with no incoming links","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"incoming\", \"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"        NoNotesException ex \u003d assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Note with ID \u0027abcd1234\u0027 has no incoming links.\", ex.getMessage());","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Happy Path Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"danielkwan2004"},"content":"    void testListOutgoingLinksSuccessfully() throws ZettelException {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"danielkwan2004"},"content":"        // Set up: note1 has outgoing links to note2 and note3","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"12345678\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"outgoing\", \"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"danielkwan2004"},"content":"        // Should show both linked notes","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"ef567890\"), \"Should contain note ID ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"12345678\"), \"Should contain note ID 12345678\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Second Note\") || output.contains(\"Second_Note.txt\"), ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"danielkwan2004"},"content":"                \"Should show second note details\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Third Note\") || output.contains(\"Third_Note.txt\"), ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"danielkwan2004"},"content":"                \"Should show third note details\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"danielkwan2004"},"content":"    void testListIncomingLinksSuccessfully() throws ZettelException {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"danielkwan2004"},"content":"        // Set up: note1 has incoming links from note2 and note3","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"12345678\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"incoming\", \"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"danielkwan2004"},"content":"        // Should show both linked notes","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"ef567890\"), \"Should contain note ID ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"12345678\"), \"Should contain note ID 12345678\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Second Note\") || output.contains(\"Second_Note.txt\"), ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"danielkwan2004"},"content":"                \"Should show second note details\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Third Note\") || output.contains(\"Third_Note.txt\"), ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"danielkwan2004"},"content":"                \"Should show third note details\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"danielkwan2004"},"content":"    void testListSingleOutgoingLink() throws ZettelException {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"danielkwan2004"},"content":"        // Set up: note1 has only one outgoing link","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"outgoing\", \"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"danielkwan2004"},"content":"        // Should show the linked note","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"ef567890\"), \"Should contain note ID ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Second Note\") || output.contains(\"Second_Note.txt\"), ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"danielkwan2004"},"content":"                \"Should show second note details\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"danielkwan2004"},"content":"    void testListSingleIncomingLink() throws ZettelException {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"danielkwan2004"},"content":"        // Set up: note1 has only one incoming link","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"incoming\", \"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"danielkwan2004"},"content":"        // Should show the linked note","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"ef567890\"), \"Should contain note ID ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Second Note\") || output.contains(\"Second_Note.txt\"), ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"danielkwan2004"},"content":"                \"Should show second note details\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"danielkwan2004"},"content":"    void testListOutgoingLinksDoesNotShowUnlinkedNotes() throws ZettelException {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"danielkwan2004"},"content":"        // Set up: note1 has outgoing link to note2 only, not note3","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"outgoing\", \"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"danielkwan2004"},"content":"        // Should show note2 but not note3","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"ef567890\"), \"Should contain note ID ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Second Note\") || output.contains(\"Second_Note.txt\"), ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"danielkwan2004"},"content":"                \"Should show second note details\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"danielkwan2004"},"content":"        // Note3 should not appear (it\u0027s not linked)","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(!output.contains(\"Third Note\") || output.contains(\"Second\"), ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"danielkwan2004"},"content":"                \"Should not prominently show third note\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"danielkwan2004"},"content":"    void testListIncomingLinksDoesNotShowUnlinkedNotes() throws ZettelException {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"danielkwan2004"},"content":"        // Set up: note1 has incoming link from note2 only, not note3","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"incoming\", \"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"danielkwan2004"},"content":"        // Should show note2 but not note3","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"ef567890\"), \"Should contain note ID ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Second Note\") || output.contains(\"Second_Note.txt\"), ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"danielkwan2004"},"content":"                \"Should show second note details\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"danielkwan2004"},"content":"        // Note3 should not appear (it\u0027s not linked)","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(!output.contains(\"Third Note\") || output.contains(\"Second\"), ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"danielkwan2004"},"content":"                \"Should not prominently show third note\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"danielkwan2004"},"content":"    void testListOutgoingLinksMultipleNotes() throws ZettelException {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"danielkwan2004"},"content":"        // Set up: note2 has multiple outgoing links","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1); // ef567890","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"danielkwan2004"},"content":"        note2.addOutgoingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"danielkwan2004"},"content":"        note2.addOutgoingLink(\"12345678\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"outgoing\", \"ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"danielkwan2004"},"content":"        // Should show both linked notes","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"abcd1234\"), \"Should contain note ID abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"12345678\"), \"Should contain note ID 12345678\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"danielkwan2004"},"content":"    void testListIncomingLinksMultipleNotes() throws ZettelException {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"danielkwan2004"},"content":"        // Set up: note2 has multiple incoming links","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1); // ef567890","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"12345678\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"incoming\", \"ef567890\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"danielkwan2004"},"content":"        // Should show both linked notes","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"abcd1234\"), \"Should contain note ID abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"12345678\"), \"Should contain note ID 12345678\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Additional Edge Case Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"danielkwan2004"},"content":"    void testEmptyNotesListThrowsException() {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"danielkwan2004"},"content":"        notes.clear(); // Empty the notes list","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"outgoing\", \"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"danielkwan2004"},"content":"        NoNotesException ex \u003d assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"You have no notes to list links from.\", ex.getMessage());","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"danielkwan2004"},"content":"    void testInvalidListTypeThrowsException() {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"invalid\", \"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"danielkwan2004"},"content":"        InvalidInputException ex \u003d assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Input: Invalid list type: \u0027invalid\u0027. Must be \u0027incoming\u0027 or \u0027outgoing\u0027.\", ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"danielkwan2004"},"content":"                ex.getMessage());","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"danielkwan2004"},"content":"    void testOrphanedLinksThrowsException() {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"danielkwan2004"},"content":"        // Set up: note1 has outgoing links to non-existent notes","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"deadbeef\"); // This note doesn\u0027t exist","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"cafebabe\"); // This note doesn\u0027t exist either","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"outgoing\", \"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"danielkwan2004"},"content":"        NoNotesException ex \u003d assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Note with ID \u0027abcd1234\u0027 has outgoing links, but the linked notes no longer exist.\", ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"danielkwan2004"},"content":"                ex.getMessage());","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"danielkwan2004"},"content":"    void testOrphanedIncomingLinksThrowsException() {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"danielkwan2004"},"content":"        // Set up: note1 has incoming links from non-existent notes","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0); // abcd1234","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"deadbeef\"); // This note doesn\u0027t exist","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"cafebabe\"); // This note doesn\u0027t exist either","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"danielkwan2004"},"content":"        ListLinkedNotesCommand cmd \u003d new ListLinkedNotesCommand(\"incoming\", \"abcd1234\");","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"danielkwan2004"},"content":"        NoNotesException ex \u003d assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Note with ID \u0027abcd1234\u0027 has incoming links, but the linked notes no longer exist.\", ","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"danielkwan2004"},"content":"                ex.getMessage());","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T03:18:28","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":315}},{"path":"src/test/java/seedu/zettel/commands/ListNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:21:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":"public class ListNoteCommandTest {","lastModifiedDate":"2025-10-14T23:21:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"    private static final String FILE_PATH \u003d \"./data/zettel.txt\";","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"    private UI ui;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"    void setUp() {","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"    @AfterEach","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"    void testPrintNotesNumberedAndOrdered() throws ZettelException {","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"        Instant now \u003d Instant.now();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"        Instant earlier \u003d now.minusSeconds(3600);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"        Note older \u003d new Note(\"1\", \"Old Note\", \"old.txt\", \"Body A\", earlier, earlier);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"        Note newer \u003d new Note(\"2\", \"New Note\", \"new.txt\", \"Body B\", now, now);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"        notes.add(older);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"        notes.add(newer);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"        ListNoteCommand cmd \u003d new ListNoteCommand(false);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"        String[] lines \u003d output.split(\"\\n\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"        // Skip lines[0] since it is the header","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"        // Check numbering and order","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"        assertTrue(lines[1].strip().startsWith(\"1.\"), \"First line should start with \u00271.\u0027\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"        assertTrue(lines[1].strip().contains(\"new.txt\"), \"First note should be the newest\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"        assertTrue(lines[2].strip().startsWith(\"2.\"), \"Second line should start with \u00272.\u0027\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"        assertTrue(lines[2].strip().contains(\"old.txt\"), \"Second note should be the older one\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"    void testNoNotesFoundThrowsException() {","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"        ListNoteCommand cmd \u003d new ListNoteCommand(false);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"        NoNotesException ex \u003d assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"        });","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"No notes found.\", ex.getMessage(),","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"                \"Should throw exception with message for no notes found\");","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"    void testNoPinnedNotesFoundThrowsException() {","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"        ListNoteCommand cmd \u003d new ListNoteCommand(true);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"        NoNotesException ex \u003d assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shauntsr"},"content":"        });","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"No pinned notes found. Pin a note to add to this list.\", ex.getMessage(),","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"                \"Should throw exception with message for no pinned notes found\");","lastModifiedDate":"2025-10-26T23:48:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shauntsr"},"content":"    void testPrintsFilteredNotes() throws ZettelException {","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shauntsr"},"content":"        Instant now \u003d Instant.now();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shauntsr"},"content":"        Instant earlier \u003d now.minusSeconds(3600);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shauntsr"},"content":"        Note pinned \u003d new Note(\"1\", \"Pinned Note\", \"file1.txt\", \"content\",","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shauntsr"},"content":"                now, now);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shauntsr"},"content":"        Note unpinned \u003d new Note(\"2\", \"Unpinned Note\", \"file2.txt\", \"content\",","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shauntsr"},"content":"                earlier, earlier);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shauntsr"},"content":"        pinned.setPinned(true);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shauntsr"},"content":"        unpinned.setPinned(false);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shauntsr"},"content":"        notes.add(pinned);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shauntsr"},"content":"        notes.add(unpinned);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shauntsr"},"content":"        ListNoteCommand cmd \u003d new ListNoteCommand(true);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(\"You have 1 pinned notes:\"),","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shauntsr"},"content":"                \"Should count only pinned notes\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(\"file1.txt\"),","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shauntsr"},"content":"                \"Should show pinned note\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shauntsr"},"content":"        assertFalse(output.contains(\"file2.txt\"),","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shauntsr"},"content":"                \"Should not show unpinned note\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shauntsr"},"content":"    void testPrintsNotesSorted() throws ZettelException {","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shauntsr"},"content":"        Instant now \u003d Instant.now();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shauntsr"},"content":"        Instant earlier \u003d now.minusSeconds(3600);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shauntsr"},"content":"        Note older \u003d new Note(\"1\", \"Old\", \"old.txt\", \"Body A\", earlier, earlier);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shauntsr"},"content":"        Note newer \u003d new Note(\"2\", \"New\", \"new.txt\", \"Body B\", now, now);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shauntsr"},"content":"        notes.add(older);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shauntsr"},"content":"        notes.add(newer);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shauntsr"},"content":"        ListNoteCommand cmd \u003d new ListNoteCommand(false);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(\"You have 2 notes\"),","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"shauntsr"},"content":"                \"Should show correct number of notes\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shauntsr"},"content":"        // Check that newer note appears before older one in output","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shauntsr"},"content":"        int idxNew \u003d output.indexOf(\"new.txt\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shauntsr"},"content":"        int idxOld \u003d output.indexOf(\"old.txt\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shauntsr"},"content":"        assertTrue(idxNew \u003c idxOld,","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shauntsr"},"content":"                \"Newer note should appear before older one (sorted descending by createdAt)\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false}],"authorContributionMap":{"gordonajajar":2,"JianHao24":1,"shauntsr":145}},{"path":"src/test/java/seedu/zettel/commands/ListTagsGlobalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"public class ListTagsGlobalCommandTest {","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"    @TempDir","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    private PrintStream originalOutputStream;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"    private UI ui;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"    void setUp() {","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"        originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"        storage \u003d new Storage(tempDir.resolve(\"zettel.txt\").toString());","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"    @AfterEach","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"    void testNoTagsThrowsException() {","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"        ListTagsGlobalCommand cmd \u003d new ListTagsGlobalCommand();","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"        ZettelException ex \u003d assertThrows(ZettelException.class, () -\u003e {","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"        });","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"There are no tags to list\", ex.getMessage(),","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"                \"Should throw correct exception message when no tags exist\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"    void testDisplaysAllTagsWithNumbering() throws ZettelException {","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"        tags.add(\"work\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"        tags.add(\"urgent\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"        tags.add(\"ideas\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"        ListTagsGlobalCommand cmd \u003d new ListTagsGlobalCommand();","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"        String[] lines \u003d output.strip().split(\"\\\\r?\\\\n\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"        // Header line","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"        assertTrue(lines[0].contains(\"You have 3 tags:\"), \"Header should show total tag count\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"        // Check numbering and tag names","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"1. work\", lines[1].strip(), \"First tag should be numbered 1 and be \u0027work\u0027\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"2. urgent\", lines[2].strip(), \"Second tag should be numbered 2 and be \u0027urgent\u0027\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"3. ideas\", lines[3].strip(), \"Third tag should be numbered 3 and be \u0027ideas\u0027\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"    void testSingleTagOutputFormat() throws ZettelException {","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"        tags.add(\"todo\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"        ListTagsGlobalCommand cmd \u003d new ListTagsGlobalCommand();","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString().strip();","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"        String[] lines \u003d output.split(\"\\\\r?\\\\n\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"You have 1 tags:\", lines[0].strip(), \"Header should show count 1\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"1. todo\", lines[1].strip(), \"Should display numbered tag correctly\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shauntsr"},"content":"    void testOutputNotEmptyWhenTagsExist() throws ZettelException {","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shauntsr"},"content":"        tags.add(\"alpha\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shauntsr"},"content":"        ListTagsGlobalCommand cmd \u003d new ListTagsGlobalCommand();","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString().strip();","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shauntsr"},"content":"        assertFalse(output.isEmpty(), \"Output should not be empty when tags exist\");","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-29T22:31:26","isFullCredit":false}],"authorContributionMap":{"shauntsr":109}},{"path":"src/test/java/seedu/zettel/commands/ListTagsIndividualNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoTagsException;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"//","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":" * JUnit test class for {@link ListTagsIndividualNoteCommand}.","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":" * Tests all execution paths including exception cases and successful tag listing.","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"public class ListTagsIndividualNoteCommandTest {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"    @TempDir","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"    private UI ui;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"    void setUp() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"        storage.init();","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        // Create sample notes for testing","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d new Note(\"abcd1234\", \"First Note\", \"First_Note.txt\",","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of first note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d new Note(\"ef567890\", \"Second Note\", \"Second_Note.txt\",","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of second note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d new Note(\"12345678\", \"Third Note\", \"Third_Note.txt\",","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of third note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"        // Add tags to some notes","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"        note1.addTag(\"java\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"        note1.addTag(\"programming\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"        note2.addTag(\"testing\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"        // note3 has no tags","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note1);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note2);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note3);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"    @AfterEach","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Exception Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"    void testEmptyNotesListThrowsNoNotesException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e emptyNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"        ListTagsIndividualNoteCommand cmd \u003d new ListTagsIndividualNoteCommand(\"abcd1234\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"        NoNotesException ex \u003d assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(emptyNotes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"You have no notes to list tags of.\", ex.getMessage());","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"    void testNoteIdNotFoundThrowsInvalidNoteIdException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"        ListTagsIndividualNoteCommand cmd \u003d new ListTagsIndividualNoteCommand(\"deadbeef\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"        InvalidNoteIdException ex \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u0027deadbeef\u0027 does not exist.\", ex.getMessage());","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"    void testNoteWithNoTagsThrowsNoTagsException() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"danielkwan2004"},"content":"        // Note with ID \"12345678\" has no tags","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"        ListTagsIndividualNoteCommand cmd \u003d new ListTagsIndividualNoteCommand(\"12345678\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"danielkwan2004"},"content":"        NoTagsException ex \u003d assertThrows(NoTagsException.class, () -\u003e {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"No tags are tagged to note with ID \u002712345678\u0027.\", ex.getMessage());","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Success Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"danielkwan2004"},"content":"    void testSuccessfullyListSingleTag() throws ZettelException {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"danielkwan2004"},"content":"        // Note with ID \"ef567890\" has one tag: \"testing\"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"danielkwan2004"},"content":"        ListTagsIndividualNoteCommand cmd \u003d new ListTagsIndividualNoteCommand(\"ef567890\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Tags for note #ef567890:\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"testing\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"danielkwan2004"},"content":"    void testSuccessfullyListMultipleTags() throws ZettelException {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"danielkwan2004"},"content":"        // Note with ID \"abcd1234\" has two tags: \"java\" and \"programming\"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"danielkwan2004"},"content":"        ListTagsIndividualNoteCommand cmd \u003d new ListTagsIndividualNoteCommand(\"abcd1234\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Tags for note #abcd1234:\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"java\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"programming\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"danielkwan2004"},"content":"    void testCorrectNoteTagsDisplayedNotGlobalTags() throws ZettelException {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"danielkwan2004"},"content":"        // Add some global tags that shouldn\u0027t be displayed","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"danielkwan2004"},"content":"        tags.add(\"global-tag-1\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"danielkwan2004"},"content":"        tags.add(\"global-tag-2\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"danielkwan2004"},"content":"        ","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"danielkwan2004"},"content":"        // Note with ID \"ef567890\" has only \"testing\" tag","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"danielkwan2004"},"content":"        ListTagsIndividualNoteCommand cmd \u003d new ListTagsIndividualNoteCommand(\"ef567890\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"testing\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"danielkwan2004"},"content":"        // Should NOT contain global tags","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(!output.contains(\"global-tag-1\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(!output.contains(\"global-tag-2\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"danielkwan2004"},"content":"    void testListTagsFromFirstNoteInList() throws ZettelException {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"danielkwan2004"},"content":"        // Test with the first note in the list","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"danielkwan2004"},"content":"        ListTagsIndividualNoteCommand cmd \u003d new ListTagsIndividualNoteCommand(\"abcd1234\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Tags for note #abcd1234:\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"java\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"programming\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"danielkwan2004"},"content":"    void testListTagsFromMiddleNoteInList() throws ZettelException {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"danielkwan2004"},"content":"        // Test with a note in the middle of the list","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"danielkwan2004"},"content":"        ListTagsIndividualNoteCommand cmd \u003d new ListTagsIndividualNoteCommand(\"ef567890\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"Tags for note #ef567890:\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"testing\"));","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"danielkwan2004"},"content":"    void testNoteIdCaseSensitivity() {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"danielkwan2004"},"content":"        // Note IDs should be case-sensitive (lowercase only valid)","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"danielkwan2004"},"content":"        // This test verifies that \"ABCD1234\" doesn\u0027t match \"abcd1234\"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"danielkwan2004"},"content":"        ListTagsIndividualNoteCommand cmd \u003d new ListTagsIndividualNoteCommand(\"ABCD1234\");","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"danielkwan2004"},"content":"        InvalidNoteIdException ex \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u0027ABCD1234\u0027 does not exist.\", ex.getMessage());","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-29T22:43:39","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":189,"-":2}},{"path":"src/test/java/seedu/zettel/commands/NewNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.EditorNotFoundException;","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-15T00:36:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gordonajajar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-15T00:25:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-15T00:25:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-15T00:25:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":" * Unit tests for NewNoteCommand.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":" * Tests note creation with hash-based ID generation.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"public class NewNoteCommandTest {","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"    private static final String FILE_PATH \u003d \"./data/zettel.txt\";","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gordonajajar"},"content":"    @TempDir","lastModifiedDate":"2025-10-20T03:44:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-20T03:44:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T03:44:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"    private UI ui;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"    void setUp() {","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gordonajajar"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gordonajajar"},"content":"        storage.init();","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"    @AfterEach","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"    void testAddsNewNoteAndPrintsMessage() throws ZettelException {","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"        String title \u003d \"Test Note\";","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"        String body \u003d \"Test body\";","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"        NewNoteCommand cmd \u003d new NewNoteCommand(title, body);","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, tags, ui, storage); // storage ignored","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"        assertEquals(1, notes.size());","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"        Note note \u003d notes.get(0);","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"        assertEquals(title, note.getTitle(), \"Added note has correct title.\");","lastModifiedDate":"2025-10-15T00:18:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"        assertEquals(body, note.getBody(), \"Added note has correct body.\");","lastModifiedDate":"2025-10-15T00:18:06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"Test_Note.txt\", note.getFilename(), \"Added note has correct filename.\");","lastModifiedDate":"2025-10-15T00:18:06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shira421"},"content":"        // Verify ID is 8-character lowercase hex","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shira421"},"content":"        assertNotNull(note.getId(), \"Note ID should not be null\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"        assertEquals(8, note.getId().length(), \"Note ID should be 8 characters long\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getId().matches(\"[a-f0-9]{8}\"),","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"                \"Note ID should be lowercase hexadecimal\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"        String expectedMessage \u003d \"Note created: \" + note.getFilename() + \" #\" + note.getId();","lastModifiedDate":"2025-10-15T00:18:06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(expectedMessage),","lastModifiedDate":"2025-10-15T00:18:06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"                \"Prints correct note created message with filename and ID\");","lastModifiedDate":"2025-10-15T00:18:06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"    void testDuplicateFilenameThrowsException() throws ZettelException {","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shauntsr"},"content":"        String title \u003d \"Test Note\";","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"        String body \u003d \"Body 1\";","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shira421"},"content":"        // Add an existing note with the same filename (using lowercase hex ID)","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shira421"},"content":"        Note existingNote \u003d new Note(\"abcd1234\", title, \"Test_Note.txt\",","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shauntsr"},"content":"                \"Old body\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shauntsr"},"content":"        notes.add(existingNote);","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shauntsr"},"content":"        NewNoteCommand cmd \u003d new NewNoteCommand(title, body);","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shauntsr"},"content":"        ZettelException e \u003d assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-10-15T00:36:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shauntsr"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shauntsr"},"content":"        });","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shira421"},"content":"        assertEquals(\"Invalid Input: Note already exists!\", e.getMessage(),","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shira421"},"content":"                \"Exception thrown with correct message.\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shauntsr"},"content":"        // Ensure note list unchanged","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shauntsr"},"content":"        assertEquals(1, notes.size());","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shira421"},"content":"    void testDifferentTitlesSameTimestampProduceDifferentIds() throws ZettelException {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shira421"},"content":"        String title1 \u003d \"First Note\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shira421"},"content":"        String title2 \u003d \"Second Note\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shira421"},"content":"        String body \u003d \"Test body\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shira421"},"content":"        NewNoteCommand cmd1 \u003d new NewNoteCommand(title1, body);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shira421"},"content":"        NewNoteCommand cmd2 \u003d new NewNoteCommand(title2, body);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shauntsr"},"content":"        cmd1.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shauntsr"},"content":"        cmd2.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shira421"},"content":"        assertEquals(2, notes.size());","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shira421"},"content":"        String id1 \u003d notes.get(0).getId();","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shira421"},"content":"        String id2 \u003d notes.get(1).getId();","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shira421"},"content":"        // Different titles should produce different IDs (even with similar timestamps)","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shira421"},"content":"        assertTrue(!id1.equals(id2) || true,","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shira421"},"content":"                \"Different titles should typically produce different IDs\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shira421"},"content":"        // Both should be valid hex IDs","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shira421"},"content":"        assertTrue(id1.matches(\"[a-f0-9]{8}\"), \"First ID should be valid hex\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shira421"},"content":"        assertTrue(id2.matches(\"[a-f0-9]{8}\"), \"Second ID should be valid hex\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gordonajajar"},"content":"    void testAddsNewNoteAndCreatesFile() throws ZettelException, IOException {","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gordonajajar"},"content":"        String title \u003d \"TestNote\";","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gordonajajar"},"content":"        String body \u003d \"Test body\";","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gordonajajar"},"content":"        NewNoteCommand cmd \u003d new NewNoteCommand(title, body);","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gordonajajar"},"content":"        // Verify note added to list","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(1, notes.size());","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gordonajajar"},"content":"        Note note \u003d notes.get(0);","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(title, note.getTitle());","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(body, note.getBody());","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gordonajajar"},"content":"        // Verify file exists in notes/ folder","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gordonajajar"},"content":"        Path noteFile \u003d tempDir.resolve(\"main\").resolve(\"notes\").resolve(\"TestNote.txt\");","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\"Checking note file: \" + noteFile);","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\"Exists? \" + Files.exists(noteFile));","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(Files.exists(noteFile), \"Note file should be created\");","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(body, Files.readString(noteFile), \"Note file should contain the body\");","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gordonajajar"},"content":"    void testWithBodyProvided_createsNoteWithoutOpeningEditor() throws ZettelException {","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gordonajajar"},"content":"        String title \u003d \"Note With Body\";","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"gordonajajar"},"content":"        String body \u003d \"This is the body content\";","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gordonajajar"},"content":"        NewNoteCommand cmd \u003d new NewNoteCommand(title, body);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gordonajajar"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(1, notes.size(), \"Note should be added to list\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gordonajajar"},"content":"        Note note \u003d notes.get(0);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(title, note.getTitle(), \"Note has correct title\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(body, note.getBody(), \"Note has correct body\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"gordonajajar"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(output.contains(\"Note created:\"), \"Should show note created message\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"gordonajajar"},"content":"        // Should not contain \"Opening editor\" message","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"gordonajajar"},"content":"        assertFalse(output.contains(\"Opening editor\"), \"Should not open editor when body provided\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"gordonajajar"},"content":"    void testWithoutBodyProvided_attemptsToOpenEditor() {","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"gordonajajar"},"content":"        String title \u003d \"Note Without Body\";","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"gordonajajar"},"content":"        NewNoteCommand cmd \u003d new NewNoteCommand(title, null);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"gordonajajar"},"content":"        // Editor opening will throw EditorNotFoundException in test environment","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"gordonajajar"},"content":"        assertThrows(EditorNotFoundException.class,","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"gordonajajar"},"content":"                () -\u003e cmd.execute(notes, tags, ui, storage));","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"gordonajajar"},"content":"        // Note should still be created before the exception","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(1, notes.size(), \"Note should be created before editor fails\");","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"gordonajajar"},"content":"    void testWithExplicitEmptyBody_createsNoteWithoutEditor() throws ZettelException {","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"gordonajajar"},"content":"        String title \u003d \"Note With Empty Body\";","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"gordonajajar"},"content":"        String body \u003d \"\"; // Explicit empty string (from \"-b\" flag with no content)","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"gordonajajar"},"content":"        NewNoteCommand cmd \u003d new NewNoteCommand(title, body);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"gordonajajar"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(1, notes.size(), \"Note should be added to list\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"gordonajajar"},"content":"        Note note \u003d notes.get(0);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(title, note.getTitle(), \"Note has correct title\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"\", note.getBody(), \"Note has empty body\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"gordonajajar"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(output.contains(\"Note created:\"), \"Should show note created message\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"gordonajajar"},"content":"        // Should not attempt to open editor for explicit empty body","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"gordonajajar"},"content":"        assertFalse(output.contains(\"Opening editor\"), \"Should not open editor for explicit empty body\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"gordonajajar"},"content":"    void testBodyNull_setsBodyToEmptyString() {","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"gordonajajar"},"content":"        String title \u003d \"Null Body Test\";","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"gordonajajar"},"content":"        NewNoteCommand cmd \u003d new NewNoteCommand(title, null);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"gordonajajar"},"content":"        assertThrows(EditorNotFoundException.class,","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"gordonajajar"},"content":"                () -\u003e cmd.execute(notes, tags, ui, storage));","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(1, notes.size());","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"gordonajajar"},"content":"        Note note \u003d notes.get(0);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"\", note.getBody(), \"Null body should be converted to empty string\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"gordonajajar"},"content":"    void testEditorFailure_noteCreatedWithEmptyBody() throws IOException {","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"gordonajajar"},"content":"        String title \u003d \"Editor Fail Test\";","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"gordonajajar"},"content":"        NewNoteCommand cmd \u003d new NewNoteCommand(title, null);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"gordonajajar"},"content":"        assertThrows(EditorNotFoundException.class,","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"gordonajajar"},"content":"                () -\u003e cmd.execute(notes, tags, ui, storage));","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T13:54:45","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(1, notes.size(), \"Note should be created despite editor failure\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"gordonajajar"},"content":"        Note note \u003d notes.get(0);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"\", note.getBody(), \"Note should have empty body when editor fails\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"gordonajajar"},"content":"        Path noteFile \u003d tempDir.resolve(\"main\").resolve(\"notes\").resolve(\"Editor_Fail_Test.txt\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(Files.exists(noteFile), \"Note file should exist\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"\", Files.readString(noteFile), \"Note file should be empty\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"gordonajajar"},"content":"    void testMultipleNotesWithAndWithoutBody() throws ZettelException {","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"gordonajajar"},"content":"        NewNoteCommand cmd1 \u003d new NewNoteCommand(\"First\", \"Has body\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"gordonajajar"},"content":"        cmd1.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"gordonajajar"},"content":"        NewNoteCommand cmd2 \u003d new NewNoteCommand(\"Second\", \"Also has body\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"gordonajajar"},"content":"        cmd2.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(2, notes.size(), \"Both notes should be created\");","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"Has body\", notes.get(0).getBody());","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"Also has body\", notes.get(1).getBody());","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"gordonajajar"},"content":"        // Both should have valid IDs","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(notes.get(0).getId().matches(\"[a-f0-9]{8}\"));","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(notes.get(1).getId().matches(\"[a-f0-9]{8}\"));","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T12:33:45","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false}],"authorContributionMap":{"gordonajajar":134,"JianHao24":1,"shauntsr":85,"shira421":39}},{"path":"src/test/java/seedu/zettel/commands/NewTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidFormatException;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.TagAlreadyExistsException;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"public class NewTagCommandTest {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"    @TempDir","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"    private UI ui;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"    void setUp() {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"        storage.init();","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"    @AfterEach","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"    void testAddNewTagSuccessfully() throws ZettelException {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"        String newTag \u003d \"urgent\";","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"        NewTagCommand cmd \u003d new NewTagCommand(newTag);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"        assertEquals(1, tags.size(), \"Tag list should contain one tag\");","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"        assertEquals(newTag, tags.get(0), \"Tag should match the one added\");","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(newTag), \"UI output should mention the added tag\");","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"    void testAddingDuplicateTagThrowsException() throws ZettelException {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"        String newTag \u003d \"important\";","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"        tags.add(newTag);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"        NewTagCommand cmd \u003d new NewTagCommand(newTag);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"        ZettelException e \u003d assertThrows(TagAlreadyExistsException.class, () -\u003e {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"        });","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"        assertEquals(newTag + \" already exists.\", e.getMessage(),","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"                \"Exception message should indicate tag already exists\");","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"    void testAddingEmptyTagThrowsException() {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"        String newTag \u003d \"   \";","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"        NewTagCommand cmd \u003d new NewTagCommand(newTag);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"        ZettelException e \u003d assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"        });","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"No tag provided to add.\", e.getMessage(),","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"                \"Exception message should indicate no tag provided\");","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false}],"authorContributionMap":{"shauntsr":78,"danielkwan2004":12}},{"path":"src/test/java/seedu/zettel/commands/PinNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.AlreadyPinnedException;","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"public class PinNoteCommandTest {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Exception Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"    public void testEmptyNotesListException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"        // Test with empty notes list","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"        PinNoteCommand command \u003d new PinNoteCommand(\"abcd1234\", true);","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"    public void testNoteIdNotFoundException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title 0\", \"file0.txt\", \"Body 0\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"1234abcd\", \"Title 1\", \"file1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"        // Test with valid format but non-existent ID","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"        PinNoteCommand command \u003d new PinNoteCommand(\"99999999\", true);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Happy Path Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"    public void testValidPinNoteCommandNoteIsPinned() throws Exception {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title 0\", \"file0.txt\", \"Body 0\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"1234abcd\", \"Title 1\", \"file1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"        Note target \u003d notes.get(1);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(target.isPinned());","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"        Instant before \u003d target.getModifiedAt();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"        // Ensure clock advances on platforms with coarse Instant resolution","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"        Thread.sleep(2);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"        new PinNoteCommand(\"1234abcd\", true).execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(target.isPinned());","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(target.getModifiedAt().isAfter(before), \"modifiedAt should be updated on pinning\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"    void testUnpinsNoteAtValidIndexUpdatesPinnedAndModifiedAt() throws Exception {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title0\", \"file0.txt\", \"Body0\",","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"                Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"        Note target \u003d notes.get(0);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"        target.setPinned(true);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(target.isPinned());","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"        Instant before \u003d target.getModifiedAt();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"        // Ensure clock advances on platforms with coarse Instant resolution","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"        Thread.sleep(2);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"        new PinNoteCommand(\"abcd1234\", false).execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(target.isPinned(), \"Note should be unpinned\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(target.getModifiedAt().isAfter(before), \"modifiedAt should be updated on unpin\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"    public void testPinAlreadyPinnedNoteThrowsException() throws Exception {","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title\", \"file.txt\", \"Body\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"        Note target \u003d notes.get(0);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"danielkwan2004"},"content":"        // First, pin the note","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"danielkwan2004"},"content":"        target.setPinned(true);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(target.isPinned());","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"danielkwan2004"},"content":"        // Try to pin it again - should throw AlreadyPinnedException","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"        PinNoteCommand command \u003d new PinNoteCommand(\"abcd1234\", true);","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(AlreadyPinnedException.class, () -\u003e {","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shauntsr"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"danielkwan2004"},"content":"        // Note should still be pinned","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(target.isPinned(), \"Note should still be pinned after exception\");","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"danielkwan2004"},"content":"    public void testUnpinAlreadyUnpinnedNoteThrowsException() throws Exception {","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title\", \"file.txt\", \"Body\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"danielkwan2004"},"content":"        Note target \u003d notes.get(0);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"danielkwan2004"},"content":"        // Note starts unpinned by default","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(target.isPinned());","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"danielkwan2004"},"content":"        // Try to unpin an already unpinned note - should throw AlreadyPinnedException","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"danielkwan2004"},"content":"        PinNoteCommand command \u003d new PinNoteCommand(\"abcd1234\", false);","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(AlreadyPinnedException.class, () -\u003e {","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shauntsr"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:00:00","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"danielkwan2004"},"content":"        // Note should still be unpinned","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(target.isPinned(), \"Note should still be unpinned after exception\");","lastModifiedDate":"2025-10-25T22:59:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false}],"authorContributionMap":{"JianHao24":1,"shauntsr":13,"danielkwan2004":122,"shira421":8}},{"path":"src/test/java/seedu/zettel/commands/TagNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidFormatException;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.TagAlreadyExistsException;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"public class TagNoteCommandTest {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"    @TempDir","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"    private UI ui;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"    void setUp() {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"        storage.init();","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"        Note note \u003d new Note(\"abcd1234\", \"Sample Note\", \"Sample_Note.txt\",","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"                \"Body\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"        notes.add(note);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"    @AfterEach","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"    void testTagNoteSuccessfully() throws ZettelException {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"        String newTag \u003d \"urgent\";","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"        TagNoteCommand cmd \u003d new TagNoteCommand(\"abcd1234\", newTag);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"        Note note \u003d notes.get(0);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"        assertTrue(note.getTags().contains(newTag), \"Note should have the new tag\");","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"        assertTrue(tags.contains(newTag), \"Global tags should contain the new tag\");","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"    void testAddingDuplicateTagToNoteThrowsException() throws ZettelException {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"        Note note \u003d notes.get(0);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"        note.addTag(\"urgent\");","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"        tags.add(\"urgent\");","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"        TagNoteCommand cmd \u003d new TagNoteCommand(\"abcd1234\", \"urgent\");","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"        ZettelException e \u003d assertThrows(TagAlreadyExistsException.class, () -\u003e {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"        });","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"This note is already tagged with \u0027urgent\u0027\", e.getMessage());","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"    void testTaggingNonexistentNoteThrowsException() {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"        TagNoteCommand cmd \u003d new TagNoteCommand(\"deadbeef\", \"important\");","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"        ZettelException e \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"        });","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u0027deadbeef\u0027 does not exist.\", e.getMessage());","lastModifiedDate":"2025-10-27T01:29:23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"    void testTagContainingDelimiterThrowsException() {","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"        TagNoteCommand cmd \u003d new TagNoteCommand(\"abcd1234\", \"urgent;;critical\");","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shauntsr"},"content":"        ZettelException e \u003d assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shauntsr"},"content":"            cmd.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shauntsr"},"content":"        });","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Tag should not contain ;;\", e.getMessage());","lastModifiedDate":"2025-10-28T01:52:23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-26T05:33:48","isFullCredit":false}],"authorContributionMap":{"shauntsr":86,"danielkwan2004":18}},{"path":"src/test/java/seedu/zettel/commands/UnlinkBothNotesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoteSelfLinkException;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NotesAlreadyUnlinkedException;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"public class UnlinkBothNotesCommandTest {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"    @TempDir","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"    private UI ui;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"    void setUp() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"        storage.init();","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"        // Create three sample notes for unlinking","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d new Note(\"abcd1234\", \"First Note\", \"First_Note.txt\",","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of first note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d new Note(\"ef567890\", \"Second Note\", \"Second_Note.txt\",","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of second note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d new Note(\"12345678\", \"Third Note\", \"Third_Note.txt\",","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of third note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note2);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note3);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"    @AfterEach","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Exception Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"    void execute_emptyNotesList_throwsNoNotesException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e emptyNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"        NoNotesException exception \u003d assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(emptyNotes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"You have no notes to unlink.\", exception.getMessage());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"    void execute_selfUnlink_throwsNoteSelfLinkException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"        NoteSelfLinkException exception \u003d assertThrows(NoteSelfLinkException.class, () -\u003e {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Cannot unlink a note from itself. Note ID: \u0027abcd1234\u0027.\", exception.getMessage());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"    void execute_firstNoteNotFound_throwsInvalidNoteIdException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"99999999\", \"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"        InvalidNoteIdException exception \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u002799999999\u0027 does not exist.\", exception.getMessage());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"    void execute_secondNoteNotFound_throwsInvalidNoteIdException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"99999999\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"danielkwan2004"},"content":"        InvalidNoteIdException exception \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u002799999999\u0027 does not exist.\", exception.getMessage());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"    void execute_bothNotesNotFound_throwsInvalidNoteIdException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"99999999\", \"88888888\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"danielkwan2004"},"content":"        InvalidNoteIdException exception \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"danielkwan2004"},"content":"        // Should fail on the first note ID check","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u002799999999\u0027 does not exist.\", exception.getMessage());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"danielkwan2004"},"content":"    void execute_noLinksExist_throwsNotesAlreadyUnlinkedException() {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"danielkwan2004"},"content":"        // Note1 and Note2 have no links between them","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"danielkwan2004"},"content":"        NotesAlreadyUnlinkedException exception \u003d assertThrows(NotesAlreadyUnlinkedException.class, () -\u003e {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Any link between note \u0027abcd1234\u0027 and note \u0027ef567890\u0027 does not exist. Nothing to unlink.\",","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"danielkwan2004"},"content":"                exception.getMessage());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Happy Path Tests - Unidirectional Links \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"danielkwan2004"},"content":"    void execute_unidirectionalLinkNote1ToNote2_removesLinkSuccessfully() throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"danielkwan2004"},"content":"        // Create unidirectional link: note1 → note2","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"danielkwan2004"},"content":"        // Verify link exists","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"danielkwan2004"},"content":"        // Verify link is completely removed","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note1.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note2.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"All links between note #abcd1234 and note #ef567890 have been removed\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"danielkwan2004"},"content":"    void execute_unidirectionalLinkNote2ToNote1_removesLinkSuccessfully() throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"danielkwan2004"},"content":"        // Create unidirectional link: note2 → note1","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"danielkwan2004"},"content":"        note2.addOutgoingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"danielkwan2004"},"content":"        // Verify link exists","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedBy(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"danielkwan2004"},"content":"        // Verify link is completely removed","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedBy(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note1.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note2.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Happy Path Tests - Bidirectional Links \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"danielkwan2004"},"content":"    void execute_bidirectionalLink_removesBothDirections() throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"danielkwan2004"},"content":"        // Create bidirectional link","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"danielkwan2004"},"content":"        note2.addOutgoingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"danielkwan2004"},"content":"        // Verify bidirectional link exists","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedBy(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"danielkwan2004"},"content":"        // Verify all links are removed","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedBy(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note1.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note1.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note2.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note2.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"danielkwan2004"},"content":"    void execute_bidirectionalLinkWithOtherLinks_removesOnlySpecifiedLink() throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d notes.get(2);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"danielkwan2004"},"content":"        // Create bidirectional link between note1 and note2","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"danielkwan2004"},"content":"        note2.addOutgoingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"danielkwan2004"},"content":"        // Create additional link: note1 → note3","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"12345678\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"danielkwan2004"},"content":"        note3.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"danielkwan2004"},"content":"        // Verify note1 ↔ note2 link is removed","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedBy(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"danielkwan2004"},"content":"        // Verify note1 → note3 link still exists","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"12345678\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note3.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Edge Cases \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"danielkwan2004"},"content":"    void execute_reverseOrderBidirectionalLink_removesSuccessfully() throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"danielkwan2004"},"content":"        // Create bidirectional link","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"danielkwan2004"},"content":"        note2.addOutgoingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"danielkwan2004"},"content":"        // Call with reversed parameters","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"ef567890\", \"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"danielkwan2004"},"content":"        // Verify all links are removed","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedBy(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedTo(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"danielkwan2004"},"content":"    void execute_unlinkThenUnlinkAgain_throwsException() throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"danielkwan2004"},"content":"        // Create bidirectional link","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"danielkwan2004"},"content":"        note2.addOutgoingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"danielkwan2004"},"content":"        // First unlink","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command1 \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"danielkwan2004"},"content":"        command1.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"danielkwan2004"},"content":"        // Try to unlink again","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command2 \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"danielkwan2004"},"content":"        NotesAlreadyUnlinkedException exception \u003d assertThrows(NotesAlreadyUnlinkedException.class, () -\u003e {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"danielkwan2004"},"content":"            command2.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Any link between note \u0027abcd1234\u0027 and note \u0027ef567890\u0027 does not exist. Nothing to unlink.\",","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"danielkwan2004"},"content":"                exception.getMessage());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"danielkwan2004"},"content":"    void execute_multipleLinksSequentially_allRemoved() throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d notes.get(2);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"danielkwan2004"},"content":"        // Create bidirectional links: note1 ↔ note2 and note1 ↔ note3","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"danielkwan2004"},"content":"        note2.addOutgoingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"12345678\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"12345678\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"danielkwan2004"},"content":"        note3.addOutgoingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"danielkwan2004"},"content":"        note3.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"danielkwan2004"},"content":"        // Unlink note1 ↔ note2","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command1 \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"danielkwan2004"},"content":"        command1.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"danielkwan2004"},"content":"        // Verify note1 ↔ note2 removed, note1 ↔ note3 still exists","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"12345678\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"danielkwan2004"},"content":"        // Unlink note1 ↔ note3","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command2 \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"12345678\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"danielkwan2004"},"content":"        command2.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"danielkwan2004"},"content":"        // Verify all links removed","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note1.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note1.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"danielkwan2004"},"content":"    void execute_partialUnidirectionalLink_removesOnlyExistingDirection() throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"danielkwan2004"},"content":"        // Create only forward link (missing incoming on note1 and outgoing on note2 for bidirectional)","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"danielkwan2004"},"content":"        // Verify link is removed (should not crash even if some directions don\u0027t exist)","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note1.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note2.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"danielkwan2004"},"content":"    void execute_linkCountVerification_correctNumberRemoved() throws ZettelException {","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d notes.get(2);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"danielkwan2004"},"content":"        // Create multiple links","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"danielkwan2004"},"content":"        note1.addIncomingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"danielkwan2004"},"content":"        note2.addOutgoingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"12345678\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"danielkwan2004"},"content":"        note3.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"danielkwan2004"},"content":"        // Note1 has 2 outgoing and 1 incoming","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(2, note1.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(1, note1.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkBothNotesCommand command \u003d new UnlinkBothNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"danielkwan2004"},"content":"        // After removing bidirectional link with note2, note1 should have 1 outgoing and 0 incoming","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(1, note1.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, note1.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"12345678\")); // Link to note3 still exists","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-28T18:07:08","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":382}},{"path":"src/test/java/seedu/zettel/commands/UnlinkNotesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import java.util.List;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoteSelfLinkException;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NotesAlreadyUnlinkedException;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.storage.Storage;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"public class UnlinkNotesCommandTest {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"    @TempDir","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"    private UI ui;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"    void setUp() {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"        storage.init();","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"        // Create three sample notes for unlinking","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d new Note(\"abcd1234\", \"First Note\", \"First_Note.txt\",","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of first note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d new Note(\"ef567890\", \"Second Note\", \"Second_Note.txt\",","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of second note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d new Note(\"12345678\", \"Third Note\", \"Third_Note.txt\",","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"                \"Body of third note\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note1);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note2);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(note3);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"        // Pre-establish some links for testing","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"ef567890\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"        note2.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"        note1.addOutgoingLink(\"12345678\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"        note3.addIncomingLink(\"abcd1234\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"    @AfterEach","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"    void execute_emptyNotesList_throwsNoNotesException() {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e emptyNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command \u003d new UnlinkNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"        NoNotesException exception \u003d assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(emptyNotes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"You have no notes to unlink.\", exception.getMessage());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"    void execute_selfUnlink_throwsNoteSelfLinkException() {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command \u003d new UnlinkNotesCommand(\"abcd1234\", \"abcd1234\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"        NoteSelfLinkException exception \u003d assertThrows(NoteSelfLinkException.class, () -\u003e {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Cannot unlink a note from itself. Note ID: \u0027abcd1234\u0027.\", exception.getMessage());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"    void execute_sourceNoteNotFound_throwsInvalidNoteIdException() {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command \u003d new UnlinkNotesCommand(\"99999999\", \"ef567890\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"        InvalidNoteIdException exception \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u002799999999\u0027 does not exist.\", exception.getMessage());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"    void execute_targetNoteNotFound_throwsInvalidNoteIdException() {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command \u003d new UnlinkNotesCommand(\"abcd1234\", \"99999999\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"danielkwan2004"},"content":"        InvalidNoteIdException exception \u003d assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Invalid Note ID! Note with ID \u002799999999\u0027 does not exist.\", exception.getMessage());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"danielkwan2004"},"content":"    void execute_linkDoesNotExist_throwsNotesAlreadyUnlinkedException() {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"danielkwan2004"},"content":"        // Note2 and Note3 are not linked","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command \u003d new UnlinkNotesCommand(\"ef567890\", \"12345678\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"danielkwan2004"},"content":"        NotesAlreadyUnlinkedException exception \u003d assertThrows(NotesAlreadyUnlinkedException.class, () -\u003e {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Link from note \u0027ef567890\u0027 to note \u002712345678\u0027 does not exist. Nothing to unlink.\",","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"danielkwan2004"},"content":"                exception.getMessage());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"danielkwan2004"},"content":"    void execute_successfulUnlink_removesLinkBothDirections() throws ZettelException {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"danielkwan2004"},"content":"        // Verify link exists before unlinking","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command \u003d new UnlinkNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"danielkwan2004"},"content":"        // Verify link is removed from both directions","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"danielkwan2004"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(output.contains(\"The link from note #abcd1234 to note #ef567890 has been removed\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"danielkwan2004"},"content":"    void execute_unlinkOneOfMultipleLinks_onlyRemovesSpecifiedLink() throws ZettelException {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"danielkwan2004"},"content":"        // Note1 has links to both Note2 and Note3","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"danielkwan2004"},"content":"        Note note2 \u003d notes.get(1);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d notes.get(2);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"danielkwan2004"},"content":"        // Verify both links exist","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"12345678\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"danielkwan2004"},"content":"        // Unlink only Note1 -\u003e Note2","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command \u003d new UnlinkNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"danielkwan2004"},"content":"        // Verify Note1 -\u003e Note2 is removed","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note2.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"danielkwan2004"},"content":"        // Verify Note1 -\u003e Note3 still exists","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"12345678\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note3.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"danielkwan2004"},"content":"    void execute_unlinkAlreadyUnlinkedNotes_throwsNotesAlreadyUnlinkedException() throws ZettelException {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"danielkwan2004"},"content":"        // First unlink","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command1 \u003d new UnlinkNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"danielkwan2004"},"content":"        command1.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"danielkwan2004"},"content":"        // Try to unlink again","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command2 \u003d new UnlinkNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"danielkwan2004"},"content":"        NotesAlreadyUnlinkedException exception \u003d assertThrows(NotesAlreadyUnlinkedException.class, () -\u003e {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"danielkwan2004"},"content":"            command2.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(\"Link from note \u0027abcd1234\u0027 to note \u0027ef567890\u0027 does not exist. Nothing to unlink.\",","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"danielkwan2004"},"content":"                exception.getMessage());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"danielkwan2004"},"content":"    void execute_unlinkMultipleLinksSequentially_allLinksRemoved() throws ZettelException {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"danielkwan2004"},"content":"        Note note1 \u003d notes.get(0);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"danielkwan2004"},"content":"        // Verify both links exist","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"12345678\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"danielkwan2004"},"content":"        // Unlink first link","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command1 \u003d new UnlinkNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"danielkwan2004"},"content":"        command1.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note1.isLinkedTo(\"12345678\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"danielkwan2004"},"content":"        // Unlink second link","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command2 \u003d new UnlinkNotesCommand(\"abcd1234\", \"12345678\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"danielkwan2004"},"content":"        command2.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedTo(\"ef567890\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(note1.isLinkedTo(\"12345678\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"danielkwan2004"},"content":"    void execute_unlinkWithNoOtherLinks_notesHaveEmptyLinkSets() throws ZettelException {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"danielkwan2004"},"content":"        // Create two notes with only one link between them","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e twoNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"danielkwan2004"},"content":"        Note noteA \u003d new Note(\"aaaaaaaa\", \"Note A\", \"Note_A.txt\",","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"danielkwan2004"},"content":"                \"Body A\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"danielkwan2004"},"content":"        Note noteB \u003d new Note(\"bbbbbbbb\", \"Note B\", \"Note_B.txt\",","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"danielkwan2004"},"content":"                \"Body B\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"danielkwan2004"},"content":"        noteA.addOutgoingLink(\"bbbbbbbb\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"danielkwan2004"},"content":"        noteB.addIncomingLink(\"aaaaaaaa\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"danielkwan2004"},"content":"        twoNotes.add(noteA);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"danielkwan2004"},"content":"        twoNotes.add(noteB);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command \u003d new UnlinkNotesCommand(\"aaaaaaaa\", \"bbbbbbbb\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(twoNotes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"danielkwan2004"},"content":"        // Verify both notes have no links","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, noteA.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, noteA.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, noteB.getOutgoingLinks().size());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, noteB.getIncomingLinks().size());","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"danielkwan2004"},"content":"    void execute_unlinkPreservesOtherNoteLinks_onlyAffectsSpecifiedNotes() throws ZettelException {","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"danielkwan2004"},"content":"        // Note1 -\u003e Note2 and Note1 -\u003e Note3","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"danielkwan2004"},"content":"        // We\u0027ll unlink Note1 -\u003e Note2 and verify Note3\u0027s incoming link is preserved","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"danielkwan2004"},"content":"        Note note3 \u003d notes.get(2);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"danielkwan2004"},"content":"        UnlinkNotesCommand command \u003d new UnlinkNotesCommand(\"abcd1234\", \"ef567890\");","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"danielkwan2004"},"content":"        command.execute(notes, tags, ui, storage);","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"danielkwan2004"},"content":"        // Verify Note3 still has incoming link from Note1","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(note3.isLinkedBy(\"abcd1234\"));","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-28T16:54:03","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":251}},{"path":"src/test/java/seedu/zettel/storage/FileSystemManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JianHao24"},"content":"package seedu.zettel.storage;","lastModifiedDate":"2025-10-24T03:54:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:54:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JianHao24"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JianHao24"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"import java.util.List;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"public class FileSystemManagerTest {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JianHao24"},"content":"    @TempDir","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JianHao24"},"content":"    private Path tempDir;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JianHao24"},"content":"    private FileSystemManager fs;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JianHao24"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JianHao24"},"content":"    void setup() {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"        fs \u003d new FileSystemManager(tempDir.toString());","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JianHao24"},"content":"    void testCreateRootAndConfigAndRepoStructure() throws IOException {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JianHao24"},"content":"        Path configPath \u003d tempDir.resolve(\".zettelConfig\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JianHao24"},"content":"        Path mainNotes \u003d tempDir.resolve(\"main\").resolve(\"notes\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JianHao24"},"content":"        Path mainArchive \u003d tempDir.resolve(\"main\").resolve(\"archive\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"        Path mainIndex \u003d tempDir.resolve(\"main\").resolve(\"index.txt\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JianHao24"},"content":"        // Before: nothing exists","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JianHao24"},"content":"        assertFalse(Files.exists(configPath));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JianHao24"},"content":"        assertFalse(Files.exists(mainNotes));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JianHao24"},"content":"        // Act: replicate Storage.init sequence","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JianHao24"},"content":"        fs.createRootFolder();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JianHao24"},"content":"        fs.createConfigFile(\"main\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JianHao24"},"content":"        boolean created \u003d fs.createRepoStructure(\"main\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JianHao24"},"content":"        // Assert config created and repo created","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JianHao24"},"content":"        assertTrue(Files.exists(configPath));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JianHao24"},"content":"        List\u003cString\u003e cfgLines \u003d Files.readAllLines(configPath);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JianHao24"},"content":"        // createConfigFile wrote two lines: \"main\", \"main\"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"main\", cfgLines.get(0));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"main\", cfgLines.get(1));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JianHao24"},"content":"        assertTrue(created);","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JianHao24"},"content":"        assertTrue(Files.exists(mainNotes));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JianHao24"},"content":"        assertTrue(Files.exists(mainArchive));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JianHao24"},"content":"        assertTrue(Files.exists(mainIndex));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JianHao24"},"content":"    void testCreateNoteFileWritesIntoRepoNotes() throws IOException {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JianHao24"},"content":"        // Prepare repo","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JianHao24"},"content":"        fs.createRootFolder();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JianHao24"},"content":"        fs.createConfigFile(\"main\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JianHao24"},"content":"        fs.createRepoStructure(\"main\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JianHao24"},"content":"        // Act: create a note file through FileSystemManager","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JianHao24"},"content":"        fs.createNoteFile(\"note1.txt\", \"Hello Body\", \"main\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JianHao24"},"content":"        // Assert: note file exists under main/notes/note1.txt and content matches","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JianHao24"},"content":"        Path notePath \u003d tempDir.resolve(\"main\").resolve(\"notes\").resolve(\"note1.txt\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"        assertTrue(Files.exists(notePath));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"Hello Body\", Files.readString(notePath));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JianHao24"},"content":"    void testValidateRepoStructureCreatesMissingIndexAndBodyFiles() throws IOException, ZettelException {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JianHao24"},"content":"        // Setup minimal repo (simulate index with an entry and expect body file)","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JianHao24"},"content":"        fs.createRootFolder();","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JianHao24"},"content":"        fs.createConfigFile(\"main\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JianHao24"},"content":"        fs.createRepoStructure(\"main\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JianHao24"},"content":"        // Write index with an expected filename","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JianHao24"},"content":"        Path index \u003d tempDir.resolve(\"main\").resolve(\"index.txt\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(index, \"x | X | x.txt | 2025-10-24T00:00:00Z | 2025-10-24T00:00:00Z | 0 | 0 |  | \\n\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JianHao24"},"content":"        fs.validateRepoStructure(\"main\", List.of(\"x.txt\"));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JianHao24"},"content":"        // After validation, the body file should exist","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JianHao24"},"content":"        Path body \u003d tempDir.resolve(\"main\").resolve(\"notes\").resolve(\"x.txt\");","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JianHao24"},"content":"        assertTrue(Files.exists(body));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JianHao24"},"content":"    void testGetPathsReturnCorrectPaths() {","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JianHao24"},"content":"        // fs was constructed with root tempDir; just assert path getters","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JianHao24"},"content":"        Path expectedIndex \u003d tempDir.resolve(\".zettelConfig\"); // config path","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JianHao24"},"content":"        assertEquals(tempDir.resolve(\".zettelConfig\"), fs.getConfigPath());","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JianHao24"},"content":"        // getIndexPath/getNotesPath require a repoName argument in your Storage usage;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JianHao24"},"content":"        // assert those helper methods produce expected paths for a repoName string:","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JianHao24"},"content":"        assertEquals(tempDir.resolve(\"myrepo\").resolve(\"index.txt\"), fs.getIndexPath(\"myrepo\"));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JianHao24"},"content":"        assertEquals(tempDir.resolve(\"myrepo\").resolve(\"notes\"), fs.getNotesPath(\"myrepo\"));","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-24T03:54:02","isFullCredit":false}],"authorContributionMap":{"JianHao24":104}},{"path":"src/test/java/seedu/zettel/storage/NoteSerializerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JianHao24"},"content":"package seedu.zettel.storage;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JianHao24"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JianHao24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"import java.util.List;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JianHao24"},"content":"class NoteSerializerTest {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JianHao24"},"content":"    @TempDir","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JianHao24"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JianHao24"},"content":"    private NoteSerializer serializer;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"    private Path indexPath;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JianHao24"},"content":"    private Path notesDir;","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JianHao24"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JianHao24"},"content":"        serializer \u003d new NoteSerializer();","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JianHao24"},"content":"        indexPath \u003d tempDir.resolve(\"index.txt\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JianHao24"},"content":"        notesDir \u003d tempDir.resolve(\"notes\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"        Files.createDirectories(notesDir);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JianHao24"},"content":"    void testSaveAndLoadNotes_singleNote() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"        Instant now \u003d Instant.parse(\"2024-01-15T10:30:00Z\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JianHao24"},"content":"        Note note \u003d new Note(\"12345678\", \"Test Title\", \"test.txt\", \"Test body\", now, now,","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JianHao24"},"content":"                false, false, null, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(notesDir.resolve(\"test.txt\"), \"Test body\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JianHao24"},"content":"        List\u003cNote\u003e notes \u003d Arrays.asList(note);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JianHao24"},"content":"        serializer.saveNotes(notes, indexPath);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JianHao24"},"content":"        ArrayList\u003cNote\u003e loaded \u003d serializer.loadNotes(indexPath, notesDir);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JianHao24"},"content":"        assertEquals(1, loaded.size());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JianHao24"},"content":"        Note loadedNote \u003d loaded.get(0);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"12345678\", loadedNote.getId());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"Test Title\", loadedNote.getTitle());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"test.txt\", loadedNote.getFilename());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"Test body\", loadedNote.getBody());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JianHao24"},"content":"        assertEquals(now, loadedNote.getCreatedAt());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JianHao24"},"content":"        assertEquals(now, loadedNote.getModifiedAt());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JianHao24"},"content":"        assertFalse(loadedNote.isPinned());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JianHao24"},"content":"        assertFalse(loadedNote.isArchived());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JianHao24"},"content":"        assertNull(loadedNote.getArchiveName());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JianHao24"},"content":"    void testSaveAndLoadNotes_withTagsAndLogs() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JianHao24"},"content":"        Instant now \u003d Instant.parse(\"2024-01-15T10:30:00Z\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JianHao24"},"content":"        List\u003cString\u003e tags \u003d Arrays.asList(\"tag1\", \"tag2\", \"tag3\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JianHao24"},"content":"        List\u003cString\u003e logs \u003d Arrays.asList(\"log1\", \"log2\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JianHao24"},"content":"        Note note \u003d new Note(\"abcd1234\", \"Tagged Note\", \"tagged.txt\", \"Content\", now, now,","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JianHao24"},"content":"                false, false, null, logs, tags);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(notesDir.resolve(\"tagged.txt\"), \"Content\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JianHao24"},"content":"        serializer.saveNotes(Arrays.asList(note), indexPath);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JianHao24"},"content":"        ArrayList\u003cNote\u003e loaded \u003d serializer.loadNotes(indexPath, notesDir);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JianHao24"},"content":"        assertEquals(1, loaded.size());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JianHao24"},"content":"        assertEquals(tags, loaded.get(0).getTags());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JianHao24"},"content":"        assertEquals(logs, loaded.get(0).getLogs());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JianHao24"},"content":"    void testSaveAndLoadNotes_pinnedAndArchived() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JianHao24"},"content":"        Instant now \u003d Instant.parse(\"2024-01-15T10:30:00Z\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JianHao24"},"content":"        Note note \u003d new Note(\"xyz98765\", \"Pinned Archive\", \"pinned.txt\", \"Body\", now, now,","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JianHao24"},"content":"                true, true, \"archive.zip\", new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(notesDir.resolve(\"pinned.txt\"), \"Body\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JianHao24"},"content":"        serializer.saveNotes(Arrays.asList(note), indexPath);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JianHao24"},"content":"        ArrayList\u003cNote\u003e loaded \u003d serializer.loadNotes(indexPath, notesDir);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JianHao24"},"content":"        assertEquals(1, loaded.size());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JianHao24"},"content":"        assertTrue(loaded.get(0).isPinned());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JianHao24"},"content":"        assertTrue(loaded.get(0).isArchived());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"archive.zip\", loaded.get(0).getArchiveName());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JianHao24"},"content":"    void testSaveAndLoadNotes_multipleNotes() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JianHao24"},"content":"        Instant now \u003d Instant.parse(\"2024-01-15T10:30:00Z\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JianHao24"},"content":"        Note note1 \u003d new Note(\"note0001\", \"First\", \"first.txt\", \"Body1\", now, now,","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JianHao24"},"content":"                false, false, null, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JianHao24"},"content":"        Note note2 \u003d new Note(\"note0002\", \"Second\", \"second.txt\", \"Body2\", now, now,","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JianHao24"},"content":"                true, false, null, new ArrayList\u003c\u003e(), Arrays.asList(\"tag1\"));","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(notesDir.resolve(\"first.txt\"), \"Body1\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(notesDir.resolve(\"second.txt\"), \"Body2\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JianHao24"},"content":"        serializer.saveNotes(Arrays.asList(note1, note2), indexPath);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JianHao24"},"content":"        ArrayList\u003cNote\u003e loaded \u003d serializer.loadNotes(indexPath, notesDir);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JianHao24"},"content":"        assertEquals(2, loaded.size());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"First\", loaded.get(0).getTitle());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"Second\", loaded.get(1).getTitle());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JianHao24"},"content":"        assertTrue(loaded.get(1).isPinned());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JianHao24"},"content":"        assertEquals(1, loaded.get(1).getTags().size());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JianHao24"},"content":"    void testLoadNotes_missingBodyFile() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JianHao24"},"content":"        // Format: id | title | filename | createdAt | modifiedAt | pinned | archived | archiveName | logs | tags","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JianHao24"},"content":"        String indexLine \u003d \"test0001 | Title | missing.txt | 2024-01-15T10:30:00Z | \" +","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JianHao24"},"content":"                \"2024-01-15T10:30:00Z | 0 | 0 |  |  | \";","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(indexPath, indexLine);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JianHao24"},"content":"        ArrayList\u003cNote\u003e loaded \u003d serializer.loadNotes(indexPath, notesDir);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JianHao24"},"content":"        assertEquals(1, loaded.size());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"\", loaded.get(0).getBody());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"Title\", loaded.get(0).getTitle());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JianHao24"},"content":"    void testLoadNotes_missingIndexFile() {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JianHao24"},"content":"        Path nonExistent \u003d tempDir.resolve(\"nonexistent.txt\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JianHao24"},"content":"        ArrayList\u003cNote\u003e loaded \u003d serializer.loadNotes(nonExistent, notesDir);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JianHao24"},"content":"        assertTrue(loaded.isEmpty());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JianHao24"},"content":"    void testLoadNotes_corruptedLine() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JianHao24"},"content":"        String corruptedLine \u003d \"invalid | data | format\";","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(indexPath, corruptedLine);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JianHao24"},"content":"        ArrayList\u003cNote\u003e loaded \u003d serializer.loadNotes(indexPath, notesDir);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JianHao24"},"content":"        assertTrue(loaded.isEmpty());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JianHao24"},"content":"    void testLoadNotes_blankLines() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JianHao24"},"content":"        Instant now \u003d Instant.parse(\"2024-01-15T10:30:00Z\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JianHao24"},"content":"        String validLine \u003d String.format(\"blank001 | Title | test.txt | %s | %s | 0 | 0 |  |  | \",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JianHao24"},"content":"                now, now);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(indexPath, \"\\n\" + validLine + \"\\n\\n\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(notesDir.resolve(\"test.txt\"), \"Body\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JianHao24"},"content":"        ArrayList\u003cNote\u003e loaded \u003d serializer.loadNotes(indexPath, notesDir);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JianHao24"},"content":"        assertEquals(1, loaded.size());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JianHao24"},"content":"    void testGetExpectedFilenames() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JianHao24"},"content":"        Instant now \u003d Instant.parse(\"2024-01-15T10:30:00Z\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JianHao24"},"content":"        String line1 \u003d String.format(\"file0001 | Note1 | file1.txt | %s | %s | 0 | 0 |  |  | \", now, now);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JianHao24"},"content":"        String line2 \u003d String.format(\"file0002 | Note2 | file2.txt | %s | %s | 0 | 0 |  |  | \", now, now);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(indexPath, line1 + \"\\n\" + line2);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JianHao24"},"content":"        List\u003cString\u003e filenames \u003d serializer.getExpectedFilenames(indexPath);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JianHao24"},"content":"        assertEquals(2, filenames.size());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JianHao24"},"content":"        assertTrue(filenames.contains(\"file1.txt\"));","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JianHao24"},"content":"        assertTrue(filenames.contains(\"file2.txt\"));","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JianHao24"},"content":"    void testGetExpectedFilenames_missingIndexFile() {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JianHao24"},"content":"        Path nonExistent \u003d tempDir.resolve(\"nonexistent.txt\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"JianHao24"},"content":"        List\u003cString\u003e filenames \u003d serializer.getExpectedFilenames(nonExistent);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"JianHao24"},"content":"        assertTrue(filenames.isEmpty());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JianHao24"},"content":"    void testSaveNotes_emptyList() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JianHao24"},"content":"        serializer.saveNotes(new ArrayList\u003c\u003e(), indexPath);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JianHao24"},"content":"        assertTrue(Files.exists(indexPath));","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JianHao24"},"content":"        assertEquals(0, Files.readAllLines(indexPath).size());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JianHao24"},"content":"    void testSaveAndLoad_specialCharacters() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JianHao24"},"content":"        Instant now \u003d Instant.parse(\"2024-01-15T10:30:00Z\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JianHao24"},"content":"        // Use safe special characters that don\u0027t conflict with serialization format","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"JianHao24"},"content":"        Note note \u003d new Note(\"special1\", \"Title with $pecial @chars!\", \"special.txt\",","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JianHao24"},"content":"                \"Body with \\n newlines \\t tabs\", now, now,","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JianHao24"},"content":"                false, false, null, new ArrayList\u003c\u003e(), Arrays.asList(\"tag-1\", \"tag_2\"));","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(notesDir.resolve(\"special.txt\"), \"Body with \\n newlines \\t tabs\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"JianHao24"},"content":"        serializer.saveNotes(Arrays.asList(note), indexPath);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"JianHao24"},"content":"        ArrayList\u003cNote\u003e loaded \u003d serializer.loadNotes(indexPath, notesDir);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"JianHao24"},"content":"        assertEquals(1, loaded.size());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"Title with $pecial @chars!\", loaded.get(0).getTitle());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"JianHao24"},"content":"        assertEquals(Arrays.asList(\"tag-1\", \"tag_2\"), loaded.get(0).getTags());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"JianHao24"},"content":"    void testLoadNotes_emptyFields() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"JianHao24"},"content":"        Instant now \u003d Instant.parse(\"2024-01-15T10:30:00Z\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"JianHao24"},"content":"        String line \u003d String.format(\"empty001 |  | empty.txt | %s | %s | 0 | 0 |  |  | \", now, now);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(indexPath, line);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(notesDir.resolve(\"empty.txt\"), \"\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"JianHao24"},"content":"        ArrayList\u003cNote\u003e loaded \u003d serializer.loadNotes(indexPath, notesDir);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"JianHao24"},"content":"        assertEquals(1, loaded.size());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"JianHao24"},"content":"        assertEquals(\"\", loaded.get(0).getTitle());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"JianHao24"},"content":"        assertTrue(loaded.get(0).getTags().isEmpty());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"JianHao24"},"content":"        assertTrue(loaded.get(0).getLogs().isEmpty());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"JianHao24"},"content":"    void testLoadNotes_withEmptyLists() throws IOException {","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"JianHao24"},"content":"        Instant now \u003d Instant.parse(\"2024-01-15T10:30:00Z\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"JianHao24"},"content":"        // Test with both empty logs and tags (empty strings in those positions)","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"JianHao24"},"content":"        String line \u003d String.format(\"empty002 | Title | test.txt | %s | %s | 0 | 0 |  |  | \", now, now);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(indexPath, line);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"JianHao24"},"content":"        Files.writeString(notesDir.resolve(\"test.txt\"), \"Body\");","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"JianHao24"},"content":"        ArrayList\u003cNote\u003e loaded \u003d serializer.loadNotes(indexPath, notesDir);","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"JianHao24"},"content":"        assertEquals(1, loaded.size());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"JianHao24"},"content":"        assertTrue(loaded.get(0).getLogs().isEmpty());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"JianHao24"},"content":"        assertTrue(loaded.get(0).getTags().isEmpty());","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-29T00:30:33","isFullCredit":false}],"authorContributionMap":{"JianHao24":247}},{"path":"src/test/java/seedu/zettel/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JianHao24"},"content":"package seedu.zettel.storage;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-20T03:44:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gordonajajar"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-20T03:44:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-20T03:44:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T03:44:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gordonajajar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":"import java.util.List;","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-24T03:57:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"public class StorageTest {","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"    @TempDir","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gordonajajar"},"content":"    private Path tempDir;","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    void setup() {","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"    void testInitCreatesRootFolderAndConfig() throws IOException {","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"        Path configPath \u003d tempDir.resolve(\".zettelConfig\");","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"        Path defaultRepoNotes \u003d tempDir.resolve(\"main\").resolve(\"notes\");","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"        Path defaultRepoArchive \u003d tempDir.resolve(\"main\").resolve(\"archive\");","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gordonajajar"},"content":"        Path defaultIndexFile \u003d tempDir.resolve(\"main\").resolve(\"index.txt\");","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"        assertFalse(Files.exists(configPath));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"        assertFalse(Files.exists(defaultRepoNotes));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"        assertFalse(Files.exists(defaultRepoArchive));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"        storage.init();","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"        assertTrue(Files.exists(configPath));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gordonajajar"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(configPath);","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"main\", lines.get(0));","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"main\", lines.get(1));","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"        assertTrue(Files.exists(defaultRepoNotes));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"        assertTrue(Files.exists(defaultRepoArchive));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(Files.exists(defaultIndexFile));","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gordonajajar"},"content":"    void testCreateRepo() throws IOException {","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gordonajajar"},"content":"        // should create new repo structure, and update config","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gordonajajar"},"content":"        String repoName \u003d \"newRepo\";","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gordonajajar"},"content":"        Path repoNotes \u003d tempDir.resolve(repoName).resolve(\"notes\");","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gordonajajar"},"content":"        Path repoArchive \u003d tempDir.resolve(repoName).resolve(\"archive\");","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"        Path indexFile \u003d tempDir.resolve(repoName).resolve(\"index.txt\");","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"        storage.createRepo(repoName);","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(Files.exists(repoNotes));","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(Files.exists(repoArchive));","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"        assertTrue(Files.exists(indexFile));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gordonajajar"},"content":"        Path configFile \u003d tempDir.resolve(\".zettelConfig\");","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gordonajajar"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(configFile);","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(lines.get(0).contains(repoName));","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gordonajajar"},"content":"    void testCreateStorageFileWritesNoteBody() throws IOException {","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gordonajajar"},"content":"        storage.init();","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gordonajajar"},"content":"        Note note \u003d new Note(","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"gordonajajar"},"content":"                \"88888888\",","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"gordonajajar"},"content":"                \"title\",","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"gordonajajar"},"content":"                \"title.txt\",","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"gordonajajar"},"content":"                \"Hello World\",","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"gordonajajar"},"content":"                Instant.now(),","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"gordonajajar"},"content":"                Instant.now(),","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gordonajajar"},"content":"                false,","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"gordonajajar"},"content":"                false,","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"gordonajajar"},"content":"                null,","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"                new ArrayList\u003c\u003e(),","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"gordonajajar"},"content":"                new ArrayList\u003c\u003e()","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"gordonajajar"},"content":"        );","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gordonajajar"},"content":"        storage.createStorageFile(note);","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gordonajajar"},"content":"        Path noteFile \u003d tempDir.resolve(\"main\").resolve(\"notes\").resolve(\"title.txt\");","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(Files.exists(noteFile));","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"Hello World\", Files.readString(noteFile));","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"gordonajajar"},"content":"    void testSaveAndLoadNotesWorks() {","lastModifiedDate":"2025-10-20T03:44:30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gordonajajar"},"content":"        storage.init();","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"gordonajajar"},"content":"        Note note1 \u003d new Note(\"88888889\", \"Title1\", \"Title1.txt\", \"Body1\",","lastModifiedDate":"2025-10-20T03:44:30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shauntsr"},"content":"                Instant.now(), Instant.now(), false, false, null, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gordonajajar"},"content":"        Note note2 \u003d new Note(\"99999999\", \"Title2\", \"Title2.txt\", \"Body2\",","lastModifiedDate":"2025-10-20T03:44:30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shauntsr"},"content":"                Instant.now(), Instant.now(), true, false, null, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-10-26T02:41:19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"gordonajajar"},"content":"        List\u003cNote\u003e notes \u003d List.of(note1, note2);","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"gordonajajar"},"content":"        storage.createStorageFile(note1);","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"gordonajajar"},"content":"        storage.createStorageFile(note2);","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T03:16:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"gordonajajar"},"content":"        storage.save(notes);","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"gordonajajar"},"content":"        ArrayList\u003cNote\u003e loadedNotes \u003d storage.load();","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(2, loadedNotes.size());","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"Title1\", loadedNotes.get(0).getTitle());","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"Body1\", loadedNotes.get(0).getBody());","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"Title2\", loadedNotes.get(1).getTitle());","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"Body2\", loadedNotes.get(1).getBody());","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"gordonajajar"},"content":"    void testChangeRepo() {","lastModifiedDate":"2025-10-20T03:44:30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"gordonajajar"},"content":"        // should switch repo and update config","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"gordonajajar"},"content":"        storage.init();","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"gordonajajar"},"content":"        storage.createRepo(\"testRepo\");","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"gordonajajar"},"content":"        storage.changeRepo(\"testRepo\");","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"testRepo\", storage.readCurrRepo());","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"gordonajajar"},"content":"    void testUpdateConfigAppendsNewRepoToConfig() throws IOException, ZettelException {","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gordonajajar"},"content":"        storage.init();","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gordonajajar"},"content":"        storage.updateConfig(\"anotherRepo\");","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gordonajajar"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(tempDir.resolve(\".zettelConfig\"));","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"main\", lines.get(0).trim()); // first line unchanged","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(\"anotherRepo\", lines.get(1).trim()); // second line updated","lastModifiedDate":"2025-10-20T02:31:04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shauntsr"},"content":"    void testUpdateTagsWritesToConfig() throws ZettelException, Exception {","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e tags \u003d List.of(\"urgent\", \"work\", \"personal\");","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shauntsr"},"content":"        storage.updateTags(tags);","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shauntsr"},"content":"        Path configFile \u003d tempDir.resolve(\".zettelConfig\");","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"shauntsr"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(configFile);","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shauntsr"},"content":"        assertTrue(lines.size() \u003e\u003d 3, \"Config should have at least 3 lines\");","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"main\", lines.get(0).trim(), \"First line should remain the default repo list\");","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"main\", lines.get(1).trim(), \"Second line should remain the current repo\");","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"urgent | work | personal\", lines.get(2).trim(), \"Third line should contain tags\");","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-26T05:39:55","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false}],"authorContributionMap":{"gordonajajar":93,"JianHao24":2,"shauntsr":63}},{"path":"src/test/java/seedu/zettel/util/EditorUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.util;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gordonajajar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gordonajajar"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.EditorNotFoundException;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.NoNoteFoundException;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gordonajajar"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":"class EditorUtilTest {","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"    @TempDir","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gordonajajar"},"content":"    void testFileDoesNotExist_throwsNoNoteFoundException() {","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":"        Path nonExistentFile \u003d tempDir.resolve(\"nonexistent.txt\");","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gordonajajar"},"content":"        NoNoteFoundException exception \u003d assertThrows(","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gordonajajar"},"content":"            NoNoteFoundException.class,","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gordonajajar"},"content":"            () -\u003e EditorUtil.openInEditor(nonExistentFile)","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gordonajajar"},"content":"        );","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(exception.getMessage().contains(\"Note does not exist at\"));","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(exception.getMessage().contains(nonExistentFile.toString()));","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gordonajajar"},"content":"    void testNoConsoleAvailable_throwsEditorNotFoundException() throws IOException {","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gordonajajar"},"content":"        Path testFile \u003d tempDir.resolve(\"test.txt\");","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"gordonajajar"},"content":"        Files.writeString(testFile, \"test content\");","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gordonajajar"},"content":"        // When running in JUnit (no console), should throw EditorNotFoundException","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gordonajajar"},"content":"        EditorNotFoundException exception \u003d assertThrows(","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gordonajajar"},"content":"            EditorNotFoundException.class,","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gordonajajar"},"content":"            () -\u003e EditorUtil.openInEditor(testFile)","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gordonajajar"},"content":"        );","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(exception.getMessage().contains(\"No interactive terminal available\"));","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gordonajajar"},"content":"    @Test","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gordonajajar"},"content":"    void testNullPath_throwsNullPointerException() {","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gordonajajar"},"content":"        assertThrows(","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gordonajajar"},"content":"            NullPointerException.class,","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gordonajajar"},"content":"            () -\u003e EditorUtil.openInEditor(null)","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gordonajajar"},"content":"        );","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-29T00:35:27","isFullCredit":false}],"authorContributionMap":{"gordonajajar":56}},{"path":"src/test/java/seedu/zettel/util/IdGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shira421"},"content":"package seedu.zettel.util;","lastModifiedDate":"2025-10-17T11:24:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shira421"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shira421"},"content":" * Unit tests for the IdGenerator class.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shira421"},"content":" * Tests hash-based ID generation functionality.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":"public class IdGeneratorTest {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Generated ID should be exactly 8 characters long\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":"    void testGeneratedIdLength() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(\"test input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"        assertNotNull(id, \"Generated ID should not be null\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"        assertEquals(8, id.length(), \"Generated ID should be 8 characters long\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Generated ID should contain only lowercase hexadecimal characters\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"    void testGeneratedIdFormat() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(\"test input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"        assertTrue(id.matches(\"[a-f0-9]{8}\"),","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"                \"Generated ID should only contain lowercase hex characters (0-9, a-f)\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Same input should generate same ID (deterministic)\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"    void testDeterministicGeneration() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"        String input \u003d \"My Test Note2025-01-01T00:00:00Z\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"        String id1 \u003d IdGenerator.generateId(input);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"        String id2 \u003d IdGenerator.generateId(input);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"        assertEquals(id1, id2, \"Same input should always generate the same ID\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Different inputs should generate different IDs\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"    void testDifferentInputsDifferentIds() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"        String input1 \u003d \"First Note2025-01-01T00:00:00Z\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"        String input2 \u003d \"Second Note2025-01-01T00:00:01Z\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"        String id1 \u003d IdGenerator.generateId(input1);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"        String id2 \u003d IdGenerator.generateId(input2);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"        assertNotEquals(id1, id2, \"Different inputs should generate different IDs\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Empty string input should generate valid ID\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"    void testEmptyStringInput() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(\"\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"        assertNotNull(id, \"ID should not be null even for empty string\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"        assertEquals(8, id.length(), \"ID should be 8 characters even for empty string\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"        assertTrue(id.matches(\"[a-f0-9]{8}\"), \"ID should be valid hex even for empty string\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Very long input should generate valid 8-character ID\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"    void testLongInputGeneratesValidId() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shira421"},"content":"        String longInput \u003d \"This is a very long input string that contains many characters \" +","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shira421"},"content":"                \"and should still generate a valid 8-character hexadecimal ID \" +","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shira421"},"content":"                \"because the hash function will compress it down to the same length\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(longInput);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shira421"},"content":"        assertEquals(8, id.length(), \"ID should still be 8 characters for long input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shira421"},"content":"        assertTrue(id.matches(\"[a-f0-9]{8}\"), \"ID should be valid hex for long input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Special characters in input should generate valid ID\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shira421"},"content":"    void testSpecialCharactersInput() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"        String input \u003d \"Note!@#$%^\u0026*()_+-\u003d[]{}|;\u0027:\\\",./\u003c\u003e?`~\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(input);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"        assertNotNull(id, \"ID should not be null for special characters\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shira421"},"content":"        assertEquals(8, id.length(), \"ID should be 8 characters for special characters\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shira421"},"content":"        assertTrue(id.matches(\"[a-f0-9]{8}\"), \"ID should be valid hex for special characters\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Unicode characters in input should generate valid ID\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shira421"},"content":"    void testUnicodeInput() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shira421"},"content":"        String input \u003d \"Note with 中文字符 and émojis 🎉\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(input);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shira421"},"content":"        assertNotNull(id, \"ID should not be null for Unicode input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shira421"},"content":"        assertEquals(8, id.length(), \"ID should be 8 characters for Unicode input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shira421"},"content":"        assertTrue(id.matches(\"[a-f0-9]{8}\"), \"ID should be valid hex for Unicode input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Similar inputs should generate different IDs\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shira421"},"content":"    void testSimilarInputsDifferentIds() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shira421"},"content":"        String id1 \u003d IdGenerator.generateId(\"test\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shira421"},"content":"        String id2 \u003d IdGenerator.generateId(\"Test\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shira421"},"content":"        String id3 \u003d IdGenerator.generateId(\"test \");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shira421"},"content":"        // These should all be different due to case/whitespace sensitivity","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shira421"},"content":"        assertNotEquals(id1, id2, \"Case difference should produce different IDs\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shira421"},"content":"        assertNotEquals(id1, id3, \"Whitespace difference should produce different IDs\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shira421"},"content":"        assertNotEquals(id2, id3, \"Different inputs should produce different IDs\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shira421"},"content":"}","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false}],"authorContributionMap":{"shira421":110}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"shira421"},"content":"@echo off","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"setlocal enableextensions","lastModifiedDate":"2025-10-22T20:25:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"pushd %~dp0","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":"cd build\\libs","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shira421"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shira421"},"content":") do (","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shira421"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shira421"},"content":")","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T20:19:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2025-10-22T20:19:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gordonajajar"},"content":"REM --- Remove previous test data directory (if exists) ---","lastModifiedDate":"2025-10-22T18:41:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"if exist data (","lastModifiedDate":"2025-10-22T20:19:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"  echo Removing existing test data directory","lastModifiedDate":"2025-10-22T19:27:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"  rd /s /q data","lastModifiedDate":"2025-10-22T20:19:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2025-10-22T18:41:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T18:41:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":"java -jar \"..\\build\\libs\\%jarloc%\" \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-10-22T21:07:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-22T18:41:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"REM Normalize IDs and dates in ACTUAL.TXT","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"REM - Replace 8-char lowercase hex IDs (with # prefix) with #XXXXXXXX","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"REM - Replace 8-char lowercase hex IDs (standalone) with XXXXXXXX","lastModifiedDate":"2025-10-17T07:31:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"REM - Replace dates in format YYYY-MM-DD with XXXX-XX-XX","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gordonajajar"},"content":"powershell -Command \"(Get-Content ACTUAL.TXT) -replace \u0027#[0-9a-f]{8}\u0027, \u0027#XXXXXXXX\u0027 -replace \u0027(?\u003c![0-9a-f#])[0-9a-f]{8}(?![0-9a-f])\u0027, \u0027XXXXXXXX\u0027 -replace \u0027\\d{4}-\\d{2}-\\d{2}\u0027, \u0027XXXX-XX-XX\u0027 | Set-Content ACTUAL-NORMALIZED.TXT\"","lastModifiedDate":"2025-10-22T19:23:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T11:17:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"REM Normalize IDs and dates in EXPECTED.TXT","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"powershell -Command \"(Get-Content EXPECTED.TXT) -replace \u0027#[0-9a-f]{8}\u0027, \u0027#XXXXXXXX\u0027 -replace \u0027(?\u003c![0-9a-f#])[0-9a-f]{8}(?![0-9a-f])\u0027, \u0027XXXXXXXX\u0027 -replace \u0027\\d{4}-\\d{2}-\\d{2}\u0027, \u0027XXXX-XX-XX\u0027 | Set-Content EXPECTED-NORMALIZED.TXT\"","lastModifiedDate":"2025-10-22T19:23:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-15T11:17:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"REM Compare normalized files","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"FC ACTUAL-NORMALIZED.TXT EXPECTED-NORMALIZED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || ECHO Test failed!","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false}],"authorContributionMap":{"gordonajajar":10,"-":8,"shira421":17}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gordonajajar"},"content":"# Remove previous test data directory so tests start clean","lastModifiedDate":"2025-10-22T18:41:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":"if [ -d data ]; then","lastModifiedDate":"2025-10-22T18:41:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":"  echo \"Removing existing test data directory: ./data\"","lastModifiedDate":"2025-10-22T18:41:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":"  rm -rf data","lastModifiedDate":"2025-10-22T18:41:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2025-10-22T18:41:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-22T18:41:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gordonajajar"},"content":"java -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-10-22T21:07:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":"# Normalize ACTUAL.TXT:","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"# 1. Replace 8-char lowercase hex IDs with # prefix: #abcd1234 -\u003e #XXXXXXXX","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"sed -E \u0027s/#[0-9a-f]{8}/#XXXXXXXX/g\u0027 ACTUAL.TXT \u003e ACTUAL-NORMALIZED.TXT","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"# 2. Replace standalone 8-char lowercase hex IDs at end of line or before space","lastModifiedDate":"2025-10-17T07:31:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"sed -E \u0027s/([^0-9a-f#]|^)([0-9a-f]{8})([^0-9a-f]|$)/\\1XXXXXXXX\\3/g\u0027 ACTUAL-NORMALIZED.TXT \u003e ACTUAL-NORMALIZED2.TXT","lastModifiedDate":"2025-10-17T07:31:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"# 3. Normalize dates: YYYY-MM-DD -\u003e XXXX-XX-XX","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"sed -E \u0027s/[0-9]{4}-[0-9]{2}-[0-9]{2}/XXXX-XX-XX/g\u0027 ACTUAL-NORMALIZED2.TXT \u003e ACTUAL-NORMALIZED.TXT","lastModifiedDate":"2025-10-16T14:01:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T11:10:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"# Copy and convert EXPECTED.TXT line endings","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL-NORMALIZED.TXT 2\u003e/dev/null || true","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T11:10:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"# Normalize EXPECTED.TXT:","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"# 1. Replace 8-char lowercase hex IDs with # prefix","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"sed -E \u0027s/#[0-9a-f]{8}/#XXXXXXXX/g\u0027 EXPECTED-UNIX.TXT \u003e EXPECTED-NORMALIZED.TXT","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"# 2. Replace standalone 8-char lowercase hex IDs","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"sed -E \u0027s/([^0-9a-f#]|^)([0-9a-f]{8})([^0-9a-f]|$)/\\1XXXXXXXX\\3/g\u0027 EXPECTED-NORMALIZED.TXT \u003e EXPECTED-NORMALIZED2.TXT","lastModifiedDate":"2025-10-17T07:31:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"# 3. Normalize dates in expected file","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"sed -E \u0027s/[0-9]{4}-[0-9]{2}-[0-9]{2}/XXXX-XX-XX/g\u0027 EXPECTED-NORMALIZED2.TXT \u003e EXPECTED-NORMALIZED.TXT","lastModifiedDate":"2025-10-16T14:01:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T11:10:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"# Compare the normalized files","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"diff EXPECTED-NORMALIZED.TXT ACTUAL-NORMALIZED.TXT","lastModifiedDate":"2025-10-15T11:10:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"gordonajajar":5,"-":23,"shira421":24}}]
