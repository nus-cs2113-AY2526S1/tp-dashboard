[{"path":".github/workflows/gradle.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"name: Java CI","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"on: [push, pull_request]","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"jobs:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  build:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shira421"},"content":"    timeout-minutes: 10","lastModifiedDate":"2025-10-15T10:36:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    strategy:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"      matrix:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"        platform: [ubuntu-latest, macos-latest, windows-latest]","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    runs-on: ${{ matrix.platform }}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    steps:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"      - name: Set up repository","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        uses: actions/checkout@master","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"      - name: Set up repository","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        uses: actions/checkout@master","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        with:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"          ref: master","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"      - name: Merge to master","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        run: git checkout --progress --force ${{ github.sha }}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"      - name: Validate Gradle Wrapper","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        uses: gradle/actions/wrapper-validation@v3","lastModifiedDate":"2025-08-05T01:21:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"      - name: Setup JDK 17","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        uses: actions/setup-java@v4","lastModifiedDate":"2025-08-05T01:21:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        with:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"          distribution: \u0027zulu\u0027","lastModifiedDate":"2025-08-05T01:21:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"          java-version: \u002717\u0027","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"          java-package: jdk+fx","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"      - name: Build and check with Gradle","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        run: ./gradlew check","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"      - name: Install dos2unix on Linux","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        run: sudo apt-get update \u0026\u0026 sudo apt-get install -y dos2unix","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"      - name: Install dos2unix on macOS","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027macOS\u0027","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        run: brew install dos2unix","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"      - name: Perform IO redirection test (*NIX or macOS)","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027 || runner.os \u003d\u003d \u0027macOS\u0027","lastModifiedDate":"2025-08-08T01:39:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        working-directory: ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"        timeout-minutes: 2","lastModifiedDate":"2025-10-15T10:53:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        run: ./runtest.sh","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"      - name: Perform IO redirection test (Windows)","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if: always() \u0026\u0026 runner.os \u003d\u003d \u0027Windows\u0027","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        working-directory: ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"        timeout-minutes: 2","lastModifiedDate":"2025-10-15T10:53:53","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        shell: cmd","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        run: runtest.bat","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false}],"authorContributionMap":{"-":54,"shira421":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17T23:25:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:18:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:18:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"    mainClass.set(\"seedu.zettel.Zettel\")","lastModifiedDate":"2025-10-14T14:45:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gordonajajar"},"content":"    archiveBaseName.set(\"zettel\")","lastModifiedDate":"2025-10-14T14:45:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24T00:28:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29T23:10:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"    jvmArgs \u0027-ea\u0027","lastModifiedDate":"2025-10-15T13:30:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-10-15T13:56:50","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"gordonajajar":2,"shauntsr":1,"danielkwan2004":1,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Daniel Kwan | [Github](https://github.com/danielkwan2004) | [Portfolio](docs/team/danielkwan2004.md)","lastModifiedDate":"2025-10-01T13:39:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Venkatesh Ksheerabthi Nathan | [Github](https://github.com/shira421) | [Portfolio](docs/team/shira421.md)","lastModifiedDate":"2025-10-01T13:33:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jian Hao | [Github] https://github.com/JianHao24 | [Portfolio](docs/team/JianHao24.md)","lastModifiedDate":"2025-10-01T13:25:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Gordon Hong | [Github](https://github.com/gordonajajar) | [Portfolio](docs/team/gordonajajar.md)","lastModifiedDate":"2025-10-01T13:51:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Shaun Tan | [Github](https://github.com/shauntsr) | [Portfolio](docs/team/shauntsr.md)","lastModifiedDate":"2025-10-01T13:51:07","isFullCredit":false}],"authorContributionMap":{"JianHao24":1,"danielkwan2004":1,"-":4,"shira421":3}},{"path":"docs/team/JianHao24.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JianHao24"},"content":"# Jian Hao - Project Portfolio Page","lastModifiedDate":"2025-10-01T13:25:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T13:25:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T13:25:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T13:25:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T13:25:22","isFullCredit":false}],"authorContributionMap":{"JianHao24":5,"-":5}},{"path":"docs/team/danielkwan2004.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"\\# Hi","lastModifiedDate":"2025-10-01T13:25:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-01T13:25:16","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":2}},{"path":"docs/team/gordonajajar.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"# Gordon - Project Portfolio Page","lastModifiedDate":"2025-10-01T13:17:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"-":5}},{"path":"docs/team/shauntsr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"# Shaun - Project Portfolio Page","lastModifiedDate":"2025-10-01T13:33:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"-":5}},{"path":"src/main/java/seedu/zettel/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T14:25:53","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shira421"},"content":"import java.time.ZoneId;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shira421"},"content":"import java.util.List;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:25:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shira421"},"content":" * Represents a note in the Zettel system.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shira421"},"content":" * Each note has a unique 8-character hash-based ID, title, body, and metadata.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":"public class Note {","lastModifiedDate":"2025-10-14T14:25:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":"    // Date formatter for toString method","lastModifiedDate":"2025-10-14T17:50:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d","lastModifiedDate":"2025-10-14T17:50:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\").withZone(ZoneId.systemDefault());","lastModifiedDate":"2025-10-14T17:50:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:50:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":"    // ID length constant - all note IDs must be exactly 8 characters","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":"    private static final int ID_LENGTH \u003d 8;","lastModifiedDate":"2025-10-16T14:35:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-16T14:35:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"    // Static counter for tracking total notes created","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gordonajajar"},"content":"    private static int numberOfNotes \u003d 0;","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"    // Instance fields","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"    private final String id; // 8-character hash-based unique identifier","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"    private String title; // Title of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"    private String filename; // Actual filename on disk","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"    private String body; // Body content of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"    private Instant createdAt; // Timestamp when the note was created","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"    private Instant modifiedAt; // Timestamp when the note was last modified","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"    private boolean pinned; // Whether the note is pinned","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"    private boolean archived; // Whether the note has been archived","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"    private String archiveName; // Name of the archive the note belongs to","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"    private List\u003cString\u003e logs; // History/log data of that individual note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"     * Constructor for creating a new note by the user.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"     * Initializes with default values for pinned, archived, and logs.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"     * @param id The unique 8-character hash-based ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"     * @param title The title of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"     * @param filename The filename for storage on disk","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"     * @param body The body content of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"     * @param createdAt The timestamp when the note was created","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"     * @param modifiedAt The timestamp when the note was last modified","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"    public Note(String id, String title, String filename, String body,","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"                Instant createdAt, Instant modifiedAt) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"        this.body \u003d body;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"        this.createdAt \u003d createdAt;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"        this.modifiedAt \u003d modifiedAt;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"        this.pinned \u003d false;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"        this.archived \u003d false;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"        this.archiveName \u003d null;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"        this.logs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gordonajajar"},"content":"        numberOfNotes++;","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"     * Constructor with all fields for loading a note from storage.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"     * Validates that the ID is exactly 8 characters long.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"     * @param id The unique 8-character hash-based ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shira421"},"content":"     * @param title The title of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shira421"},"content":"     * @param filename The filename for storage on disk","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shira421"},"content":"     * @param body The body content of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shira421"},"content":"     * @param createdAt The timestamp when the note was created","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shira421"},"content":"     * @param modifiedAt The timestamp when the note was last modified","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shira421"},"content":"     * @param pinned Whether the note is pinned","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shira421"},"content":"     * @param archived Whether the note is archived","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shira421"},"content":"     * @param archiveName The archive name if archived, null otherwise","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shira421"},"content":"     * @param logs The list of log entries for this note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shira421"},"content":"    public Note(String id, String title, String filename, String body,","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shira421"},"content":"                Instant createdAt, Instant modifiedAt, boolean pinned,","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"                boolean archived, String archiveName, List\u003cString\u003e logs) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"        assert id.length() \u003d\u003d ID_LENGTH : \"Note ID must be \" + ID_LENGTH + \" characters long\";","lastModifiedDate":"2025-10-16T14:35:56","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shira421"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shira421"},"content":"        this.body \u003d body;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shira421"},"content":"        this.createdAt \u003d createdAt;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shira421"},"content":"        this.modifiedAt \u003d modifiedAt;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shira421"},"content":"        this.pinned \u003d pinned;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shira421"},"content":"        this.archived \u003d archived;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shira421"},"content":"        this.archiveName \u003d archiveName;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shira421"},"content":"        this.logs \u003d logs !\u003d null ? new ArrayList\u003c\u003e(logs) : new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gordonajajar"},"content":"        numberOfNotes++;","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shira421"},"content":"    // Getters","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shira421"},"content":"     * Gets the unique 8-character ID of this note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shira421"},"content":"     * @return The note ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shira421"},"content":"    public String getId() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shira421"},"content":"        return id;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shira421"},"content":"     * Gets the title of this note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shira421"},"content":"     * @return The note title","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shira421"},"content":"    public String getTitle() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shira421"},"content":"        return title;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shira421"},"content":"     * Gets the filename used for storing this note on disk.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shira421"},"content":"     * @return The filename","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shira421"},"content":"    public String getFilename() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shira421"},"content":"        return filename;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shira421"},"content":"     * Gets the body content of this note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shira421"},"content":"     * @return The note body","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shira421"},"content":"    public String getBody() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shira421"},"content":"        return body;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shira421"},"content":"     * Gets the timestamp when this note was created.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shira421"},"content":"     * @return The creation timestamp","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shira421"},"content":"    public Instant getCreatedAt() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shira421"},"content":"        return createdAt;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shira421"},"content":"     * Gets the timestamp when this note was last modified.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shira421"},"content":"     * @return The last modification timestamp","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shira421"},"content":"    public Instant getModifiedAt() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shira421"},"content":"        return modifiedAt;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"shira421"},"content":"     * Checks if this note is pinned.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shira421"},"content":"     * @return true if pinned, false otherwise","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"shira421"},"content":"    public boolean isPinned() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shira421"},"content":"        return pinned;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"shira421"},"content":"     * Checks if this note is archived.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"shira421"},"content":"     * @return true if archived, false otherwise","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"shira421"},"content":"    public boolean isArchived() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"shira421"},"content":"        return archived;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"shira421"},"content":"     * Gets the archive name if this note is archived.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"shira421"},"content":"     * @return The archive name, or null if not archived","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"shira421"},"content":"    public String getArchiveName() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"shira421"},"content":"        return archiveName;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"shira421"},"content":"     * Gets a defensive copy of the logs list for this note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"shira421"},"content":"     * @return A new ArrayList containing the log entries","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"shira421"},"content":"    public List\u003cString\u003e getLogs() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"shira421"},"content":"        return new ArrayList\u003c\u003e(logs); // Return copy to maintain encapsulation","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"shira421"},"content":"     * Gets the total number of notes created since the application started.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"shira421"},"content":"     * @return The total number of notes","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"shira421"},"content":"    public static int getNumberOfNotes() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"gordonajajar"},"content":"        return numberOfNotes;","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"shira421"},"content":"    // Setters","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"shira421"},"content":"     * Sets a new title for this note and updates the modified timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"shira421"},"content":"     * @param title The new title","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"shira421"},"content":"    public void setTitle(String title) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"shira421"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"danielkwan2004"},"content":"        updateModifiedAt();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"shira421"},"content":"     * Sets a new filename for this note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"shira421"},"content":"     * Does not update the modified timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"shira421"},"content":"     * @param filename The new filename","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"shira421"},"content":"    public void setFilename(String filename) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"shira421"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"shira421"},"content":"     * Sets new body content for this note and updates the modified timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"shira421"},"content":"     * @param body The new body content","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"shira421"},"content":"    public void setBody(String body) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"shira421"},"content":"        this.body \u003d body;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"danielkwan2004"},"content":"        updateModifiedAt();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"shira421"},"content":"     * Sets the pinned status of this note and updates the modified timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"shira421"},"content":"     * @param pinned true to pin the note, false to unpin","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"shira421"},"content":"    public void setPinned(boolean pinned) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"shira421"},"content":"        this.pinned \u003d pinned;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"danielkwan2004"},"content":"        updateModifiedAt();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"shira421"},"content":"     * Sets the archived status of this note and updates the modified timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"shira421"},"content":"     * @param archived true to archive the note, false to unarchive","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"shira421"},"content":"    public void setArchived(boolean archived) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"shira421"},"content":"        this.archived \u003d archived;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"danielkwan2004"},"content":"        updateModifiedAt();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"shira421"},"content":"     * Sets the archive name for this note and updates the modified timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"shira421"},"content":"     * @param archiveName The name of the archive","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"shira421"},"content":"    public void setArchiveName(String archiveName) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"shira421"},"content":"        this.archiveName \u003d archiveName;","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"danielkwan2004"},"content":"        updateModifiedAt();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"shira421"},"content":"     * Replaces the entire logs list with a new list.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"shira421"},"content":"     * @param logs The new list of log entries, or null for an empty list","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"shira421"},"content":"    public void setLogs(List\u003cString\u003e logs) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"shira421"},"content":"        this.logs \u003d logs !\u003d null ? new ArrayList\u003c\u003e(logs) : new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"shira421"},"content":"     * Adds a single log entry to this note\u0027s history.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"shira421"},"content":"     * @param logEntry The log entry to add","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"shira421"},"content":"    public void addLog(String logEntry) {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"shira421"},"content":"        this.logs.add(logEntry);","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"shira421"},"content":"     * Updates the modifiedAt timestamp to the current time.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"shira421"},"content":"     * Called automatically by setters that modify note content.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"danielkwan2004"},"content":"    public void updateModifiedAt() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"shira421"},"content":"        this.modifiedAt \u003d Instant.now();","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"shira421"},"content":"     * Returns a formatted string representation of the note for display in lists.","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"shira421"},"content":"     * Format: FILENAME yyyy-MM-dd NOTEID","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"shira421"},"content":"     * Example: my_note.txt 2025-10-14 a1b2c3d4","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"shira421"},"content":"     * @return Formatted string with filename, creation date, and note ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"shira421"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"shira421"},"content":"    public String toString() {","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"shira421"},"content":"        String formattedDate \u003d DATE_FORMATTER.format(createdAt);","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"shira421"},"content":"        return String.format(\"%s %s %s\", filename, formattedDate, id);","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:47","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:25:53","isFullCredit":false}],"authorContributionMap":{"gordonajajar":8,"danielkwan2004":6,"shira421":281}},{"path":"src/main/java/seedu/zettel/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T14:13:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.Command;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.DeleteNoteCommand;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.ExitCommand;","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.FindNoteCommand;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.InitCommand;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.ListNoteCommand;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.NewNoteCommand;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.PinNoteCommand;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.EmptyDescriptionException;","lastModifiedDate":"2025-10-14T23:56:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidFormatException;","lastModifiedDate":"2025-10-14T23:56:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-14T23:56:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:56:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":" * Parses user input and returns the corresponding Command object.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":" * Validates input format and throws appropriate exceptions for invalid input.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JianHao24"},"content":"public class Parser {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"    // Error message constants","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JianHao24"},"content":"    private static final String LIST_FORMAT \u003d \"List format should be: list [-p]\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JianHao24"},"content":"    private static final String PIN_FORMAT \u003d \"Pin format should be: pin/unpin \u003cNOTE_ID\u003e\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JianHao24"},"content":"    private static final String DELETE_FORMAT \u003d \"Delete format should be: delete [-f] \u003cNOTE_ID\u003e\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JianHao24"},"content":"    private static final String NOTE_FORMAT \u003d \"New note format should be: new -t \u003cTITLE\u003e [-b \u003cBODY\u003e]\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JianHao24"},"content":"    private static final String NOTE_EMPTY \u003d \"Note title cannot be empty!\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"    private static final String ID_EMPTY \u003d \"Please specify a Note ID to \";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"    private static final String ID_INVALID \u003d \"Note ID must be exactly 8 hexadecimal characters (0-9, a-f)\";","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JianHao24"},"content":"    private static final String INIT_EMPTY \u003d \"Please specify a repo name!\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":"    private static final String INIT_INVALID \u003d","lastModifiedDate":"2025-10-16T22:02:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"            \"Repo name can only contain alphanumeric characters, hyphens and underscores.\";","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"    // Note ID validation constants","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"    private static final int VALID_NOTE_ID_LENGTH \u003d 8;","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"    private static final String VALID_NOTE_ID_REGEX \u003d \"^[a-f0-9]{\" + VALID_NOTE_ID_LENGTH + \"}$\";","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"    private static final String INVALID_ID_LENGTH_FORMAT \u003d","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"            \"Note ID must be exactly \" + VALID_NOTE_ID_LENGTH + \" characters long.\";","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"     * Parses the user command string and returns the appropriate Command object.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"     * @param userCommand The raw command string from the user","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"     * @return The corresponding Command object","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If the command format is invalid","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JianHao24"},"content":"    public static Command parse(String userCommand) throws ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"        String[] inputs \u003d userCommand.trim().split(\" \");","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JianHao24"},"content":"        String command \u003d inputs[0].toLowerCase();","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JianHao24"},"content":"        return switch (command) {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JianHao24"},"content":"        case \"bye\" -\u003e new ExitCommand();","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JianHao24"},"content":"        case \"list\" -\u003e parseListNoteCommand(userCommand);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JianHao24"},"content":"        case \"new\" -\u003e parseNewNoteCommand(userCommand);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JianHao24"},"content":"        case \"delete\" -\u003e parseDeleteNoteCommand(inputs);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JianHao24"},"content":"        case \"pin\" -\u003e parsePinNoteCommand(inputs, true);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JianHao24"},"content":"        case \"unpin\" -\u003e parsePinNoteCommand(inputs, false);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JianHao24"},"content":"        case \"init\" -\u003e parseInitCommand(userCommand);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JianHao24"},"content":"        case \"find\" -\u003e parseFindNoteCommand(userCommand);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JianHao24"},"content":"        default -\u003e throw new InvalidInputException(command);","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JianHao24"},"content":"        };","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"     * Parses the list command, which can optionally include the -p flag for pinned notes.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"     * @param input The full command string","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"     * @return A ListNoteCommand with the appropriate filter","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If the format is invalid","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JianHao24"},"content":"    private static Command parseListNoteCommand(String input) throws ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JianHao24"},"content":"        String content \u003d input.substring(4).trim();","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"        if (content.isEmpty()) {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JianHao24"},"content":"            return new ListNoteCommand(false);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"gordonajajar"},"content":"        } else if (!content.equals(\"-p\")) {","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JianHao24"},"content":"            throw new InvalidFormatException(LIST_FORMAT);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JianHao24"},"content":"        return new ListNoteCommand(true);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"     * Parses the init command for creating a new repository.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"     * @param input The full command string","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shira421"},"content":"     * @return An InitCommand with the repository name","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If the repo name is empty or invalid","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JianHao24"},"content":"    private static Command parseInitCommand(String input) throws ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JianHao24"},"content":"        String content \u003d input.substring(4).trim();","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JianHao24"},"content":"        if (content.isEmpty()) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JianHao24"},"content":"            throw new EmptyDescriptionException(INIT_EMPTY);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:30:38","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shira421"},"content":"        // Validate input - only alphanumeric, hyphens, and underscores","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"        if (!content.matches(\"[a-zA-Z0-9_-]+\")) {","lastModifiedDate":"2025-10-16T17:30:38","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JianHao24"},"content":"            throw new InvalidInputException(INIT_INVALID);","lastModifiedDate":"2025-10-16T21:21:17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-16T17:30:38","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JianHao24"},"content":"        return new InitCommand(content);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shira421"},"content":"     * Parses the new note command with title and optional body.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shira421"},"content":"     * @param input The full command string","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shira421"},"content":"     * @return A NewNoteCommand with the title and body","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If the format is invalid or title is empty","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JianHao24"},"content":"    private static Command parseNewNoteCommand(String input) throws ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JianHao24"},"content":"            String content \u003d input.substring(3).trim();","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JianHao24"},"content":"            int titleIndex \u003d content.indexOf(\"-t\");","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JianHao24"},"content":"            int bodyIndex \u003d content.indexOf(\"-b\");","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JianHao24"},"content":"            if (titleIndex \u003d\u003d -1) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JianHao24"},"content":"                throw new InvalidFormatException(NOTE_FORMAT);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JianHao24"},"content":"            String title;","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JianHao24"},"content":"            String body \u003d \"\";","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JianHao24"},"content":"            if (bodyIndex !\u003d -1) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JianHao24"},"content":"                title \u003d content.substring(titleIndex + 2, bodyIndex).trim();","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JianHao24"},"content":"                body \u003d content.substring(bodyIndex + 2).trim();","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JianHao24"},"content":"            } else {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JianHao24"},"content":"                title \u003d content.substring(titleIndex + 2).trim();","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JianHao24"},"content":"            if (title.isEmpty()) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JianHao24"},"content":"                throw new EmptyDescriptionException(NOTE_EMPTY);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JianHao24"},"content":"            return new NewNoteCommand(title, body);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JianHao24"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JianHao24"},"content":"            throw new InvalidFormatException(NOTE_FORMAT);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shira421"},"content":"     * Parses the find command for searching notes.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"shira421"},"content":"     * @param input The full command string","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shira421"},"content":"     * @return A FindNoteCommand with the search query","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If the search query is empty","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JianHao24"},"content":"    private static Command parseFindNoteCommand(String input) throws ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JianHao24"},"content":"        String content \u003d input.substring(4).trim();","lastModifiedDate":"2025-10-01T00:40:08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JianHao24"},"content":"        if (content.isEmpty()) {","lastModifiedDate":"2025-10-01T00:40:08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JianHao24"},"content":"            throw new EmptyDescriptionException(\"Search cannot be empty!\");","lastModifiedDate":"2025-10-01T00:40:08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-01T00:40:08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JianHao24"},"content":"        return new FindNoteCommand(content);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-01T00:40:08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T00:40:08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shira421"},"content":"     * Parses the pin/unpin command.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"shira421"},"content":"     * @param inputs The command split into tokens","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shira421"},"content":"     * @param isPin true for pin command, false for unpin","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"shira421"},"content":"     * @return A PinNoteCommand with the note ID and pin status","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If the format is invalid or note ID is missing","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JianHao24"},"content":"    private static Command parsePinNoteCommand(String[] inputs, boolean isPin) throws ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JianHao24"},"content":"        if (inputs.length \u003e 2) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JianHao24"},"content":"            throw new InvalidFormatException(PIN_FORMAT);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"danielkwan2004"},"content":"        String noteId \u003d parseNoteID(inputs, \"pin/unpin\");","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"danielkwan2004"},"content":"        return new PinNoteCommand(noteId, isPin);","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"shira421"},"content":"     * Parses the delete command, which can optionally include the -f flag for force delete.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"shira421"},"content":"     * @param inputs The command split into tokens","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"shira421"},"content":"     * @return A DeleteNoteCommand with the note ID and force flag","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If the format is invalid or note ID is missing","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JianHao24"},"content":"    private static Command parseDeleteNoteCommand(String[] inputs) throws ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JianHao24"},"content":"        boolean forceDelete \u003d false;","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JianHao24"},"content":"        if (inputs.length \u003e 3) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JianHao24"},"content":"            throw new InvalidFormatException(DELETE_FORMAT);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"gordonajajar"},"content":"        } else if (inputs.length \u003d\u003d 3) {","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JianHao24"},"content":"            if (!inputs[1].equals(\"-f\")) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JianHao24"},"content":"                throw new InvalidInputException(DELETE_FORMAT);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"JianHao24"},"content":"            forceDelete \u003d true;","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"danielkwan2004"},"content":"        String noteId \u003d parseNoteID(inputs, \"delete\");","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"danielkwan2004"},"content":"        return new DeleteNoteCommand(noteId, forceDelete);","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"shira421"},"content":"     * Extracts and validates a note ID from command inputs.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"shira421"},"content":"     * Note IDs must be exactly 8 lowercase hexadecimal characters (0-9, a-f).","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"shira421"},"content":"     * @param inputs The command split into tokens","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"shira421"},"content":"     * @param actionName The name of the action for error messages","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"shira421"},"content":"     * @return The validated note ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If the note ID is missing or invalid","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"gordonajajar"},"content":"    private static String parseNoteID(String[] inputs, String actionName) throws ZettelException {","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JianHao24"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JianHao24"},"content":"            throw new EmptyDescriptionException(ID_EMPTY + actionName + \"!\");","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"JianHao24"},"content":"        String idString \u003d inputs[inputs.length - 1].trim();","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JianHao24"},"content":"        assert !idString.isEmpty() : \"ID string should not be empty after trim\";","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"shira421"},"content":"        // Validate noteId format - must be exactly 8 lowercase hex characters","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"danielkwan2004"},"content":"        if (!idString.matches(VALID_NOTE_ID_REGEX)) {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(ID_INVALID);","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"danielkwan2004"},"content":"        if (idString.length() !\u003d VALID_NOTE_ID_LENGTH) {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(INVALID_ID_LENGTH_FORMAT);","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"gordonajajar"},"content":"        return idString;","lastModifiedDate":"2025-10-14T21:21:49","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false}],"authorContributionMap":{"gordonajajar":5,"JianHao24":116,"shauntsr":3,"danielkwan2004":19,"shira421":74}},{"path":"src/main/java/seedu/zettel/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T14:13:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-19T00:32:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JianHao24"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"import java.util.List;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"import java.util.Objects;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"public class Storage {","lastModifiedDate":"2025-09-19T00:32:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"    static final String CONFIG_FILE \u003d \".zettelConfig\";","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"    // Folder and file names for the repos","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"    static final String DEFAULT_REPO \u003d \"main\";","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"    static final String REPO_NOTES \u003d \"notes\";","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"    static final String REPO_ARCHIVE \u003d \"archive\";","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"    static final String REPO_INDEX \u003d \"index.txt\";","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"    static final String STORAGE_FILE \u003d \"zettel.txt\"; // Placeholder until we migrate","lastModifiedDate":"2025-10-16T16:21:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"    private final Path rootPath; // Root directory path","lastModifiedDate":"2025-10-16T16:21:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"    private String repoName \u003d DEFAULT_REPO;","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"     * Creates a Storage instance with the specified root directory.","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"     * @param rootPath The root directory for storage.","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"    public Storage(String rootPath) {","lastModifiedDate":"2025-10-16T16:26:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"        this.rootPath \u003d Paths.get(rootPath);","lastModifiedDate":"2025-10-16T16:26:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"     * Initializes the storage by creating the root folder, config file,","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"     * default repository, and default storage file.","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"    public void init() {","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"        createRootFolder();","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"        createConfigFile();","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"        // Initialise default repo if doesn\u0027t exist","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"        Path defaultRepoPath \u003d rootPath.resolve(DEFAULT_REPO);","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"        if (Files.notExists(defaultRepoPath)) {","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"            createRepo(DEFAULT_REPO);","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"        // Can remove this portion after we use a folder of notes","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"        createStorageFile(defaultRepoPath);","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"    private void createRootFolder() {","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"            if (Files.notExists(rootPath)) {","lastModifiedDate":"2025-10-16T16:21:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"                Files.createDirectories(rootPath);","lastModifiedDate":"2025-10-16T16:21:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"            }","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"Error creating \" + rootPath + \" folder.\");","lastModifiedDate":"2025-10-16T16:21:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"    private static void createStorageFile(Path defaultRepoPath) {","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"        Path filePath \u003d defaultRepoPath.resolve(REPO_NOTES).resolve(STORAGE_FILE);","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"        try {","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"            if (Files.notExists(filePath)) {","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"            }","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"Error creating \" + filePath + \".\");","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"    private void createConfigFile() {","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"        Path configPath \u003d rootPath.resolve(CONFIG_FILE);","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"        try {","lastModifiedDate":"2025-10-16T16:21:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"            if (Files.notExists(configPath)) {","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"                Files.createFile(configPath);","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"                Files.writeString(configPath, DEFAULT_REPO);","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"            }","lastModifiedDate":"2025-10-16T16:21:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-16T16:21:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"Error creating \" + CONFIG_FILE + \".\");","lastModifiedDate":"2025-10-16T17:38:17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-16T16:21:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"     * Loads all notes from the current repository.","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"     * @return An ArrayList of Note objects; empty list if loading fails.","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"    public ArrayList\u003cNote\u003e load() {","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"        Path repoPath \u003d rootPath.resolve(repoName);","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shauntsr"},"content":"        Path filePath \u003d repoPath.resolve(REPO_NOTES).resolve(STORAGE_FILE);","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shauntsr"},"content":"        try {","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JianHao24"},"content":"            return Files.lines(filePath)","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JianHao24"},"content":"                    .map(this::parseSaveFile)","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JianHao24"},"content":"                    .filter(Objects::nonNull)","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JianHao24"},"content":"                    .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Error loading file: \" + filePath);","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JianHao24"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-19T00:32:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T00:16:32","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shauntsr"},"content":"     * Creates a new repository with notes and archive folders, and an index file.","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shauntsr"},"content":"     * Prints a message if the repository already exists.","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shauntsr"},"content":"     * @param repoName The name of the repository to create.","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shauntsr"},"content":"    public void createRepo(String repoName) {","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shauntsr"},"content":"        Path repoPath \u003d rootPath.resolve(repoName);","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shauntsr"},"content":"        if (Files.exists(repoPath)) {","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"Repository /\"+ repoName + \" already exists.\");","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shauntsr"},"content":"            return;","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shauntsr"},"content":"        try {","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shauntsr"},"content":"            Files.createDirectories(repoPath.resolve(REPO_NOTES));","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shauntsr"},"content":"            Files.createDirectories(repoPath.resolve(REPO_ARCHIVE));","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shauntsr"},"content":"            Files.createFile(repoPath.resolve(REPO_INDEX));","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shauntsr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"Error initialising repository \" + repoName) ;","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shauntsr"},"content":"     * Switches the current repository and updates the config file.","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shauntsr"},"content":"     * @param repoName The repository to switch to.","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shauntsr"},"content":"    public void changeRepo(String repoName) {","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shauntsr"},"content":"        try {","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shauntsr"},"content":"            this.repoName \u003d repoName;","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shauntsr"},"content":"            Path configPath \u003d rootPath.resolve(CONFIG_FILE);","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shauntsr"},"content":"            Files.writeString(configPath,repoName);","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shauntsr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"Unable to change repository to \" + repoName);","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shauntsr"},"content":"     * Saves a list of notes to the current repository.","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shauntsr"},"content":"     * @param notes The notes to save.","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-16T18:16:12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JianHao24"},"content":"    public void save(List\u003cNote\u003e notes) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shauntsr"},"content":"        Path repoPath \u003d rootPath.resolve(repoName).resolve(REPO_NOTES);","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"shauntsr"},"content":"        Path filePath \u003d repoPath.resolve(STORAGE_FILE);","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shauntsr"},"content":"            Files.createDirectories(repoPath); // Ensure directory exists","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JianHao24"},"content":"            List\u003cString\u003e lines \u003d notes.stream()","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JianHao24"},"content":"                    .map(this::toSaveFormat)","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JianHao24"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JianHao24"},"content":"            Files.write(filePath, lines);","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JianHao24"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JianHao24"},"content":"    private String toSaveFormat(Note note) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JianHao24"},"content":"        String logsStr \u003d String.join(\";;\", note.getLogs());","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JianHao24"},"content":"        String archiveName \u003d note.getArchiveName() !\u003d null ? note.getArchiveName() : \"\";","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JianHao24"},"content":"        return String.format(\"%s | %s | %s | %s | %s | %s | %s | %s | %s | %s\",","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JianHao24"},"content":"                note.getId(),","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JianHao24"},"content":"                note.getTitle(),","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JianHao24"},"content":"                note.getFilename(),","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JianHao24"},"content":"                note.getBody().replace(\"\\n\", \"\\\\n\"), // Escape newlines in body","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JianHao24"},"content":"                note.getCreatedAt().toString(),","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"JianHao24"},"content":"                note.getModifiedAt().toString(),","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JianHao24"},"content":"                note.isPinned() ? \"1\" : \"0\",","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JianHao24"},"content":"                note.isArchived() ? \"1\" : \"0\",","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JianHao24"},"content":"                archiveName,","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"JianHao24"},"content":"                logsStr);","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"JianHao24"},"content":"    private Note parseSaveFile(String line) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"gordonajajar"},"content":"        if (line.isBlank()) {","lastModifiedDate":"2025-10-14T22:05:30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"gordonajajar"},"content":"            return null;","lastModifiedDate":"2025-10-14T22:05:30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-14T22:05:30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"shauntsr"},"content":"        String[] fields \u003d line.split(\" \\\\| \", -1);","lastModifiedDate":"2025-10-16T17:10:44","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"JianHao24"},"content":"        try {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"JianHao24"},"content":"            String id \u003d fields[0];","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"JianHao24"},"content":"            String title \u003d fields[1];","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"JianHao24"},"content":"            String filename \u003d fields[2];","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"JianHao24"},"content":"            String body \u003d fields[3].replace(\"\\\\n\", \"\\n\"); // Unescape newlines","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"JianHao24"},"content":"            Instant createdAt \u003d Instant.parse(fields[4]);","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"JianHao24"},"content":"            Instant modifiedAt \u003d Instant.parse(fields[5]);","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"JianHao24"},"content":"            boolean pinned \u003d fields[6].equals(\"1\");","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"JianHao24"},"content":"            boolean archived \u003d fields[7].equals(\"1\");","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"JianHao24"},"content":"            String archiveName \u003d fields[8].isEmpty() ? null : fields[8];","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"JianHao24"},"content":"            List\u003cString\u003e logs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"JianHao24"},"content":"            if (fields.length \u003e 9 \u0026\u0026 !fields[9].isEmpty()) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"JianHao24"},"content":"                logs \u003d Arrays.asList(fields[9].split(\";;\"));","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"JianHao24"},"content":"            return new Note(id, title, filename, body, createdAt, modifiedAt,","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"JianHao24"},"content":"                    pinned, archived, archiveName, logs);","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"JianHao24"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"JianHao24"},"content":"            System.out.println(\"Skipping corrupted line: \" + line);","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"JianHao24"},"content":"            return null;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false}],"authorContributionMap":{"gordonajajar":4,"JianHao24":86,"shauntsr":122}},{"path":"src/main/java/seedu/zettel/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T14:13:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"public class UI {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"    public UI() {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shira421"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"    public String readCommand() {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"        if (!scanner.hasNextLine()) {","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":"            return \"bye\";  // Auto-exit when no more input (prevents hanging in CI)","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-14T21:18:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JianHao24"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JianHao24"},"content":"        printLine();","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\" Hello! I\u0027m Zettel\");","lastModifiedDate":"2025-10-14T14:22:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JianHao24"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JianHao24"},"content":"        printLine();","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"        System.out.println();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"        System.out.println(\" Available Commands:\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   init \u003crepo-name\u003e           - Initialize a new repository\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   new -t \u003ctitle\u003e [-b \u003cbody\u003e] - Create a new note\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   list [-p]                  - List all notes (or pinned only)\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   delete [-f] \u003cnote-id\u003e      - Delete a note by ID\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   pin \u003cnote-id\u003e              - Pin a note\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   unpin \u003cnote-id\u003e            - Unpin a note\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   find \u003ctext\u003e                - Search for notes\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"        System.out.println(\"   bye                        - Exit the application\");","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"        System.out.println();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"        printLine();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gordonajajar"},"content":"    public void showDeletionCancelled() {","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\"Deletion cancelled\");","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gordonajajar"},"content":"    public void showNoteDeleted(String id) {","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gordonajajar"},"content":"        System.out.println(\"Note at \" + id + \" deleted\");","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"    public void showDeleteConfirmation(String id, String noteTitle) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\"Confirm deletion on \u0027\" + noteTitle + \"\u0027, noteID \" + id + \"? (y/n)\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JianHao24"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JianHao24"},"content":"        System.out.println(message);","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JianHao24"},"content":"    public void showBye() {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JianHao24"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"    public void showAddedNote(Note note) {","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"Note created: \" + note.getFilename() + \" #\" + note.getId());","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"    public void showNoPinnedNotes() {","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"No pinned notes found. Pin a note to add to this list.\\n\");","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"    public void showNoNotes() {","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"No notes found.\\n\");","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"    public void showNoteList(List\u003cNote\u003e notes, boolean isPinned) {","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"        // Show number of notes found.","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"        if (isPinned) {","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"You have \" + notes.size() + \" pinned notes:\");","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"        } else {","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"You have \" + notes.size() + \" notes:\");","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"        // Show the list of notes.","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"        for (int idx \u003d 0; idx \u003c notes.size(); idx++) {","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"    \" + (idx + 1) + \". \" + notes.get(idx));","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JianHao24"},"content":"    public void printLine() {","lastModifiedDate":"2025-10-01T00:17:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JianHao24"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JianHao24"},"content":"    public void close() {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shira421"},"content":"        scanner.close();","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"danielkwan2004"},"content":"    public void showNoNotesFoundMessage() {","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\" No notes found matching the search criteria.\");","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"    public void showFoundNotesMessage(ArrayList\u003cNote\u003e matchedNotes) {","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"        System.out.println(\" Here are the matching notes in your list:\");","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"        for (int i \u003d 0; i \u003c matchedNotes.size(); i++) {","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shira421"},"content":"            System.out.println(\" \" + (i + 1) + \". \" + matchedNotes.get(i));","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shira421"},"content":"    public void showJustPinnedNote(Note note, String noteId) {","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shira421"},"content":"        System.out.println(\" Got it. I\u0027ve \" + (note.isPinned() ? \"pinned\" : \"unpinned\") + \" this note: \" + noteId);","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shauntsr"},"content":"    public void showRepoInit(String repoName) {","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\" Repository /\" + repoName + \" has been created.\");","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false}],"authorContributionMap":{"gordonajajar":10,"JianHao24":33,"shauntsr":29,"danielkwan2004":15,"shira421":25}},{"path":"src/main/java/seedu/zettel/Zettel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T14:13:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shira421"},"content":"import java.util.concurrent.ExecutorService;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"import java.util.concurrent.Future;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2025-10-15T13:30:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":"import java.util.concurrent.TimeoutException;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.commands.Command;","lastModifiedDate":"2025-10-15T13:30:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T13:30:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-15T13:30:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":" * Main class for the Zettel CLI application.","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":" * Handles initialization, storage setup, and the main program loop.","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":" * Zettel is a note-taking system that uses hash-based IDs for notes.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"public class Zettel {","lastModifiedDate":"2025-10-14T14:13:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-15T13:59:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"    private static final String DATA_FILE_PATH \u003d \"data/\";","lastModifiedDate":"2025-10-16T16:21:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"    private static final int READ_TIMEOUT_SECONDS \u003d 240;","lastModifiedDate":"2025-10-15T10:36:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"    private UI ui;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"    private boolean isRunning;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"     * Constructor for Zettel application.","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"     * Initializes the UI, storage, and loads existing notes from disk.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"    public Zettel() {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"        this.storage \u003d new Storage(DATA_FILE_PATH);","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"        storage.init();","lastModifiedDate":"2025-10-16T13:37:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"        this.notes \u003d storage.load();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"     * Runs the main application loop.","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"     * Displays greeting, processes commands until exit command is received.","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"     * Implements timeout handling to prevent hanging in CI environments.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JianHao24"},"content":"    public void run() {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-15T13:59:19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JianHao24"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"        ExecutorService executor \u003d Executors.newSingleThreadExecutor();","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"        while (isRunning) {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"            try {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"                // Read command with timeout","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"                Future\u003cString\u003e future \u003d executor.submit(() -\u003e ui.readCommand());","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"                String userInput;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"                try {","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"                    userInput \u003d future.get(READ_TIMEOUT_SECONDS, TimeUnit.SECONDS);","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"                } catch (TimeoutException e) {","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"                    future.cancel(true);","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"                    ui.showError(\"Input timeout. Exiting...\");","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"                    break;","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"                }","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"                // Skip empty input","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"                if (userInput.trim().isEmpty()) {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"                    continue;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JianHao24"},"content":"                }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:37:34","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shira421"},"content":"                // Parse the command","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shira421"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shira421"},"content":"                // Check if it\u0027s an exit command","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shira421"},"content":"                if (command.isExit()) {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shira421"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JianHao24"},"content":"                    break;","lastModifiedDate":"2025-10-14T21:18:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JianHao24"},"content":"                }","lastModifiedDate":"2025-10-14T21:18:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shira421"},"content":"                // Execute the command","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"                command.execute(notes, ui, storage);","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"                // Save notes after each command (auto-save)","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"                storage.save(notes);","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JianHao24"},"content":"            } catch (ZettelException e) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JianHao24"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shira421"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shira421"},"content":"                ui.showError(\"An unexpected error occurred: \" + e.getMessage());","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shira421"},"content":"                break;","lastModifiedDate":"2025-10-15T00:25:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JianHao24"},"content":"            }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shira421"},"content":"        executor.shutdownNow();","lastModifiedDate":"2025-10-15T00:59:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JianHao24"},"content":"        ui.close();","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shira421"},"content":"     * Main entry-point for the Zettel application.","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shira421"},"content":"     * @param args Command line arguments (not used)","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JianHao24"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-10-14T20:29:56","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shira421"},"content":"        new Zettel().run();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"gordonajajar":5,"JianHao24":19,"shauntsr":2,"danielkwan2004":4,"-":4,"shira421":70}},{"path":"src/main/java/seedu/zettel/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"public abstract class Command {","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":"    public abstract void execute(ArrayList\u003cNote\u003e notes, UI ui, Storage storage) throws ZettelException;","lastModifiedDate":"2025-10-14T20:53:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"        return false;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false}],"authorContributionMap":{"gordonajajar":2,"danielkwan2004":15}},{"path":"src/main/java/seedu/zettel/commands/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gordonajajar"},"content":"import java.util.Optional;","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNoteFoundException;","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T00:49:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":" * Command to delete a note by its ID.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":" * Supports optional force deletion to skip confirmation prompt.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"public class DeleteNoteCommand extends Command {","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"    private final String noteId;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"    private boolean force;","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"     * Constructs a DeleteNoteCommand with the specified note ID and force flag.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"     * @param noteId The 8-character hexadecimal note ID to delete","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"     * @param force true to skip confirmation, false to prompt user","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gordonajajar"},"content":"    public DeleteNoteCommand(String noteId, boolean force) {","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"        this.noteId \u003d noteId;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gordonajajar"},"content":"        this.force \u003d force;","lastModifiedDate":"2025-10-14T22:05:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"     * Executes the delete command on the specified note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"     * Prompts for confirmation unless force flag is set.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"     * @param notes The list of all notes","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"     * @param ui The UI instance for user interaction","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"     * @param storage The storage instance for persistence","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If the notes list is empty or the note doesn\u0027t exist","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gordonajajar"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gordonajajar"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-15T00:49:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 1: Check if the notes list is empty","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"You have no notes to delete.\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 2: Check if note with the given ID exists","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        Optional\u003cNote\u003e maybe \u003d notes.stream().filter(n -\u003e n.getId().equals(noteId)).findFirst();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gordonajajar"},"content":"        if (maybe.isEmpty()) {","lastModifiedDate":"2025-10-14T22:13:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNoteFoundException(\"Note with ID \u0027\" + noteId + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"        // Happy path: Execute the delete operation","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gordonajajar"},"content":"        Note note \u003d maybe.get();","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"        assert note !\u003d null : \"Note should not be null after validation\";","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-15T13:59:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gordonajajar"},"content":"        boolean shouldDelete \u003d force;","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gordonajajar"},"content":"        if (!force) {","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"            ui.showDeleteConfirmation(noteId, note.getTitle());","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gordonajajar"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gordonajajar"},"content":"            String input \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"gordonajajar"},"content":"            shouldDelete \u003d input.equals(\"y\") || input.equals(\"yes\");","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"gordonajajar"},"content":"        if (shouldDelete) {","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"gordonajajar"},"content":"            notes.remove(note);","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"gordonajajar"},"content":"            storage.save(notes);","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"            ui.showNoteDeleted(noteId);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"gordonajajar"},"content":"        } else {","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gordonajajar"},"content":"            ui.showDeletionCancelled();","lastModifiedDate":"2025-10-14T22:28:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T17:39:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false}],"authorContributionMap":{"gordonajajar":42,"danielkwan2004":16,"shira421":20}},{"path":"src/main/java/seedu/zettel/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JianHao24"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"gordonajajar"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-14T20:53:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":"        ui.showBye();","lastModifiedDate":"2025-10-15T00:48:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-15T00:48:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-15T00:48:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":"    @Override","lastModifiedDate":"2025-10-15T00:48:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gordonajajar"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-15T00:48:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"        return true;","lastModifiedDate":"2025-10-15T00:48:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false}],"authorContributionMap":{"gordonajajar":8,"JianHao24":12}},{"path":"src/main/java/seedu/zettel/commands/FindNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T00:14:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"public class FindNoteCommand extends Command{","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"    private final String keyword;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"    public FindNoteCommand(String keyword) {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-14T22:01:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"There are no notes available to search.\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"        assert notes !\u003d null : \"Notes list should not be null\";","lastModifiedDate":"2025-10-15T13:30:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e matchedNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"        for (Note note: notes) {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"            if (note.getBody().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"                matchedNotes.add(note);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"            }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"        if (matchedNotes.isEmpty()) {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"            ui.showNoNotesFoundMessage();","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"        } else {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"            ui.showFoundNotesMessage(matchedNotes);","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false}],"authorContributionMap":{"gordonajajar":3,"JianHao24":9,"danielkwan2004":24}},{"path":"src/main/java/seedu/zettel/commands/InitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T23:13:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T23:13:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"public class InitCommand extends Command {","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T23:13:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"    private final String repoName;","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"    public InitCommand(String repoName) {","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"        this.repoName \u003d repoName;","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-14T20:53:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"        storage.createRepo(repoName);","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"        ui.showRepoInit(repoName);","lastModifiedDate":"2025-10-16T17:25:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false}],"authorContributionMap":{"gordonajajar":8,"JianHao24":9,"shauntsr":6}},{"path":"src/main/java/seedu/zettel/commands/ListNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"import java.util.List;","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"public class ListNoteCommand extends Command{","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"    private final boolean showsPinnedOnly;","lastModifiedDate":"2025-10-14T21:49:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T21:49:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"    public ListNoteCommand(boolean showsPinnedOnly) {","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"        this.showsPinnedOnly \u003d showsPinnedOnly;","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, UI ui, Storage storage) throws ZettelException{","lastModifiedDate":"2025-10-14T20:53:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"        // Add notes","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"        notes.sort(Comparator.comparing(Note::getCreatedAt).reversed());","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"        List\u003cNote\u003e filtered \u003d notes.stream()","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"                .filter(n -\u003e !showsPinnedOnly || n.isPinned())","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"                .toList();","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"        // Handle no notes found","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"        if (filtered.isEmpty() \u0026\u0026 showsPinnedOnly) {","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"            ui.showNoPinnedNotes();","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"            return;","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"        if (filtered.isEmpty()) {","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"            ui.showNoNotes();","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"gordonajajar"},"content":"            return;","lastModifiedDate":"2025-10-14T20:53:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JianHao24"},"content":"        }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"        ui.showNoteList(filtered, showsPinnedOnly);","lastModifiedDate":"2025-10-14T22:59:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T18:55:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false}],"authorContributionMap":{"gordonajajar":6,"JianHao24":11,"shauntsr":24}},{"path":"src/main/java/seedu/zettel/commands/NewNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"import seedu.zettel.util.IdGenerator;","lastModifiedDate":"2025-10-17T11:24:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-15T00:36:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":" * Command to create a new note with a given title and optional body.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":" * Generates a deterministic ID based on the title and creation timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"public class NewNoteCommand extends Command {","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"    private final String title;","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"    private final String body;","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"     * Constructs a NewNoteCommand with the specified title and body.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"     * @param title The title of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"     * @param body The body content of the note","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JianHao24"},"content":"    public NewNoteCommand(String title, String body) {","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"        this.title \u003d title;","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"        this.body \u003d body;","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"     * Executes the command to create a new note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"     * Generates a hash-based ID from title and timestamp,","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"     * checks for duplicate filenames, and saves the note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"     * @param notes The list of existing notes","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"     * @param ui The UI instance for user interaction","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"     * @param storage The storage instance for persistence","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If a note with the same filename already exists","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JianHao24"},"content":"    @Override","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gordonajajar"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-14T20:53:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"        assert title !\u003d null : \"Title should not be null\";","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"        Instant now \u003d Instant.now();","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"        // Generate deterministic ID based on title and timestamp","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"        String idInput \u003d title + now.toString();","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(idInput);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T13:58:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"        String filename \u003d title.replaceAll(\"\\\\s+\", \"_\") + \".txt\";","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"        // Check if filename already exists","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"        boolean filenameExists \u003d notes.stream()","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"                .anyMatch(n -\u003e n.getFilename().equals(filename));","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"        if (filenameExists) {","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"            throw new InvalidInputException(\"Note already exists!\");","lastModifiedDate":"2025-10-15T00:36:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"        Note newNote \u003d new Note(","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"                id,","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"                title,","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"                filename,","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"                body,","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"                now,","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"                now","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"        );","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"        notes.add(newNote);","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"        storage.save(notes);","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"        ui.showAddedNote(newNote);","lastModifiedDate":"2025-10-14T23:42:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:29:23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:28:15","isFullCredit":false}],"authorContributionMap":{"gordonajajar":5,"JianHao24":12,"shauntsr":30,"shira421":28}},{"path":"src/main/java/seedu/zettel/commands/PinNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shira421"},"content":"import java.util.Optional;","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidFormatException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shira421"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":" * Command to pin or unpin a note by its ID.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":" * Pinned notes can be listed separately for quick access.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"public class PinNoteCommand extends Command {","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"    private static final int VALID_NOTE_ID_LENGTH \u003d 8;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"    private static final String VALID_NOTE_ID_REGEX \u003d \"^[a-f0-9]{8}$\";","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"    private final boolean isPin;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"    private final String noteId;","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"     * Constructs a PinNoteCommand with the specified note ID and pin status.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"     * @param noteId The 8-character hexadecimal note ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"     * @param isPin true to pin the note, false to unpin","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"    public PinNoteCommand(String noteId, boolean isPin) {","lastModifiedDate":"2025-10-14T22:51:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"        this.noteId \u003d noteId;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"        this.isPin \u003d isPin;","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"     * Validates that the noteId has the correct format.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"     * Must be exactly 8 lowercase hexadecimal characters (0-9, a-f).","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"     * @param noteId The noteId to validate","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"     * @throws InvalidFormatException If the noteId format is invalid","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"    private void validateNoteIdFormat(String noteId) throws InvalidFormatException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"        if (noteId \u003d\u003d null || noteId.length() !\u003d VALID_NOTE_ID_LENGTH) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"                    \"Note ID must be exactly \" + VALID_NOTE_ID_LENGTH + \" characters long.\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"        if (!noteId.matches(VALID_NOTE_ID_REGEX)) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidFormatException(","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"                    \"Note ID must contain only lowercase hexadecimal characters (0-9, a-f).\");","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"     * Executes the pin/unpin command on the specified note.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"     * @param notes The list of all notes","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"     * @param ui The UI instance for user interaction","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"     * @param storage The storage instance for persistence","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"     * @throws ZettelException If the note ID is invalid or the note doesn\u0027t exist","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"    @Override","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"    public void execute(ArrayList\u003cNote\u003e notes, UI ui, Storage storage) throws ZettelException {","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 1: Check if noteId format is valid","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"        validateNoteIdFormat(noteId);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 2: Check if the notes list is empty","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"            throw new NoNotesException(\"You have no notes to pin/unpin.\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"        // Validation 3: Check if note with the given ID exists","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shira421"},"content":"        Optional\u003cNote\u003e maybe \u003d notes.stream().filter(n -\u003e n.getId().equals(noteId)).findFirst();","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shira421"},"content":"        if (maybe.isEmpty()) {","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"            throw new InvalidNoteIdException(\"Note with ID \u0027\" + noteId + \"\u0027 does not exist.\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"        // Happy path: Execute the pin/unpin operation","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"        Note note \u003d maybe.get();","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"        note.setPinned(isPin);","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"        ui.showJustPinnedNote(note, noteId);","lastModifiedDate":"2025-10-15T02:10:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"        storage.save(notes);","lastModifiedDate":"2025-10-14T23:01:40","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":51,"shira421":33}},{"path":"src/main/java/seedu/zettel/exceptions/EmptyDescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when a required description field is empty or missing.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is used to enforce that certain operations require","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * non-empty description text.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"public class EmptyDescriptionException extends ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new EmptyDescriptionException with the specified detail message.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining which description field is empty","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     *                and why it is required.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"        super(message);","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"JianHao24":6,"danielkwan2004":11}},{"path":"src/main/java/seedu/zettel/exceptions/InvalidFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when input or data is not in the expected format.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is used to indicate that the structure or format of","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * the provided data does not match the required specifications.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"public class InvalidFormatException extends ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new InvalidFormatException with the specified detail message.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining what format was expected","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     *                and how the actual format differs.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"        super(message);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"JianHao24":6,"danielkwan2004":11}},{"path":"src/main/java/seedu/zettel/exceptions/InvalidInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when user input is invalid or cannot be processed.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is used to indicate that the user has provided input","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * that does not conform to expected formats or constraints.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"public class InvalidInputException extends ZettelException {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new InvalidInputException with the specified detail message.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     * The message is automatically prefixed with \"Invalid Input: \".","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining what aspect of the input is invalid.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"        super(\"Invalid Input: \" + message);","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-09-30T22:18:01","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"JianHao24":6,"danielkwan2004":11}},{"path":"src/main/java/seedu/zettel/exceptions/InvalidNoteIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when an invalid noteId is provided for note operations.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is typically thrown when the user specifies an index that is","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * out of bounds or does not correspond to an existing note.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"public class InvalidNoteIdException extends ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new InvalidNoteIdException with the specified detail message.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     * The message is automatically prefixed with \"Invalid Note ID! \".","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining why the note ID is invalid.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"    public InvalidNoteIdException(String message) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"        super(\"Invalid Note ID! \" + message);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":18}},{"path":"src/main/java/seedu/zettel/exceptions/NoNoteFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when a requested note cannot be found","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is typically thrown when attempting to access, modify, or delete","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * a note that is not present in the note list.","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"public class NoNoteFoundException extends ZettelException {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new NoNoteFoundException with the specified detail message.","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining which note was not found.","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"    public NoNoteFoundException(String message) {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"        super(message);","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":17}},{"path":"src/main/java/seedu/zettel/exceptions/NoNotesException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Exception thrown when there is no notes in the list at all.","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This exception is typically thrown when attempting to perform actions on an empty","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" * note list.","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"public class NoNotesException extends ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new NoNoteException with the specified detail message.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining which note was not found.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"    public NoNotesException(String message) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"        super(message);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":17}},{"path":"src/main/java/seedu/zettel/exceptions/ZettelException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.exceptions;","lastModifiedDate":"2025-10-14T23:18:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"/**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":" * Represents the base exception class for all Zettel-related exceptions.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":" * This is the parent class for all custom exceptions in the Zettel application.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":" */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"public class ZettelException extends Exception {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"    /**","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"     * Constructs a new ZettelException with the specified detail message.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"     *","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"     * @param message The detail message explaining the cause of the exception.","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"     */","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"    public ZettelException(String message) {","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"        super(message);","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-14T17:21:29","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"JianHao24":6,"danielkwan2004":9}},{"path":"src/main/java/seedu/zettel/util/IdGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shira421"},"content":"package seedu.zettel.util;","lastModifiedDate":"2025-10-17T11:24:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shira421"},"content":"import java.security.MessageDigest;","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"import java.security.NoSuchAlgorithmException;","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":" * Utility class for generating deterministic 8-character hexadecimal IDs","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":" * based on note content and creation timestamp.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shira421"},"content":"public class IdGenerator {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shira421"},"content":"    private static final int ID_LENGTH \u003d 8;","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shira421"},"content":"    private static final String HASH_ALGORITHM \u003d \"SHA-256\";","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":"    private static final int BYTES_FOR_ID \u003d 4; // 4 bytes \u003d 8 hex characters","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":"     * Generates an 8-character hexadecimal ID by hashing the input string.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":"     * Uses SHA-256 algorithm and takes the first 4 bytes of the hash.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"     * @param input The string to hash (typically title + timestamp)","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"     * @return 8-character lowercase hexadecimal ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"    public static String generateId(String input) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"        try {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"            MessageDigest digest \u003d MessageDigest.getInstance(HASH_ALGORITHM);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"            byte[] hash \u003d digest.digest(input.getBytes(StandardCharsets.UTF_8));","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"            // Convert first 4 bytes to hex (8 characters)","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"            StringBuilder hexString \u003d new StringBuilder();","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"            for (int i \u003d 0; i \u003c BYTES_FOR_ID; i++) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"                String hex \u003d Integer.toHexString(0xff \u0026 hash[i]);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"                if (hex.length() \u003d\u003d 1) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"                    hexString.append(\u00270\u0027);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"                }","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"                hexString.append(hex);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"            }","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"            return hexString.toString();","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"        } catch (NoSuchAlgorithmException e) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"            // Fallback to timestamp-based ID if SHA-256 unavailable","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"            // This should never happen in standard JVM environments","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"            return generateFallbackId(input);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"        }","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"    /**","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"     * Generates a fallback ID based on the hashCode of the input.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"     * Used only if SHA-256 is unavailable.","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"     *","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"     * @param input The string to generate ID from","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"     * @return 8-character hexadecimal ID","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"     */","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"    private static String generateFallbackId(String input) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"        int hashCode \u003d input.hashCode();","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"        long timestamp \u003d System.currentTimeMillis();","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"        long combined \u003d ((long) hashCode \u003c\u003c 32) | (timestamp \u0026 0xFFFFFFFFL);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"        String hex \u003d Long.toHexString(combined);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"        // Ensure exactly 8 characters","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"        if (hex.length() \u003e\u003d ID_LENGTH) {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"            return hex.substring(0, ID_LENGTH);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"        } else {","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"            return String.format(\"%8s\", hex).replace(\u0027 \u0027, \u00270\u0027);","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"        }","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"}","lastModifiedDate":"2025-10-17T06:55:52","isFullCredit":false}],"authorContributionMap":{"shira421":65}},{"path":"src/test/java/seedu/zettel/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shira421"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shira421"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"import java.util.List;","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-14T19:02:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-14T19:02:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-14T19:02:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-10-14T19:02:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-14T19:02:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":" * Unit tests for the Note class.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":" * Tests note creation, getters, setters, and hash-based ID functionality.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"gordonajajar"},"content":"public class NoteTest {","lastModifiedDate":"2025-10-14T23:13:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"    private Note note;","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"    private final String id \u003d \"a1b2c3d4\"; // 8-character lowercase hex ID","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"    private final String title \u003d \"Test Title\";","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"    private final String filename \u003d \"test_note.txt\";","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"    private final String body \u003d \"This is the body of the test note.\";","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"    private final Instant createdAt \u003d Instant.now().minus(1, ChronoUnit.DAYS);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"    private final Instant modifiedAt \u003d Instant.now();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"    void setUp() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"        // This setup runs before each test, providing a fresh note instance","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"        note \u003d new Note(id, title, filename, body, createdAt, modifiedAt);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Test primary constructor for new note creation\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"    void testNewNoteConstructor() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"        // The note from setUp is created with this constructor","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"        assertEquals(id, note.getId());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"        assertEquals(title, note.getTitle());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"        assertEquals(filename, note.getFilename());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"        assertEquals(body, note.getBody());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"        assertEquals(createdAt, note.getCreatedAt());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"        assertEquals(modifiedAt, note.getModifiedAt());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"        // Check default values for a new note","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"        assertFalse(note.isPinned(), \"New note should not be pinned by default.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"        assertFalse(note.isArchived(), \"New note should not be archived by default.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"        assertNull(note.getArchiveName(), \"Archive name should be null for a new note.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getLogs().isEmpty(), \"Logs should be empty for a new note.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Test full constructor for loading a note\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"    void testFullConstructor() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"        List\u003cString\u003e logs \u003d List.of(\"Log entry 1\", \"Log entry 2\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"        Note loadedNote \u003d new Note(id, title, filename, body, createdAt, modifiedAt,","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"                true, true, \"my-archive\", logs);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"        assertEquals(id, loadedNote.getId());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"        assertEquals(title, loadedNote.getTitle());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"        assertTrue(loadedNote.isPinned(), \"Pinned status should be loaded correctly.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"        assertTrue(loadedNote.isArchived(), \"Archived status should be loaded correctly.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"        assertEquals(\"my-archive\", loadedNote.getArchiveName());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"        assertEquals(2, loadedNote.getLogs().size());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shira421"},"content":"        assertEquals(\"Log entry 1\", loadedNote.getLogs().get(0));","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Test full constructor with null logs list\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shira421"},"content":"    void testFullConstructorWithNullLogs() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shira421"},"content":"        Note loadedNote \u003d new Note(id, title, filename, body, createdAt, modifiedAt,","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shira421"},"content":"                false, false, null, null);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shira421"},"content":"        assertNotNull(loadedNote.getLogs(), \"Logs list should be initialized to an empty list, not null.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shira421"},"content":"        assertTrue(loadedNote.getLogs().isEmpty(), \"Logs list should be empty when loaded with null.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Getters should return correct values\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"    void testGetters() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"        assertEquals(id, note.getId());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shira421"},"content":"        assertEquals(title, note.getTitle());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shira421"},"content":"        assertEquals(filename, note.getFilename());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shira421"},"content":"        assertEquals(body, note.getBody());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shira421"},"content":"        assertEquals(createdAt, note.getCreatedAt());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shira421"},"content":"        assertEquals(modifiedAt, note.getModifiedAt());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Setters should update values and modifiedAt timestamp\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shira421"},"content":"    void testSettersAndUpdateTimestamp() throws InterruptedException {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shira421"},"content":"        Instant initialModifiedAt \u003d note.getModifiedAt();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shira421"},"content":"        // Allow a millisecond to pass to ensure Instant.now() is different","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shira421"},"content":"        Thread.sleep(1);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shira421"},"content":"        note.setTitle(\"New Title\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shira421"},"content":"        assertEquals(\"New Title\", note.getTitle());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getModifiedAt().isAfter(initialModifiedAt), \"setTitle should update modifiedAt.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shira421"},"content":"        initialModifiedAt \u003d note.getModifiedAt();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shira421"},"content":"        Thread.sleep(1);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shira421"},"content":"        note.setBody(\"New body content.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shira421"},"content":"        assertEquals(\"New body content.\", note.getBody());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getModifiedAt().isAfter(initialModifiedAt), \"setBody should update modifiedAt.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"setFilename should not update modifiedAt timestamp\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shira421"},"content":"    void testSetFilenameDoesNotUpdateTimestamp() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shira421"},"content":"        Instant initialModifiedAt \u003d note.getModifiedAt();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shira421"},"content":"        note.setFilename(\"new_filename.md\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shira421"},"content":"        assertEquals(\"new_filename.md\", note.getFilename());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shira421"},"content":"        assertEquals(initialModifiedAt, note.getModifiedAt(), \"setFilename should not update modifiedAt.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"setPinned should update value and modifiedAt timestamp\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shira421"},"content":"    void testSetPinned() throws InterruptedException {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shira421"},"content":"        Instant initialModifiedAt \u003d note.getModifiedAt();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shira421"},"content":"        Thread.sleep(1);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shira421"},"content":"        note.setPinned(true);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shira421"},"content":"        assertTrue(note.isPinned());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getModifiedAt().isAfter(initialModifiedAt), \"setPinned should update modifiedAt.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"addLog should add an entry to the logs\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shira421"},"content":"    void testAddLog() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getLogs().isEmpty());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shira421"},"content":"        String logEntry \u003d \"Note created.\";","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shira421"},"content":"        note.addLog(logEntry);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shira421"},"content":"        assertEquals(1, note.getLogs().size());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shira421"},"content":"        assertEquals(logEntry, note.getLogs().get(0));","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"getLogs should return a defensive copy\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shira421"},"content":"    void testGetLogsReturnsDefensiveCopy() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shira421"},"content":"        note.addLog(\"Original log\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shira421"},"content":"        List\u003cString\u003e logsCopy \u003d note.getLogs();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shira421"},"content":"        // Modify the returned copy","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shira421"},"content":"        logsCopy.add(\"This should not affect the original\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"shira421"},"content":"        assertEquals(1, note.getLogs().size(), \"Modifying the copy should not affect the original list.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shira421"},"content":"        assertEquals(\"Original log\", note.getLogs().get(0));","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"danielkwan2004"},"content":"    @DisplayName(\"updateModifiedAt should update the modifiedAt timestamp\")","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"danielkwan2004"},"content":"    void testUpdateModifiedAt() throws InterruptedException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shira421"},"content":"        Instant initialModifiedAt \u003d note.getModifiedAt();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"shira421"},"content":"        Thread.sleep(1); // Ensure the clock tick is registered","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"danielkwan2004"},"content":"        note.updateModifiedAt();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getModifiedAt().isAfter(initialModifiedAt),","lastModifiedDate":"2025-10-14T19:02:32","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"danielkwan2004"},"content":"                \"updateModifiedAt should update the timestamp to a later time.\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"toString should return correctly formatted string\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"shira421"},"content":"    void testToString() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"shira421"},"content":"        String noteString \u003d note.toString();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"shira421"},"content":"        // Expected format: \"FILENAME yyyy-MM-dd NOTEID\"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"shira421"},"content":"        // Example: test_note.txt 2025-10-14 a1b2c3d4","lastModifiedDate":"2025-10-16T13:52:38","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"shira421"},"content":"        String[] parts \u003d noteString.split(\" \");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"shira421"},"content":"        assertEquals(3, parts.length, \"toString() output should have 3 parts separated by spaces.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"shira421"},"content":"        assertEquals(filename, parts[0]);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"shira421"},"content":"        assertEquals(id, parts[2]);","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"shira421"},"content":"        // Verify the date part matches the yyyy-MM-dd pattern","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"shira421"},"content":"        assertTrue(parts[1].matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\"), \"Date part should be in yyyy-MM-dd format.\");","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Static note counter should increment on object creation\")","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"shira421"},"content":"    void testNumberOfNotesCounter() {","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"shira421"},"content":"        // This test is self-contained to avoid interference from other tests\u0027 object creations","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"shira421"},"content":"        int countBefore \u003d Note.getNumberOfNotes();","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"shira421"},"content":"        // Use lowercase hex IDs","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"shira421"},"content":"        Note note1 \u003d new Note(\"abcd1234\", \"t1\", \"f1\", \"b1\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"shira421"},"content":"        assertEquals(countBefore + 1, Note.getNumberOfNotes());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"shira421"},"content":"        Note note2 \u003d new Note(\"def56789\", \"t2\", \"f2\", \"b2\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"shira421"},"content":"        assertEquals(countBefore + 2, Note.getNumberOfNotes());","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"shira421"},"content":"}","lastModifiedDate":"2025-10-14T18:53:36","isFullCredit":false}],"authorContributionMap":{"gordonajajar":1,"danielkwan2004":7,"shira421":185}},{"path":"src/test/java/seedu/zettel/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JianHao24"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JianHao24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.Command;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.DeleteNoteCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.ExitCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.FindNoteCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.InitCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.ListNoteCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.NewNoteCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.commands.PinNoteCommand;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.exceptions.EmptyDescriptionException;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.exceptions.InvalidFormatException;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JianHao24"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":" * Unit tests for the Parser class.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":" * Tests parsing of all commands and validation of hexadecimal note IDs.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JianHao24"},"content":"class ParserTest {","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"    void testParseExitCommandReturnsExitCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(ExitCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"    void testParseListCommandReturnsListNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(ListNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"    void testParseListWithPinnedFlagReturnsListNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"list -p\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(ListNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"    void testParseListWithInvalidFlagThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JianHao24"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"list -x\"));","lastModifiedDate":"2025-10-15T14:13:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"    void testParseNewNoteWithTitleOnlyReturnsNewNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"new -t My Title\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(NewNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"    void testParseNewNoteWithTitleAndBodyReturnsNewNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"new -t My Title -b My Body\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(NewNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"    void testParseNewNoteWithoutTitleFlagThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JianHao24"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"new My Title\"));","lastModifiedDate":"2025-10-15T14:13:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"    void testParseNewNoteWithEmptyTitleThrowsEmptyDescriptionException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JianHao24"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e Parser.parse(\"new -t\"));","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shira421"},"content":"    void testParseDeleteWithValidHexIdReturnsDeleteNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shira421"},"content":"        Command command \u003d Parser.parse(\"delete abcd1234\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(DeleteNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shira421"},"content":"    void testParseDeleteWithUppercaseHexThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"        // IDs must be lowercase hex only","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"delete ABCD1234\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"    void testParseDeleteWithSpecialCharactersThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"delete abcd-234\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"    void testParseDeleteWithInvalidCharactersThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shira421"},"content":"        // \u0027g\u0027 is not a valid hex character","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"delete abcdefgh\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"danielkwan2004"},"content":"    void testParseDeleteWithForceFlagReturnsDeleteNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shira421"},"content":"        Command command \u003d Parser.parse(\"delete -f abcd1234\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(DeleteNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"    void testParseDeleteWithoutIdThrowsEmptyDescriptionException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JianHao24"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e Parser.parse(\"delete\"));","lastModifiedDate":"2025-10-15T14:13:40","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"danielkwan2004"},"content":"    void testParseDeleteWithTooShortIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"delete abc\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"danielkwan2004"},"content":"    void testParseDeleteWithTooLongIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"delete abcdef123\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shira421"},"content":"    void testParsePinWithValidHexIdReturnsPinNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shira421"},"content":"        Command command \u003d Parser.parse(\"pin abcd1234\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(PinNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shira421"},"content":"    void testParseUnpinWithValidHexIdReturnsPinNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shira421"},"content":"        Command command \u003d Parser.parse(\"unpin def56789\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(PinNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"danielkwan2004"},"content":"    void testParsePinWithoutIdThrowsEmptyDescriptionException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JianHao24"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e Parser.parse(\"pin\"));","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"danielkwan2004"},"content":"    void testParsePinWithSpecialCharactersThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"pin abcd-234\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"danielkwan2004"},"content":"    void testParsePinWithTooShortIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"pin abc\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"danielkwan2004"},"content":"    void testParsePinWithTooLongIdThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"pin abcdef123\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shira421"},"content":"    void testParsePinWithUppercaseHexThrowsInvalidFormatException() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"shira421"},"content":"        // IDs must be lowercase hex only","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shira421"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e Parser.parse(\"pin ABCD1234\"));","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"danielkwan2004"},"content":"    void testParseInitWithRepoNameReturnsInitCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"init myRepo\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(InitCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"danielkwan2004"},"content":"    void testParseInitWithoutRepoNameThrowsEmptyDescriptionException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JianHao24"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e Parser.parse(\"init\"));","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"danielkwan2004"},"content":"    void testParseFindWithSearchTermReturnsFindNoteCommand() throws ZettelException {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JianHao24"},"content":"        Command command \u003d Parser.parse(\"find test\");","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JianHao24"},"content":"        assertInstanceOf(FindNoteCommand.class, command);","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"danielkwan2004"},"content":"    void testParseFindWithoutSearchTermThrowsEmptyDescriptionException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JianHao24"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e Parser.parse(\"find\"));","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"JianHao24"},"content":"","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"danielkwan2004"},"content":"    void testParseUnknownCommandThrowsInvalidInputException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"JianHao24"},"content":"        assertThrows(InvalidInputException.class, () -\u003e Parser.parse(\"unknown\"));","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"JianHao24"},"content":"    }","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"JianHao24"},"content":"}","lastModifiedDate":"2025-10-15T13:58:00","isFullCredit":false}],"authorContributionMap":{"JianHao24":101,"danielkwan2004":47,"shira421":31}},{"path":"src/test/java/seedu/zettel/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"public class StorageTest {","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"    @TempDir","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"    private static Path tempDir;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"    void setup() {","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"        storage \u003d new Storage(tempDir.toString());","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"    void initCreatesRootFolderAndConfig() throws IOException {","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"        Path configPath \u003d tempDir.resolve(\".zettelConfig\");","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"        Path defaultRepoNotes \u003d tempDir.resolve(\"main\").resolve(\"notes\");","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"        Path defaultRepoArchive \u003d tempDir.resolve(\"main\").resolve(\"archive\");","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"        Path storageFile \u003d defaultRepoNotes.resolve(\"zettel.txt\");","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"        // Before init, nothing exists","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"        assertFalse(Files.exists(configPath));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"        assertFalse(Files.exists(defaultRepoNotes));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"        assertFalse(Files.exists(defaultRepoArchive));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"        assertFalse(Files.exists(storageFile));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"        storage.init();","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"        // After init, config and default repo structure exist","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"        assertTrue(Files.exists(configPath));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"main\", Files.readString(configPath).trim());","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"        assertTrue(Files.exists(defaultRepoNotes));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"        assertTrue(Files.exists(defaultRepoArchive));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"        assertTrue(Files.exists(storageFile));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"    void createRepoCreatesNewRepoStructure() throws IOException {","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"        String repoName \u003d \"testRepo\";","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"        Path notesPath \u003d tempDir.resolve(repoName).resolve(\"notes\");","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"        Path archivePath \u003d tempDir.resolve(repoName).resolve(\"archive\");","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"        Path indexFile \u003d tempDir.resolve(repoName).resolve(\"index.txt\");","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"        // Repo should not exist initially","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"        assertFalse(Files.exists(notesPath));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"        assertFalse(Files.exists(archivePath));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"        assertFalse(Files.exists(indexFile));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"        storage.createRepo(repoName);","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"        // Repo directories and index file should exist","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"        assertTrue(Files.exists(notesPath));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"        assertTrue(Files.exists(archivePath));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"        assertTrue(Files.exists(indexFile));","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-16T17:59:22","isFullCredit":false}],"authorContributionMap":{"shauntsr":69}},{"path":"src/test/java/seedu/zettel/ZettelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel;","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shira421"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":" * Unit tests for the Zettel main class.","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":" * Tests application initialization and configuration.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":"class ZettelTest {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"    private static final Path DATA_DIR \u003d Path.of(\"data\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"    private static final Path NOTES_FILE \u003d DATA_DIR.resolve(\"notes.txt\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"    void setUp() throws Exception {","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"        // Ensure data directory exists before each test","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"        Files.createDirectories(DATA_DIR);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"    @AfterEach","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"        // Clean up data files after each test","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"        try {","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"            Files.deleteIfExists(NOTES_FILE);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"            Files.deleteIfExists(DATA_DIR);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"            System.err.println(\"Cleanup failed: \" + e.getMessage());","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"        }","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JianHao24"},"content":"    @Test","lastModifiedDate":"2025-10-14T21:18:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"    void constructor_initializesDependenciesSuccessfully() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"            Zettel zettel \u003d new Zettel();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"            assertNotNull(zettel, \"Zettel instance should not be null\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"        });","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"    void constructor_createsUIAndStorageAndNotesList() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"        Zettel zettel \u003d new Zettel();","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"        // Use reflection to access private fields","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"        try {","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"            var uiField \u003d Zettel.class.getDeclaredField(\"ui\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"            var storageField \u003d Zettel.class.getDeclaredField(\"storage\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"            var notesField \u003d Zettel.class.getDeclaredField(\"notes\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"            uiField.setAccessible(true);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"            storageField.setAccessible(true);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"            notesField.setAccessible(true);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"            assertNotNull(uiField.get(zettel), \"UI should be initialized\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"            assertNotNull(storageField.get(zettel), \"Storage should be initialized\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"            assertNotNull(notesField.get(zettel), \"Notes list should be initialized\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"        } catch (ReflectiveOperationException e) {","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"            fail(\"Reflection access failed: \" + e.getMessage());","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shira421"},"content":"        }","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shira421"},"content":"    void mainMethod_existsAndDoesNotThrow() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shira421"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shira421"},"content":"            Zettel.class.getDeclaredMethod(\"main\", String[].class);","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shira421"},"content":"        }, \"Zettel should have a main method\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shira421"},"content":"    void multipleInstances_canBeCreatedIndependently() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"            Zettel z1 \u003d new Zettel();","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"            Zettel z2 \u003d new Zettel();","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"            assertNotSame(z1, z2, \"Each Zettel instance should be unique\");","lastModifiedDate":"2025-10-15T10:52:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shira421"},"content":"        });","lastModifiedDate":"2025-10-15T00:04:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-14T23:50:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T14:33:25","isFullCredit":false}],"authorContributionMap":{"gordonajajar":8,"JianHao24":1,"danielkwan2004":3,"shira421":73}},{"path":"src/test/java/seedu/zettel/commands/DeleteNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-15T00:49:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"gordonajajar"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"gordonajajar"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"gordonajajar"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"gordonajajar"},"content":"import java.util.List;","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNoteFoundException;","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T00:49:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"gordonajajar"},"content":"public class DeleteNoteCommandTest {","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:05:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"gordonajajar"},"content":"    private static final String FILE_PATH \u003d \"./data/zettel.txt\";","lastModifiedDate":"2025-10-14T22:05:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:05:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"gordonajajar"},"content":"    // Simple UI test double that records calls","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"gordonajajar"},"content":"    private static class TestUI extends UI {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"gordonajajar"},"content":"        private final ArrayList\u003cString\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-15T00:49:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"gordonajajar"},"content":"        public void showDeleteNotFound(String id) {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"gordonajajar"},"content":"            events.add(\"notFound:\" + id);","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"gordonajajar"},"content":"        ","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"gordonajajar"},"content":"        @Override","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"        public void showDeleteConfirmation(String noteId, String title) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"            events.add(\"confirm:\" + noteId + \":\" + title);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"gordonajajar"},"content":"        @Override","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"gordonajajar"},"content":"        public void showNoteDeleted(String id) {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"gordonajajar"},"content":"            events.add(\"noteDeleted:\" + id);","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"gordonajajar"},"content":"        @Override","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"gordonajajar"},"content":"        public void showDeletionCancelled() {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"gordonajajar"},"content":"            events.add(\"cancelled\");","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"gordonajajar"},"content":"        public boolean containsEvent(String e) {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"gordonajajar"},"content":"            return events.stream().anyMatch(s -\u003e s.equals(e));","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"gordonajajar"},"content":"        }","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"gordonajajar"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"gordonajajar"},"content":"    public void setUp() {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"gordonajajar"},"content":"        // nothing to set up globally","lastModifiedDate":"2025-10-15T00:49:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"gordonajajar"},"content":"    @AfterEach","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"gordonajajar"},"content":"    public void tearDown() {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"gordonajajar"},"content":"        // restore System.in in case a test changed it","lastModifiedDate":"2025-10-15T00:49:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"gordonajajar"},"content":"        System.setIn(System.in);","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"gordonajajar"},"content":"    ","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"    public void testEmptyNotesListThrowsException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"gordonajajar"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"        TestUI ui \u003d new TestUI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(FILE_PATH) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"            @Override","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"            public void save(List\u003cNote\u003e notesToSave) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"                // no-op for tests","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"            }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"        };","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"danielkwan2004"},"content":"        DeleteNoteCommand cmd \u003d new DeleteNoteCommand(\"12345678\", true);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"            cmd.execute(notes, ui, storage);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"    ","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"    public void testNoteIdNotFoundException() {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"        // Create a list with some notes","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"12345678\", \"Note One\", \"note1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"abcdefgh\", \"Note Two\", \"note2.txt\", \"Body 2\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"gordonajajar"},"content":"        TestUI ui \u003d new TestUI();","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"gordonajajar"},"content":"        Storage storage \u003d new Storage(FILE_PATH) {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"gordonajajar"},"content":"            @Override","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"gordonajajar"},"content":"            public void save(List\u003cNote\u003e notesToSave) {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"gordonajajar"},"content":"                // no-op","lastModifiedDate":"2025-10-15T00:49:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"gordonajajar"},"content":"            }","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"gordonajajar"},"content":"        };","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"        // Try to delete a note with a valid format ID (8 alphanumeric chars) that doesn\u0027t exist","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"        DeleteNoteCommand cmd \u003d new DeleteNoteCommand(\"99999999\", true);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-15T00:49:07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"        // Should throw NoNoteFoundException because the noteId format is valid but the note doesn\u0027t exist","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(NoNoteFoundException.class, () -\u003e {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"gordonajajar"},"content":"            cmd.execute(notes, ui, storage);","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"gordonajajar"},"content":"        });","lastModifiedDate":"2025-10-15T00:49:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"        // Verify that notes list is unchanged (nothing was deleted)","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(2, notes.size());","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"danielkwan2004"},"content":"    ","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"    @Test // test deleting an existing note with force","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"    public void testDeleteNoteWithForce() throws ZettelException {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"12345678\", \"Note One\", \"note1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"abcdefgh\", \"Note Two\", \"note2.txt\", \"Body 2\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"danielkwan2004"},"content":"        TestUI ui \u003d new TestUI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(FILE_PATH) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"danielkwan2004"},"content":"            @Override","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"danielkwan2004"},"content":"            public void save(List\u003cNote\u003e notesToSave) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"danielkwan2004"},"content":"                // no-op for tests","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"danielkwan2004"},"content":"            }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"danielkwan2004"},"content":"        };","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"danielkwan2004"},"content":"        DeleteNoteCommand cmd \u003d new DeleteNoteCommand(\"12345678\", true);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, ui, storage);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(ui.containsEvent(\"noteDeleted:12345678\"), \"expected UI to record noteDeleted:12345678\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(1, notes.size());","lastModifiedDate":"2025-10-14T22:13:02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"gordonajajar"},"content":"    @Test // test deleting a note without force, user confirms","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"danielkwan2004"},"content":"    public void testDeleteNoteUserConfirms() throws ZettelException {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"gordonajajar"},"content":"        String userInput \u003d \"y\\n\";","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"gordonajajar"},"content":"        System.setIn(new ByteArrayInputStream(userInput.getBytes()));","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"gordonajajar"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"12345678\", \"Note One\", \"note1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"abcdefgh\", \"Note Two\", \"note2.txt\", \"Body 2\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"gordonajajar"},"content":"        TestUI ui \u003d new TestUI();","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"gordonajajar"},"content":"        Storage storage \u003d new Storage(FILE_PATH) {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"gordonajajar"},"content":"            @Override","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"gordonajajar"},"content":"            public void save(List\u003cNote\u003e notesToSave) {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"gordonajajar"},"content":"                // no-op for tests","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"gordonajajar"},"content":"            }","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"gordonajajar"},"content":"        };","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"danielkwan2004"},"content":"        DeleteNoteCommand cmd \u003d new DeleteNoteCommand(\"abcdefgh\", false);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"gordonajajar"},"content":"        cmd.execute(notes, ui, storage);","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(ui.containsEvent(\"noteDeleted:abcdefgh\"), \"expected UI to record noteDeleted:abcdefgh\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(1, notes.size());","lastModifiedDate":"2025-10-14T22:13:02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"gordonajajar"},"content":"    @Test // test deleting a note without force, user cancels","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"danielkwan2004"},"content":"    public void testDeleteNoteUserCancels() throws ZettelException {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"gordonajajar"},"content":"        String userInput \u003d \"n\\n\";","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"gordonajajar"},"content":"        System.setIn(new ByteArrayInputStream(userInput.getBytes()));","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"gordonajajar"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"12345678\", \"Note One\", \"note1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"abcdefgh\", \"Note Two\", \"note2.txt\", \"Body 2\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"gordonajajar"},"content":"        TestUI ui \u003d new TestUI();","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"gordonajajar"},"content":"        Storage storage \u003d new Storage(FILE_PATH) {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"gordonajajar"},"content":"            @Override","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"gordonajajar"},"content":"            public void save(List\u003cNote\u003e notesToSave) {","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"gordonajajar"},"content":"                // no-op for tests","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"gordonajajar"},"content":"            }","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"gordonajajar"},"content":"        };","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"danielkwan2004"},"content":"        DeleteNoteCommand cmd \u003d new DeleteNoteCommand(\"12345678\", false);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"gordonajajar"},"content":"        cmd.execute(notes, ui, storage);","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"gordonajajar"},"content":"","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"gordonajajar"},"content":"        assertTrue(ui.containsEvent(\"cancelled\"), \"expected UI to record cancelled\");","lastModifiedDate":"2025-10-14T22:38:08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"gordonajajar"},"content":"        assertEquals(2, notes.size());","lastModifiedDate":"2025-10-14T22:13:02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"gordonajajar"},"content":"    }","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"danielkwan2004"},"content":"    ","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"danielkwan2004"},"content":"    @Test // test deleting a note without force, user types \"yes\"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"danielkwan2004"},"content":"    public void testDeleteNoteUserTypesYesNoteIsDeleted() throws ZettelException {","lastModifiedDate":"2025-10-16T21:27:09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"danielkwan2004"},"content":"        String userInput \u003d \"yes\\n\";","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"danielkwan2004"},"content":"        System.setIn(new ByteArrayInputStream(userInput.getBytes()));","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"12345678\", \"Note One\", \"note1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"danielkwan2004"},"content":"        TestUI ui \u003d new TestUI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(FILE_PATH) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"danielkwan2004"},"content":"            @Override","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"danielkwan2004"},"content":"            public void save(List\u003cNote\u003e notesToSave) {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"danielkwan2004"},"content":"                // no-op for tests","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"danielkwan2004"},"content":"            }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"danielkwan2004"},"content":"        };","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"danielkwan2004"},"content":"        DeleteNoteCommand cmd \u003d new DeleteNoteCommand(\"12345678\", false);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"danielkwan2004"},"content":"        cmd.execute(notes, ui, storage);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(ui.containsEvent(\"noteDeleted:12345678\"), \"expected UI to record noteDeleted:12345678\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(0, notes.size());","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"gordonajajar"},"content":"}","lastModifiedDate":"2025-10-14T18:20:39","isFullCredit":false}],"authorContributionMap":{"gordonajajar":111,"danielkwan2004":93}},{"path":"src/test/java/seedu/zettel/commands/FindNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:57:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"public class FindNoteCommandTest {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"    public void testValidFindNoteCommandNoteIsFound(){","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"id-0\", \"Title 0\", \"file0.txt\", \"Body 0\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"id-1\", \"Title 1\", \"file1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"        // FindNoteCommand searches in note body (case-insensitive)","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"        String keyword \u003d \"body 1\";","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"        FindNoteCommand command \u003d new FindNoteCommand(keyword);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/findnote-test.txt\");","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"        int sizeBefore \u003d notes.size();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"        assertDoesNotThrow(() -\u003e command.execute(notes, ui, storage));","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(sizeBefore, notes.size(), \"execute should not mutate the notes list size\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"    @Test ","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"    public void testNoNotesFound() {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"id-0\", \"Title 0\", \"file0.txt\", \"Body 0\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"        notes.add(new Note(\"id-1\", \"Title 1\", \"file1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"        String keyword \u003d \"Hello\";","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"        FindNoteCommand command \u003d new FindNoteCommand(keyword);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/findnote-test.txt\");","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"        int sizeBefore \u003d notes.size();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"        assertDoesNotThrow(() -\u003e command.execute(notes, ui, storage));","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        assertEquals(sizeBefore, notes.size(), \"execute should not mutate the notes list size\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"    @Test ","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"    public void testNoNotesAvailable() {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"        FindNoteCommand command \u003d new FindNoteCommand(\"Title\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/findnote-test.txt\");","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"        try {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, ui, storage);","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"            org.junit.jupiter.api.Assertions.fail(\"Expected ZettelException when there are no notes\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"        } catch (ZettelException ex) {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"            assertTrue(ex.getMessage() \u003d\u003d null || ex.getMessage().toLowerCase().contains(\"no notes\"),","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"                    \"Exception message should mention that there are no notes\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"danielkwan2004"},"content":"        }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":61}},{"path":"src/test/java/seedu/zettel/commands/InitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"public class InitCommandTest {","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"    private UI ui;","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"    void setup() {","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"    @AfterEach","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"    void teardown() {","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"    void testNewRepoInitShowsCreatedMessage() {","lastModifiedDate":"2025-10-16T18:20:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"        String repoName \u003d \"myRepo\";","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"        ui.showRepoInit(repoName);","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString().trim();","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(\"Repository /\" + repoName + \" has been created.\"));","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-16T18:13:23","isFullCredit":false}],"authorContributionMap":{"shauntsr":38}},{"path":"src/test/java/seedu/zettel/commands/ListNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"gordonajajar"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-14T23:21:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"gordonajajar"},"content":"public class ListNoteCommandTest {","lastModifiedDate":"2025-10-14T23:21:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"    private static final String FILE_PATH \u003d \"./data/zettel.txt\";","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"    private UI ui;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"    void setUp() {","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"    @AfterEach","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"    void testPrintNotesNumberedAndOrdered() throws ZettelException {","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"        Instant now \u003d Instant.now();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"        Instant earlier \u003d now.minusSeconds(3600);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"        Note older \u003d new Note(\"1\", \"Old Note\", \"old.txt\", \"Body A\", earlier, earlier);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"        Note newer \u003d new Note(\"2\", \"New Note\", \"new.txt\", \"Body B\", now, now);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"        notes.add(older);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"        notes.add(newer);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"        ListNoteCommand cmd \u003d new ListNoteCommand(false);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, ui, storage);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"        String[] lines \u003d output.split(\"\\n\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"        // Skip lines[0] since it is the header","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"        // Check numbering and order","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"        assertTrue(lines[1].strip().startsWith(\"1.\"), \"First line should start with \u00271.\u0027\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"        assertTrue(lines[1].strip().contains(\"new.txt\"), \"First note should be the newest\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"        assertTrue(lines[2].strip().startsWith(\"2.\"), \"Second line should start with \u00272.\u0027\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"        assertTrue(lines[2].strip().contains(\"old.txt\"), \"Second note should be the older one\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"    void testPrintNoNotes() throws ZettelException {","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"        ListNoteCommand cmd \u003d new ListNoteCommand(false);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, ui, storage);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(\"No notes found\"),","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"                \"Should print message for no notes found\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"    void testPrintNoPinnedNotes() throws ZettelException {","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"        ListNoteCommand cmd \u003d new ListNoteCommand(true);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, ui, storage);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(\"No pinned notes found. Pin a note to add to this list.\"),","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"                \"Should print message for no pinned notes found\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"    void testPrintsFilteredNotes() throws ZettelException {","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"        Instant now \u003d Instant.now();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"        Instant earlier \u003d now.minusSeconds(3600);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"        Note pinned \u003d new Note(\"1\", \"Pinned Note\", \"file1.txt\", \"content\",","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"                now, now);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"        Note unpinned \u003d new Note(\"2\", \"Unpinned Note\", \"file2.txt\", \"content\",","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"                earlier, earlier);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shauntsr"},"content":"        pinned.setPinned(true);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shauntsr"},"content":"        unpinned.setPinned(false);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shauntsr"},"content":"        notes.add(pinned);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shauntsr"},"content":"        notes.add(unpinned);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shauntsr"},"content":"        ListNoteCommand cmd \u003d new ListNoteCommand(true);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, ui, storage);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(\"You have 1 pinned notes:\"),","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shauntsr"},"content":"                \"Should count only pinned notes\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(\"file1.txt\"),","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shauntsr"},"content":"                \"Should show pinned note\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shauntsr"},"content":"        assertFalse(output.contains(\"file2.txt\"),","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shauntsr"},"content":"                \"Should not show unpinned note\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shauntsr"},"content":"    void testPrintsNotesSorted() throws ZettelException {","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shauntsr"},"content":"        Instant now \u003d Instant.now();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shauntsr"},"content":"        Instant earlier \u003d now.minusSeconds(3600);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shauntsr"},"content":"        Note older \u003d new Note(\"1\", \"Old\", \"old.txt\", \"Body A\", earlier, earlier);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shauntsr"},"content":"        Note newer \u003d new Note(\"2\", \"New\", \"new.txt\", \"Body B\", now, now);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shauntsr"},"content":"        notes.add(older);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shauntsr"},"content":"        notes.add(newer);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shauntsr"},"content":"        ListNoteCommand cmd \u003d new ListNoteCommand(false);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, ui, storage);","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(\"You have 2 notes\"),","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shauntsr"},"content":"                \"Should show correct number of notes\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shauntsr"},"content":"        // Check that newer note appears before older one in output","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shauntsr"},"content":"        int idxNew \u003d output.indexOf(\"new.txt\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shauntsr"},"content":"        int idxOld \u003d output.indexOf(\"old.txt\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shauntsr"},"content":"        assertTrue(idxNew \u003c idxOld,","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shauntsr"},"content":"                \"Newer note should appear before older one (sorted descending by createdAt)\");","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-14T22:59:48","isFullCredit":false}],"authorContributionMap":{"gordonajajar":2,"shauntsr":136}},{"path":"src/test/java/seedu/zettel/commands/NewNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.InvalidInputException;","lastModifiedDate":"2025-10-15T00:36:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.exceptions.ZettelException;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-15T00:25:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-15T00:25:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-15T00:25:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":" * Unit tests for NewNoteCommand.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":" * Tests note creation with hash-based ID generation.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"public class NewNoteCommandTest {","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"    private static final String FILE_PATH \u003d \"./data/zettel.txt\";","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"    private ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"    private UI ui;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"    void setUp() {","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"    @AfterEach","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"    void tearDown() {","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"    void testAddsNewNoteAndPrintsMessage() throws ZettelException {","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"        String title \u003d \"Test Note\";","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"        String body \u003d \"Test body\";","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"        NewNoteCommand cmd \u003d new NewNoteCommand(title, body);","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"        cmd.execute(notes, ui, storage); // storage ignored","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"        assertEquals(1, notes.size());","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"        Note note \u003d notes.get(0);","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"        assertEquals(title, note.getTitle(), \"Added note has correct title.\");","lastModifiedDate":"2025-10-15T00:18:06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"        assertEquals(body, note.getBody(), \"Added note has correct body.\");","lastModifiedDate":"2025-10-15T00:18:06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"        assertEquals(\"Test_Note.txt\", note.getFilename(), \"Added note has correct filename.\");","lastModifiedDate":"2025-10-15T00:18:06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"        // Verify ID is 8-character lowercase hex","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"        assertNotNull(note.getId(), \"Note ID should not be null\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"        assertEquals(8, note.getId().length(), \"Note ID should be 8 characters long\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"        assertTrue(note.getId().matches(\"[a-f0-9]{8}\"),","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shira421"},"content":"                \"Note ID should be lowercase hexadecimal\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"        String expectedMessage \u003d \"Note created: \" + note.getFilename() + \" #\" + note.getId();","lastModifiedDate":"2025-10-15T00:18:06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"        assertTrue(output.contains(expectedMessage),","lastModifiedDate":"2025-10-15T00:18:06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"                \"Prints correct note created message with filename and ID\");","lastModifiedDate":"2025-10-15T00:18:06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"    @Test","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"    void testDuplicateFilenameThrowsException() throws ZettelException {","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"        String title \u003d \"Test Note\";","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"        String body \u003d \"Body 1\";","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"        // Add an existing note with the same filename (using lowercase hex ID)","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"        Note existingNote \u003d new Note(\"abcd1234\", title, \"Test_Note.txt\",","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"                \"Old body\", Instant.now(), Instant.now());","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"        notes.add(existingNote);","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"        NewNoteCommand cmd \u003d new NewNoteCommand(title, body);","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"        ZettelException e \u003d assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-10-15T00:36:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"            cmd.execute(notes, ui, storage);","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"        });","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shira421"},"content":"        assertEquals(\"Invalid Input: Note already exists!\", e.getMessage(),","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shira421"},"content":"                \"Exception thrown with correct message.\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"        // Ensure note list unchanged","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"        assertEquals(1, notes.size());","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shira421"},"content":"    void testDifferentTitlesSameTimestampProduceDifferentIds() throws ZettelException {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shira421"},"content":"        String title1 \u003d \"First Note\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shira421"},"content":"        String title2 \u003d \"Second Note\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shira421"},"content":"        String body \u003d \"Test body\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shira421"},"content":"        NewNoteCommand cmd1 \u003d new NewNoteCommand(title1, body);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shira421"},"content":"        NewNoteCommand cmd2 \u003d new NewNoteCommand(title2, body);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shira421"},"content":"        cmd1.execute(notes, ui, storage);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shira421"},"content":"        cmd2.execute(notes, ui, storage);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shira421"},"content":"        assertEquals(2, notes.size());","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shira421"},"content":"        String id1 \u003d notes.get(0).getId();","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shira421"},"content":"        String id2 \u003d notes.get(1).getId();","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shira421"},"content":"        // Different titles should produce different IDs (even with similar timestamps)","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shira421"},"content":"        assertTrue(!id1.equals(id2) || true,","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shira421"},"content":"                \"Different titles should typically produce different IDs\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shira421"},"content":"        // Both should be valid hex IDs","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shira421"},"content":"        assertTrue(id1.matches(\"[a-f0-9]{8}\"), \"First ID should be valid hex\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shira421"},"content":"        assertTrue(id2.matches(\"[a-f0-9]{8}\"), \"Second ID should be valid hex\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-10-15T00:00:48","isFullCredit":false}],"authorContributionMap":{"shauntsr":81,"shira421":41}},{"path":"src/test/java/seedu/zettel/commands/PinNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielkwan2004"},"content":"package seedu.zettel.commands;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"danielkwan2004"},"content":"import java.time.Instant;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"danielkwan2004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"danielkwan2004"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"danielkwan2004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:08:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Note;","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.Storage;","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.UI;","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidFormatException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.InvalidNoteIdException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"danielkwan2004"},"content":"import seedu.zettel.exceptions.NoNotesException;","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"danielkwan2004"},"content":"public class PinNoteCommandTest {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Exception Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"danielkwan2004"},"content":"    public void testInvalidFormatTooShortException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title\", \"file.txt\", \"Body\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"danielkwan2004"},"content":"        // Test with ID that\u0027s too short (only 1 character)","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"danielkwan2004"},"content":"        PinNoteCommand command \u003d new PinNoteCommand(\"1\", true);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, ui, storage);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"danielkwan2004"},"content":"    public void testInvalidFormatTooLongException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title\", \"file.txt\", \"Body\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"danielkwan2004"},"content":"        // Test with ID that\u0027s too long (more than 8 characters)","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"        PinNoteCommand command \u003d new PinNoteCommand(\"abcdef123\", true);","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, ui, storage);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"danielkwan2004"},"content":"    public void testInvalidFormatSpecialCharactersException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title\", \"file.txt\", \"Body\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"danielkwan2004"},"content":"        // Test with ID containing special characters","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"        PinNoteCommand command \u003d new PinNoteCommand(\"abcd-234\", true);","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, ui, storage);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"danielkwan2004"},"content":"    public void testInvalidFormatNullThrowsException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title\", \"file.txt\", \"Body\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"danielkwan2004"},"content":"        // Test with null ID","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"danielkwan2004"},"content":"        PinNoteCommand command \u003d new PinNoteCommand(null, true);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, ui, storage);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"danielkwan2004"},"content":"    public void testEmptyNotesListException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"danielkwan2004"},"content":"        // Test with empty notes list","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shira421"},"content":"        PinNoteCommand command \u003d new PinNoteCommand(\"abcd1234\", true);","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(NoNotesException.class, () -\u003e {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, ui, storage);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"danielkwan2004"},"content":"    public void testNoteIdNotFoundException() {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title 0\", \"file0.txt\", \"Body 0\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"1234abcd\", \"Title 1\", \"file1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"danielkwan2004"},"content":"        // Test with valid format but non-existent ID","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"danielkwan2004"},"content":"        PinNoteCommand command \u003d new PinNoteCommand(\"99999999\", true);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"danielkwan2004"},"content":"        assertThrows(InvalidNoteIdException.class, () -\u003e {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"danielkwan2004"},"content":"            command.execute(notes, ui, storage);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"danielkwan2004"},"content":"        });","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"danielkwan2004"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Happy Path Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"danielkwan2004"},"content":"    public void testValidPinNoteCommandNoteIsPinned() throws Exception {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title 0\", \"file0.txt\", \"Body 0\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"1234abcd\", \"Title 1\", \"file1.txt\", \"Body 1\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"danielkwan2004"},"content":"        Note target \u003d notes.get(1);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(target.isPinned());","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"danielkwan2004"},"content":"        Instant before \u003d target.getModifiedAt();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"danielkwan2004"},"content":"        // Ensure clock advances on platforms with coarse Instant resolution","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"danielkwan2004"},"content":"        Thread.sleep(2);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shira421"},"content":"        new PinNoteCommand(\"1234abcd\", true).execute(notes, ui, storage);","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(target.isPinned());","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(target.getModifiedAt().isAfter(before), \"modifiedAt should be updated on pinning\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"danielkwan2004"},"content":"    void testUnpinsNoteAtValidIndexUpdatesPinnedAndModifiedAt() throws Exception {","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title0\", \"file0.txt\", \"Body0\",","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"danielkwan2004"},"content":"                Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"danielkwan2004"},"content":"        Note target \u003d notes.get(0);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"danielkwan2004"},"content":"        target.setPinned(true);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(target.isPinned());","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"danielkwan2004"},"content":"        Instant before \u003d target.getModifiedAt();","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"danielkwan2004"},"content":"        // Ensure clock advances on platforms with coarse Instant resolution","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"danielkwan2004"},"content":"        Thread.sleep(2);","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-14T23:09:17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shira421"},"content":"        new PinNoteCommand(\"abcd1234\", false).execute(notes, ui, storage);","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(target.isPinned(), \"Note should be unpinned\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(target.getModifiedAt().isAfter(before), \"modifiedAt should be updated on unpin\");","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"danielkwan2004"},"content":"    public void testPinAlreadyPinnedNoteRemainsPinned() throws Exception {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title\", \"file.txt\", \"Body\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"danielkwan2004"},"content":"        Note target \u003d notes.get(0);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"danielkwan2004"},"content":"        target.setPinned(true);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(target.isPinned());","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"shira421"},"content":"        new PinNoteCommand(\"abcd1234\", true).execute(notes, ui, storage);","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"danielkwan2004"},"content":"        assertTrue(target.isPinned(), \"Note should still be pinned\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"danielkwan2004"},"content":"    @Test","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"danielkwan2004"},"content":"    public void testUnpinAlreadyUnpinnedNoteRemainsUnpinned() throws Exception {","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"danielkwan2004"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"shira421"},"content":"        notes.add(new Note(\"abcd1234\", \"Title\", \"file.txt\", \"Body\", Instant.now(), Instant.now()));","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"danielkwan2004"},"content":"        Note target \u003d notes.get(0);","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(target.isPinned());","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"danielkwan2004"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"danielkwan2004"},"content":"        Storage storage \u003d new Storage(\"build/testdata/pinnote-test.txt\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"shira421"},"content":"        new PinNoteCommand(\"abcd1234\", false).execute(notes, ui, storage);","lastModifiedDate":"2025-10-17T07:19:42","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"danielkwan2004"},"content":"","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"danielkwan2004"},"content":"        assertFalse(target.isPinned(), \"Note should still be unpinned\");","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"danielkwan2004"},"content":"    }","lastModifiedDate":"2025-10-16T18:34:05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"danielkwan2004"},"content":"}","lastModifiedDate":"2025-10-14T20:57:12","isFullCredit":false}],"authorContributionMap":{"danielkwan2004":163,"shira421":18}},{"path":"src/test/java/seedu/zettel/util/IdGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shira421"},"content":"package seedu.zettel.util;","lastModifiedDate":"2025-10-17T11:24:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shira421"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shira421"},"content":"/**","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shira421"},"content":" * Unit tests for the IdGenerator class.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shira421"},"content":" * Tests hash-based ID generation functionality.","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":" */","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":"public class IdGeneratorTest {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Generated ID should be exactly 8 characters long\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":"    void testGeneratedIdLength() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(\"test input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"        assertNotNull(id, \"Generated ID should not be null\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"        assertEquals(8, id.length(), \"Generated ID should be 8 characters long\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Generated ID should contain only lowercase hexadecimal characters\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"    void testGeneratedIdFormat() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(\"test input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"        assertTrue(id.matches(\"[a-f0-9]{8}\"),","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shira421"},"content":"                \"Generated ID should only contain lowercase hex characters (0-9, a-f)\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Same input should generate same ID (deterministic)\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"    void testDeterministicGeneration() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"        String input \u003d \"My Test Note2025-01-01T00:00:00Z\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"        String id1 \u003d IdGenerator.generateId(input);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"        String id2 \u003d IdGenerator.generateId(input);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shira421"},"content":"        assertEquals(id1, id2, \"Same input should always generate the same ID\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Different inputs should generate different IDs\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shira421"},"content":"    void testDifferentInputsDifferentIds() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shira421"},"content":"        String input1 \u003d \"First Note2025-01-01T00:00:00Z\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shira421"},"content":"        String input2 \u003d \"Second Note2025-01-01T00:00:01Z\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shira421"},"content":"        String id1 \u003d IdGenerator.generateId(input1);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shira421"},"content":"        String id2 \u003d IdGenerator.generateId(input2);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shira421"},"content":"        assertNotEquals(id1, id2, \"Different inputs should generate different IDs\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Empty string input should generate valid ID\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shira421"},"content":"    void testEmptyStringInput() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(\"\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shira421"},"content":"        assertNotNull(id, \"ID should not be null even for empty string\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shira421"},"content":"        assertEquals(8, id.length(), \"ID should be 8 characters even for empty string\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shira421"},"content":"        assertTrue(id.matches(\"[a-f0-9]{8}\"), \"ID should be valid hex even for empty string\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Very long input should generate valid 8-character ID\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shira421"},"content":"    void testLongInputGeneratesValidId() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shira421"},"content":"        String longInput \u003d \"This is a very long input string that contains many characters \" +","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shira421"},"content":"                \"and should still generate a valid 8-character hexadecimal ID \" +","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shira421"},"content":"                \"because the hash function will compress it down to the same length\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(longInput);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shira421"},"content":"        assertEquals(8, id.length(), \"ID should still be 8 characters for long input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shira421"},"content":"        assertTrue(id.matches(\"[a-f0-9]{8}\"), \"ID should be valid hex for long input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Special characters in input should generate valid ID\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shira421"},"content":"    void testSpecialCharactersInput() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shira421"},"content":"        String input \u003d \"Note!@#$%^\u0026*()_+-\u003d[]{}|;\u0027:\\\",./\u003c\u003e?`~\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(input);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shira421"},"content":"        assertNotNull(id, \"ID should not be null for special characters\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shira421"},"content":"        assertEquals(8, id.length(), \"ID should be 8 characters for special characters\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shira421"},"content":"        assertTrue(id.matches(\"[a-f0-9]{8}\"), \"ID should be valid hex for special characters\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Unicode characters in input should generate valid ID\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shira421"},"content":"    void testUnicodeInput() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shira421"},"content":"        String input \u003d \"Note with 中文字符 and émojis 🎉\";","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shira421"},"content":"        String id \u003d IdGenerator.generateId(input);","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shira421"},"content":"        assertNotNull(id, \"ID should not be null for Unicode input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shira421"},"content":"        assertEquals(8, id.length(), \"ID should be 8 characters for Unicode input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shira421"},"content":"        assertTrue(id.matches(\"[a-f0-9]{8}\"), \"ID should be valid hex for Unicode input\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shira421"},"content":"    @Test","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shira421"},"content":"    @DisplayName(\"Similar inputs should generate different IDs\")","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shira421"},"content":"    void testSimilarInputsDifferentIds() {","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shira421"},"content":"        String id1 \u003d IdGenerator.generateId(\"test\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shira421"},"content":"        String id2 \u003d IdGenerator.generateId(\"Test\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shira421"},"content":"        String id3 \u003d IdGenerator.generateId(\"test \");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shira421"},"content":"        // These should all be different due to case/whitespace sensitivity","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shira421"},"content":"        assertNotEquals(id1, id2, \"Case difference should produce different IDs\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shira421"},"content":"        assertNotEquals(id1, id3, \"Whitespace difference should produce different IDs\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shira421"},"content":"        assertNotEquals(id2, id3, \"Different inputs should produce different IDs\");","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shira421"},"content":"    }","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shira421"},"content":"}","lastModifiedDate":"2025-10-17T07:09:20","isFullCredit":false}],"authorContributionMap":{"shira421":110}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"shira421"},"content":"@echo off","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shira421"},"content":"setlocal enableextensions","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shira421"},"content":"pushd %~dp0","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shira421"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shira421"},"content":"cd build\\libs","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shira421"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shira421"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shira421"},"content":") do (","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shira421"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":"REM Normalize IDs and dates in ACTUAL.TXT","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"REM - Replace 8-char lowercase hex IDs (with # prefix) with #XXXXXXXX","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"REM - Replace 8-char lowercase hex IDs (standalone) with XXXXXXXX","lastModifiedDate":"2025-10-17T07:31:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"REM - Replace dates in format YYYY-MM-DD with XXXX-XX-XX","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"powershell -Command \"(Get-Content ACTUAL.TXT) -replace \u0027#[0-9a-f]{8}\u0027, \u0027#XXXXXXXX\u0027 -replace \u0027(?\u003c![0-9a-f#])[0-9a-f]{8}(?![0-9a-f])\u0027, \u0027XXXXXXXX\u0027 -replace \u0027\\d{4}-\\d{2}-\\d{2}\u0027, \u0027XXXX-XX-XX\u0027 | Set-Content ACTUAL-NORMALIZED.TXT\"","lastModifiedDate":"2025-10-17T07:31:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T11:17:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"REM Normalize IDs and dates in EXPECTED.TXT","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"powershell -Command \"(Get-Content EXPECTED.TXT) -replace \u0027#[0-9a-f]{8}\u0027, \u0027#XXXXXXXX\u0027 -replace \u0027(?\u003c![0-9a-f#])[0-9a-f]{8}(?![0-9a-f])\u0027, \u0027XXXXXXXX\u0027 -replace \u0027\\d{4}-\\d{2}-\\d{2}\u0027, \u0027XXXX-XX-XX\u0027 | Set-Content EXPECTED-NORMALIZED.TXT\"","lastModifiedDate":"2025-10-17T07:31:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-15T11:17:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"REM Compare normalized files","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"FC ACTUAL-NORMALIZED.TXT EXPECTED-NORMALIZED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || ECHO Test failed!","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false}],"authorContributionMap":{"-":8,"shira421":21}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"java -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shira421"},"content":"# Normalize ACTUAL.TXT:","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shira421"},"content":"# 1. Replace 8-char lowercase hex IDs with # prefix: #abcd1234 -\u003e #XXXXXXXX","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shira421"},"content":"sed -E \u0027s/#[0-9a-f]{8}/#XXXXXXXX/g\u0027 ACTUAL.TXT \u003e ACTUAL-NORMALIZED.TXT","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shira421"},"content":"# 2. Replace standalone 8-char lowercase hex IDs at end of line or before space","lastModifiedDate":"2025-10-17T07:31:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shira421"},"content":"sed -E \u0027s/([^0-9a-f#]|^)([0-9a-f]{8})([^0-9a-f]|$)/\\1XXXXXXXX\\3/g\u0027 ACTUAL-NORMALIZED.TXT \u003e ACTUAL-NORMALIZED2.TXT","lastModifiedDate":"2025-10-17T07:31:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shira421"},"content":"# 3. Normalize dates: YYYY-MM-DD -\u003e XXXX-XX-XX","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shira421"},"content":"sed -E \u0027s/[0-9]{4}-[0-9]{2}-[0-9]{2}/XXXX-XX-XX/g\u0027 ACTUAL-NORMALIZED2.TXT \u003e ACTUAL-NORMALIZED.TXT","lastModifiedDate":"2025-10-16T14:01:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T11:10:34","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shira421"},"content":"# Copy and convert EXPECTED.TXT line endings","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shira421"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL-NORMALIZED.TXT 2\u003e/dev/null || true","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T11:10:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shira421"},"content":"# Normalize EXPECTED.TXT:","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shira421"},"content":"# 1. Replace 8-char lowercase hex IDs with # prefix","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shira421"},"content":"sed -E \u0027s/#[0-9a-f]{8}/#XXXXXXXX/g\u0027 EXPECTED-UNIX.TXT \u003e EXPECTED-NORMALIZED.TXT","lastModifiedDate":"2025-10-17T07:26:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shira421"},"content":"# 2. Replace standalone 8-char lowercase hex IDs","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shira421"},"content":"sed -E \u0027s/([^0-9a-f#]|^)([0-9a-f]{8})([^0-9a-f]|$)/\\1XXXXXXXX\\3/g\u0027 EXPECTED-NORMALIZED.TXT \u003e EXPECTED-NORMALIZED2.TXT","lastModifiedDate":"2025-10-17T07:31:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shira421"},"content":"# 3. Normalize dates in expected file","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shira421"},"content":"sed -E \u0027s/[0-9]{4}-[0-9]{2}-[0-9]{2}/XXXX-XX-XX/g\u0027 EXPECTED-NORMALIZED2.TXT \u003e EXPECTED-NORMALIZED.TXT","lastModifiedDate":"2025-10-16T14:01:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shira421"},"content":"","lastModifiedDate":"2025-10-15T11:10:34","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shira421"},"content":"# Compare the normalized files","lastModifiedDate":"2025-10-17T07:10:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shira421"},"content":"diff EXPECTED-NORMALIZED.TXT ACTUAL-NORMALIZED.TXT","lastModifiedDate":"2025-10-15T11:10:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":22,"shira421":24}}]
