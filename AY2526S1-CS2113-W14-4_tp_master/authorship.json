[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17T23:25:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:18:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:18:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"    mainClass.set(\"internity.Internity\")","lastModifiedDate":"2025-10-02T23:12:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"    archiveBaseName.set(\"internity\")","lastModifiedDate":"2025-10-02T23:12:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24T00:28:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29T23:10:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-10-20T22:45:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":3,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"| Display                                                                                                                                                                                                                  |        Name         |             Github Profile              |             Portfolio             |","lastModifiedDate":"2025-09-25T19:21:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------:|:---------------------------------------:|:---------------------------------:|","lastModifiedDate":"2025-10-01T15:34:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"| \u003cimg src\u003d\"https://avatars.githubusercontent.com/u/178822703?v\u003d4\" width\u003d\"200\"\u003e                                                                                                                                            |   Luke Aidan Tan    | [Github](https://github.com/lukeai-tan) | [Portfolio](team/lukeai-tan.md) |","lastModifiedDate":"2025-10-27T01:27:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"| ![](https://media.licdn.com/dms/image/v2/D5603AQH18m1LLlHhQQ/profile-displayphoto-shrink_200_200/B56ZTQ9X.XHwAc-/0/1738672538423?e\u003d1761782400\u0026v\u003dbeta\u0026t\u003dBBDavdmKHKzxpc5_vBCRl2UWnQVq59z1hLevDBPoWZ0)                      | Vito Benedict Halim |   [Github](https://github.com/V1T0bh)   |  [Portfolio](team/VitoBHalim.md)  |","lastModifiedDate":"2025-09-25T19:21:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"| \u003cimg src\u003d\"https://i2-prod.mirror.co.uk/article29581465.ece/ALTERNATES/s1200d/0_Paddington-Bear-the-movie.jpg\" width\u003d\"200\"\u003e                                                                                               |     Luo Hongxun     | [Github](https://github.com/BestBearrr) |   [Portfolio](team/hongxun.md)    |","lastModifiedDate":"2025-10-01T15:34:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":"| \u003cimg src \u003d \"https://media.licdn.com/dms/image/v2/D5603AQGXs5Gmo4Mc_w/profile-displayphoto-shrink_800_800/B56ZVI6c92HsAc-/0/1740685037956?e\u003d1762387200\u0026v\u003dbeta\u0026t\u003dUehrMqcYM3baiqLZlEcjGiGGzzx_rp9AECZp6yAZ4KI\" width\u003d\"200\"\u003e |     Joanna Jung     |      [Github](https://github.com/joannaj00)      |  [Portfolio](team/joannaJung.md)  |","lastModifiedDate":"2025-10-01T15:04:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BenyAlbatross"},"content":"| ![](https://media.licdn.com/dms/image/v2/D5603AQFwr-8mb0WrOg/profile-displayphoto-shrink_200_200/B56ZdZbE8iGoAY-/0/1749551961451?e\u003d1762387200\u0026v\u003dbeta\u0026t\u003dL56PmTjCDQfV0fSfPcm8cy1xRJpJfjQqvkJonj-y-Qw)                      |     Benjamin Chek     |      [Github](https://github.com/BenyAlbatross)      |  [Portfolio](team/benjaminChek.md)  |","lastModifiedDate":"2025-10-01T14:57:24","isFullCredit":false}],"authorContributionMap":{"Joannaj00":1,"lukeai-tan":3,"BestBearrr":2,"-":2,"BenyAlbatross":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"1. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"2. [Design](#design)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"    - [Architecture](#Architecture)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"    - [UI Component](#ui-component)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"    - [Logic Component](#logic-component)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"    - [Model Component](#model-component)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"    - [Storage Component](#storage-component)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"    - [Common Classes](#common-classes)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"3. [Implementation](#implementation)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"4. [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"5. [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"   - [Product Scope](#product-scope)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"   - [User Stories](#user-stories)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"   - [Use Cases](#use-cases)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"   - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"   - [Glossary](#glossary)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"6. [Instructions for Manual Testing](#instructions-for-manual-testing)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"We would like to thank our TA Nigel Yeo, Prof Akshay and the CS2113 Team for their guidance.","lastModifiedDate":"2025-10-28T16:17:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"## Design","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"### Architecture","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"The Internity application follows a layered architecture inspired by the Model-View-Controller (MVC)","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"pattern, combined with the Command Pattern for handling user actions. This design separates concerns","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"clearly, allowing for modular, maintainable and extensible code.","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"![Architecture: Class Diagram](diagrams/ArchitectureCD.png)","lastModifiedDate":"2025-10-26T22:11:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"#### User Interaction","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"![User Interaction: Sequence Diagram](diagrams/UserInteractionSD.png)","lastModifiedDate":"2025-10-26T22:11:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"#### Layers","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"1. Model","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"   - Classes: `InternshipList`, `Internship`, `Date`, `Status`, `Storage`","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"   - Responsibilities:","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"     - Stores internship data","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"     - Provides operations like adding, deleting, updating, finding or listing internships.","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"     - Completely independent of UI and input logic.","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"2. View","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"   - Classes: `Ui`, `DashboardUi`","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"   - Responsibilities:","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"     - Does not contain any logic, just presenting data.","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"     - Takes data from the Model and formats it nicely for the user.","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"     - Views are used by commands to show information.","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"3. Controller","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"   - Classes: `InternityManager`, `CommandParser`, `CommandFactory`, `ArgumentParser`, `Command` subclasses","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"   - Responsibilities:","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"     - Interprets user commands and orchestrates interactions between Model and View.","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"     - Each `Command` operates on the Model and may trigger a View update.","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"     - Parsing, validation and command creation are the key parts of the Controller layer.","lastModifiedDate":"2025-10-26T19:14:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"### UI Component","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"### Logic Component","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"#### Overview","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"The Logic component is responsible for:","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"- Parsing user input commands.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"- Creating the appropriate `Command` object.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"- Executing that command to modify the Model or interact with the UI.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"#### Chosen Approach","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"This component follows the **Command Pattern**, which decouples the user input parsing from the execution of commands.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"Each command is represented as a subclass of the abstract `Command` class, encapsulating its execution logic. This","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"allows new commands to be easily added without modifying the core parsing or execution workflow.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"####  Class Diagram","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"![Logic Component: Class Diagram](diagrams/LogicComponentCD.png)","lastModifiedDate":"2025-10-26T22:11:36","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"The class diagram above shows the main classes involved in parsing, creating, and executing commands.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"- CommandParser is responsible for validating and splitting the input.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"- CommandFactory creates the appropriate Command object.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"- ArgumentParser is a static utility class used to parse arguments for commands that require them.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"- All Command subclasses implement the execute() method, following the Command Pattern.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"#### How it Works","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"1. User input (e.g. `add company/Google role/Software Engineer deadline/17-09-2025 pay/1000`) is received by CommandParser.","lastModifiedDate":"2025-10-28T16:17:56","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"2. The `CommandParser`:","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"   - Validates that the input is not empty or malformed.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"   - Splits the input into a command keyword and arguments.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"   - Passes them into the `CommandFactory`.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"3. The `CommandFactory`:","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"   - Matches the keyword to a corresponding `Command` subclass (e.g. `AddCommand`).","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"   - Uses the `ArgumentParser` to interpret argument strings.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"   - Returns a fully constructed `Command` object.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"4. The `Command` object executes its logic (e.g. adds a new internship to `InternshipList`).","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"5. Finally, the result of the execution is printed ot the console via the `Ui`.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"#### Sequence Diagram","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"The following sequence diagram illustrates how the Logic Component processes an input command:","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"![Logic Component: Sequence Diagram](diagrams/LogicComponentSD.png)","lastModifiedDate":"2025-10-26T22:11:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"#### Explaining Commands with and without arguments","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"1. Commands that **require** arguments ","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"   - `add`, `update`, `delete`, `find`, `list`, `username`","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"   - These commands need extra information to execute correctly:","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"     - `add` needs company, role, deadline and pay.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"     - `update` needs an index and fields to update.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"     - `find` needs a search keyword.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lukeai-tan"},"content":"2. Commands that **do not require** arguments","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lukeai-tan"},"content":"   - `exit`, `dashboard`","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"   - These commands operate independently of data supplied by the user.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lukeai-tan"},"content":"   - `CommandFactory` directly constructs the corresponding `Command` object (e.g. `ExitCommand` or `DashboardCommand`) without invoking `ArgumentParser`.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lukeai-tan"},"content":"This distinction is represented in the above sequence diagram\u0027s `alt` block, showing the two conditional flows:","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lukeai-tan"},"content":"- Top path (commands requiring arguments) -\u003e parsed via `ArgumentParser`.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lukeai-tan"},"content":"- Bottom path (commands not requiring arguments) -\u003e instantiated directly.","lastModifiedDate":"2025-10-26T17:34:38","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lukeai-tan"},"content":"### Model Component","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lukeai-tan"},"content":"### Storage Component","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BenyAlbatross"},"content":"**API**: [`Storage.java`](https://github.com/AY2526S1-CS2113-W14-4/tp/blob/master/src/main/java/internity/core/Storage.java)","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BenyAlbatross"},"content":"The `Storage` component:","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BenyAlbatross"},"content":"* can save internship data in a pipe-delimited text format, and read it back into corresponding objects.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BenyAlbatross"},"content":"* depends on classes in the `internity.core` package (specifically `Internship` and `InternshipList`) to load and save internship data.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BenyAlbatross"},"content":"* automatically creates the data directory and file if they don\u0027t exist.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BenyAlbatross"},"content":"* handles corrupted data gracefully by skipping invalid entries and logging warnings instead of crashing the application.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lukeai-tan"},"content":"### Common Classes","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lukeai-tan"},"content":"## Implementation","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BenyAlbatross"},"content":"### Delete feature","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BenyAlbatross"},"content":"The delete mechanism is facilitated by `DeleteCommand`. It extends `Command` with an index field, internally stored as a 0-based integer. Additionally, it implements the following operation:","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BenyAlbatross"},"content":"* `DeleteCommand.execute()` — Removes the internship at the specified index from the `InternshipList`.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BenyAlbatross"},"content":"Given below is an example usage scenario and how the delete mechanism behaves at each step.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BenyAlbatross"},"content":"Step 1. The user launches the application and the `InternshipList` contains 3 internships. The user executes `delete 2` to delete the 2nd internship in the list.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BenyAlbatross"},"content":"Step 2. The `CommandParser` parses the input and extracts the command word \"delete\" and arguments \"2\".","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BenyAlbatross"},"content":"Step 3. The `CommandFactory` uses `ArgumentParser` to convert the user\u0027s 1-based index (2) to a 0-based index (1) and validates that it is within bounds.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BenyAlbatross"},"content":"Step 4. A `DeleteCommand` object is created with index 1 and its `execute()` method is called.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BenyAlbatross"},"content":"Step 5. `DeleteCommand.execute()` retrieves the internship at index 1, removes it from `InternshipList`, and displays a success message showing the deleted internship details and the updated list size.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BenyAlbatross"},"content":"Step 6. After execution, `Storage.save()` is automatically called to persist the changes to disk.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BenyAlbatross"},"content":"#### Design considerations","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BenyAlbatross"},"content":"**Aspect: Index base convention**","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BenyAlbatross"},"content":"* **Alternative 1 (current choice):** Users provide 1-based indices, converted to 0-based internally in `ArgumentParser`.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BenyAlbatross"},"content":"  * Pros: More intuitive for users who see numbered lists starting from 1.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BenyAlbatross"},"content":"  * Cons: Requires conversion logic and careful management of the conversion point.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BenyAlbatross"},"content":"* **Alternative 2:** Use 0-based indices throughout, including in user-facing output.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BenyAlbatross"},"content":"  * Pros: Simpler implementation with no conversion needed.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BenyAlbatross"},"content":"  * Cons: Less intuitive for users unfamiliar with programming conventions.","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-24T03:20:40","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BestBearrr"},"content":"### Find feature","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BestBearrr"},"content":"The find mechanism is implemented by the `FindCommand` class, which allows users to search for internships based on a","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BestBearrr"},"content":"keyword that matches either the company name or the role of the internship.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BestBearrr"},"content":"The FindCommand class extends Command and consists of the following key components and operations:","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BestBearrr"},"content":"* FindCommand.execute() — Executes the command by searching for internships that match the provided keyword.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BestBearrr"},"content":"The search looks for matching company or role names.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BestBearrr"},"content":"### Class and Method Breakdown","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BestBearrr"},"content":"#### 1. `FindCommand` Constructor","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BestBearrr"},"content":"- **Purpose**: Initialises a `FindCommand` object with a given keyword.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BestBearrr"},"content":"- **Signature**:","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BestBearrr"},"content":"    ```java","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BestBearrr"},"content":"    public FindCommand(String keyword)","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BestBearrr"},"content":"    ```","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BestBearrr"},"content":"- **Parameters**:","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BestBearrr"},"content":"    - `keyword`: The keyword to search for in the company or role fields of the internships.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BestBearrr"},"content":"#### 2. `FindCommand.execute()`","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BestBearrr"},"content":"- **Purpose**: Executes the find command, which triggers a search for internships matching the keyword.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BestBearrr"},"content":"- **Signature**:","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BestBearrr"},"content":"    ```java","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BestBearrr"},"content":"    public void execute() throws InternityException","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BestBearrr"},"content":"    ```","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BestBearrr"},"content":"- **Steps**:","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BestBearrr"},"content":"    1. Logs the command execution start.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BestBearrr"},"content":"    2. Calls `InternshipList.findInternship(keyword)` to filter and search through the list of internships.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BestBearrr"},"content":"    3. Logs the success of the operation.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BestBearrr"},"content":"#### 3. `InternshipList.findInternship()`","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BestBearrr"},"content":"- **Purpose**: Filters and returns internships whose company or role contains the given keyword, case-insensitively.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BestBearrr"},"content":"- **Signature**:","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"BestBearrr"},"content":"    ```java","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"BestBearrr"},"content":"    public static void findInternship(String keyword)","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"BestBearrr"},"content":"    ```","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BestBearrr"},"content":"- **Parameters**:","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"BestBearrr"},"content":"    - `keyword`: The string to search for in the company or role names of internships.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"BestBearrr"},"content":"- **Implementation**:","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"BestBearrr"},"content":"    - Internships are filtered using a stream to check if the keyword exists in either the company name or the role.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"BestBearrr"},"content":"    - The filter is case-insensitive (`keyword.toLowerCase()`).","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"BestBearrr"},"content":"    - If no internships match the keyword, a message is printed: \"No internships with this Company or Role found.\"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"BestBearrr"},"content":"    - If matches are found, the results are passed to the `Ui.printFindInternship()` method for display.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"BestBearrr"},"content":"### Example Usage Scenario","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"BestBearrr"},"content":"1. **Step 1**: The user launches the application and executes a find command by typing `find Google`.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"BestBearrr"},"content":"2. **Step 2**: The `CommandParser` parses the input, extracting the command word `find` and the argument `Google`.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"BestBearrr"},"content":"3. **Step 3**: The `CommandFactory` creates a `FindCommand` with the keyword `Google`.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"BestBearrr"},"content":"4. **Step 4**: The `FindCommand.execute()` method is called, triggering the `InternshipList.findInternship()` method.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"BestBearrr"},"content":"5. **Step 5**: `findInternship()` filters the internships, looking for the keyword in both the company and role fields.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"BestBearrr"},"content":"If any matches are found, they are displayed through the UI.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"BestBearrr"},"content":"6. **Step 6**: If no matches are found, the user sees the message printed in the Ui: \"No internships with this Company or Role found.\"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"BestBearrr"},"content":"### Internals and Key Functions","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"BestBearrr"},"content":"- **Keyword Matching**: The keyword is matched against both the company and role fields of each internship in a","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"BestBearrr"},"content":"case-insensitive manner using the `toLowerCase()` method.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"BestBearrr"},"content":"  ","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"BestBearrr"},"content":"- **Logging**: The command execution is logged at the start and end, using the `Logger` class to track the command’s","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"BestBearrr"},"content":"lifecycle.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"BestBearrr"},"content":"- **UI Handling**: When matching internships are found, they are passed to the `Ui.printFindInternship()` method","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"BestBearrr"},"content":"for display. The UI is responsible for presenting the search results to the user.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"BestBearrr"},"content":"### Example Interaction","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"BestBearrr"},"content":"- **User Input**:","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"BestBearrr"},"content":"    ```sh","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"BestBearrr"},"content":"    find Google","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"BestBearrr"},"content":"    ```","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"BestBearrr"},"content":"- **Expected Output**:","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"BestBearrr"},"content":"    ```","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"BestBearrr"},"content":"    These are the matching internships in your list:","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"BestBearrr"},"content":"      1.  Google - Software Engineer | Deadline: 10-12-2025 | Pay: 100000 | Status: Pending","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"BestBearrr"},"content":"      2.  Alphabet - Googler | Deadline: 10-12-2025 | Pay: 150000 | Status: Pending","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"BestBearrr"},"content":"    ```","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"BestBearrr"},"content":"  If no internships match:","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"BestBearrr"},"content":"    ```","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"BestBearrr"},"content":"    No internships with this Company or Role found.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"BestBearrr"},"content":"    ```","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"BestBearrr"},"content":"### Edge Cases and Considerations","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"BestBearrr"},"content":"- **Case Insensitivity**: The search is case-insensitive, so `find google`, `find GOOGLE`, or `find GoOgLe`","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"BestBearrr"},"content":"would all match the same internships.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"BestBearrr"},"content":"- **Empty or Invalid Keyword**: If an empty string is provided as the keyword, the Ui will print","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"BestBearrr"},"content":"\"Invalid find command. Usage: find KEYWORD\"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"BestBearrr"},"content":"- **Performance**: The search mechanism uses a stream-based filter on the internship list, which is efficient","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"BestBearrr"},"content":"for moderate-sized datasets but may require optimisation for larger datasets.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"BestBearrr"},"content":"### Persistence","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"BestBearrr"},"content":"Since this is a search command and does not modify the underlying data, no changes are persisted to disk","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"BestBearrr"},"content":"during the `find` operation. However, any modifications (such as deletion or addition of internships) will require a subsequent call to `Storage.save()` to persist the changes.","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:02:07","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"lukeai-tan"},"content":"## Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"V1T0bh"},"content":"### Testing \u0026 Debugging tips related to architecture","lastModifiedDate":"2025-10-24T14:05:17","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-24T14:05:17","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"V1T0bh"},"content":"- Logic layer tests:","lastModifiedDate":"2025-10-24T14:05:17","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"V1T0bh"},"content":"    - Unit test Parser and each Command individually with a stubbed Model and Storage.","lastModifiedDate":"2025-10-24T14:05:17","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"V1T0bh"},"content":"    - Use test doubles (mocks/fakes) for Storage to avoid disk I/O during unit tests.","lastModifiedDate":"2025-10-24T14:05:17","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"V1T0bh"},"content":"- Model tests:","lastModifiedDate":"2025-10-24T14:05:17","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"V1T0bh"},"content":"    - Test ModelManager\u0027s add/delete/list/filter behavior and equality semantics.","lastModifiedDate":"2025-10-24T14:05:17","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"V1T0bh"},"content":"- Storage tests:","lastModifiedDate":"2025-10-24T14:05:17","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"V1T0bh"},"content":"    - Use a temporary file/folder and assert that save and load preserve state.","lastModifiedDate":"2025-10-24T14:05:17","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"V1T0bh"},"content":"- Integration tests:","lastModifiedDate":"2025-10-24T14:05:17","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"V1T0bh"},"content":"    - Boot LogicManager with real ModelManager and StorageManager (with test file) to test end-to-end flows.","lastModifiedDate":"2025-10-24T14:05:17","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-24T14:05:17","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"lukeai-tan"},"content":"## Appendix: Requirements","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"lukeai-tan"},"content":"- Computer Science students who are actively applying for multiple internships, often over 200 applications per recruitment cycle.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"lukeai-tan"},"content":"- Detail-oriented users who want a structured way to track internship applications.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"lukeai-tan"},"content":"- Comfortable using command-line interfaces (CLI) and prefer a lightweight and fast tool over complex graphical applications.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"lukeai-tan"},"content":"Internity provides a centralized and efficient way to manage internship applications through a command-line interface.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"lukeai-tan"},"content":"It allows users to:","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"lukeai-tan"},"content":"- Store and organize internships along with key attributes such as company name, role, deadline, pay and","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"lukeai-tan"},"content":"application status","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"lukeai-tan"},"content":"- Find internships by keyword","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"lukeai-tan"},"content":"- Sort internships by date in ascending or descending order.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"lukeai-tan"},"content":"- View an automatically generated dashboard showing key statistics such as total applications, nearest deadlines and","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"lukeai-tan"},"content":"status breakdowns.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...                                                          | So that I can ...                                                                |","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"lukeai-tan"},"content":"|---------|----------|------------------------------------------------------------------------|----------------------------------------------------------------------------------|","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"lukeai-tan"},"content":"| v1.0    | new user | add a new internship with company, role, and deadline details          | keep all opportunities organized in one place                                    |","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"lukeai-tan"},"content":"| v1.0    | user     | set the status of my application (applied, interview, offer, rejected) | easily see my progress with each internship                                      |","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"lukeai-tan"},"content":"| v1.0    | user     | see a list of all my internships                                       | easily view the opportunities I’m tracking                                       |","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"lukeai-tan"},"content":"| v1.0    | user     | remove an internship entry                                             | keep the list relevant and up to date                                            |","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"lukeai-tan"},"content":"| v2.0    | user     | update the company, role, deadline and pay for an internship           | keep my application information accurate and up to date                          |","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"lukeai-tan"},"content":"| v2.0    | user     | see my internships sorted by deadlines                                 | prioritize applications that are due soon                                        |","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"lukeai-tan"},"content":"| v2.0    | user     | save and load internships automatically                                | avoid losing my progress and notes between sessions                              |","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"lukeai-tan"},"content":"| v2.0    | user     | find internships based on the company or role                          | easily view my applications to specific companies or positions I\u0027m interested in |","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"lukeai-tan"},"content":"| v2.0    | user     | set or change my username                                              | personalize my internship tracker experience                                     |","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"lukeai-tan"},"content":"| v2.0    | user     | view a condensed dashboard                                             | to see the current status of my applications                                     |","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"lukeai-tan"},"content":"## Use Cases","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"lukeai-tan"},"content":"1. Should work on any mainstream OS (Windows, macOS, Linux) as long as it has Java `17` or above installed.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"lukeai-tan"},"content":"2. Should be able to hold up to 1000 internship applications without a noticeable sluggishness in performance","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"lukeai-tan"},"content":"for typical usage.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"lukeai-tan"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) ","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"lukeai-tan"},"content":"should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"lukeai-tan"},"content":"4. User data should not be shared or transmitted externally. All storage is local to the user\u0027s system.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"lukeai-tan"},"content":"5. The architecture should allow easy addition of new commands without breaking existing functionality.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"lukeai-tan"},"content":"**Internship**\\","lastModifiedDate":"2025-10-26T22:09:27","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"lukeai-tan"},"content":"A temporary work experience offered by a company or organization that allows a student or early-career individual","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"lukeai-tan"},"content":"to gain practical skills, industry knowledge and professional exposure in a specific field. Internships may be paid","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"lukeai-tan"},"content":"or unpaid, part-time or full-time, and can occur during or after academic study.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T16:17:56","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"BestBearrr"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2025-10-28T16:17:56","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T16:17:56","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"lukeai-tan"},"content":"### Launch and shutdown","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"lukeai-tan"},"content":"1. Initial launch","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"lukeai-tan"},"content":"   1. Download the jar file and copy it into an empty folder.","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"lukeai-tan"},"content":"### Adding an internship","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"lukeai-tan"},"content":"### Updating an internship","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"lukeai-tan"},"content":"### Deleting an internship","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"lukeai-tan"},"content":"### Listing and sorting all internships","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"lukeai-tan"},"content":"### Finding an internship by keyword","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"lukeai-tan"},"content":"### Setting/Changing username","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"lukeai-tan"},"content":"### Displaying the Internity Dashboard","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"lukeai-tan"},"content":"### Saving Data","lastModifiedDate":"2025-10-26T22:03:19","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":175,"BestBearrr":111,"-":29,"BenyAlbatross":40,"V1T0bh":12}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"# Internity User Guide","lastModifiedDate":"2025-10-06T15:50:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"Internity is a CLI based app for managing internship applications. Internity can help you manage and keep track","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"of your internship applications more efficiently, perfect for Computer Science students who need to","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"manage hundreds of applications.","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"# Table of Contents","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"- [Features](#features)","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"    - [Adding an application](#adding-an-application-add)","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    - [Deleting an application](#deleting-an-application-delete)","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"    - [Updating an application](#updating-an-application-update)","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"    - [Viewing all applications](#listing-all-applications-list)","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"- [FAQ](#faq)","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T15:54:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T15:54:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 17 or above installed.","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"2. Download the latest version of `Internity` from [here](http://link.to/Internity).","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"3. Copy the file to the folder you want to use as the home folder for Internity.","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"4. Open a terminal, cd into the folder with the jar file.","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"5. Run: `java -jar Internity.jar`","lastModifiedDate":"2025-10-28T14:53:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"6. Type a command and press Enter to execute it.  ","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"   You may refer to the Features below for details of each command.","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T15:54:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T15:54:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"\u003cdiv style\u003d\"background-color: #002b5c; color: #cce6ff; padding: 15px; border-radius: 8px; border-left: 5px solid #3399ff;\"\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"\u003ch4\u003eNotes about the command format\u003c/h4\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"\u003cul\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"\u003cli\u003eWords in \u003cstrong\u003eUPPER_CASE\u003c/strong\u003e are placeholders that must be supplied by you.\u003cbr\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"Example: \u003ccode\u003edelete INDEX\u003c/code\u003e → Please input \u003ccode\u003edelete 1\u003c/code\u003e\u003c/li\u003e","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"\u003cli\u003eIf using a PDF version, be careful when copying commands that span multiple lines as spaces surrounding line-breaks may be omitted.\u003c/li\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"\u003c/ul\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"### Adding an application: `add`","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"Add a new internship application with company, role, deadline and pay amount","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"Format","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"add company/COMPANY_NAME role/ROLE_NAME deadline/DEADLINE pay/PAY_AMOUNT","lastModifiedDate":"2025-10-28T14:39:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"Example:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"add company/Google role/Software Engineer Intern deadline/17-09-2025 pay/100000","lastModifiedDate":"2025-10-28T14:39:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"This command adds an internship application at Google for the role of Software Engineer Intern with a deadline of 17","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"September 2025, and an annual salary of $100000.","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"\u003cdiv style\u003d\"background-color: #331c16; color: #c3b091; padding: 15px; border-radius: 8px; border-left: 5px solid #966919;\"\u003e","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"\u003ch4\u003eNotes\u003c/h4\u003e","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"\u003cul\u003e","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"\u003cli\u003eThe parameters should be entered in the specified order i.e. company, role, deadline, followed by pay.\u003c/li\u003e","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"\u003cli\u003eNo duplicate parameter type, so only exactly one of each parameter type.\u003c/li\u003e","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"\u003cli\u003e\u003ccode\u003eDEADLINE\u003c/code\u003e must be in \u003ccode\u003eDD-MM-YYYY\u003c/code\u003e format.\u003c/li\u003e","lastModifiedDate":"2025-10-28T14:39:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"\u003cli\u003e\u003ccode\u003ePAY_AMOUNT\u003c/code\u003e must be a non-negative integer.\u003c/li\u003e","lastModifiedDate":"2025-10-28T14:39:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"\u003cli\u003e By default, when an internship is added, the status is set to Pending. Use the update command to change the status.\u003c/li\u003e","lastModifiedDate":"2025-10-28T16:17:56","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"\u003c/ul\u003e","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"### Deleting an application: `delete`","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lukeai-tan"},"content":"Delete an existing internship application from the internship list","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"Format:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"delete INDEX","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"Example:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"delete 2","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BenyAlbatross"},"content":"This command deletes the internship application at index 2 from the list.","lastModifiedDate":"2025-10-17T14:21:30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"### Updating an application: `update`","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"Use this command to update the **status** of an internship application.  ","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BestBearrr"},"content":"For v1.0, only the `status` field can be updated. Updating other fields (company, role, deadline, pay) will be added in","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BestBearrr"},"content":"future iterations.","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lukeai-tan"},"content":"**Valid `status` values:**","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"- `Pending` -\u003e You’re considering the internship but haven’t applied yet.","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lukeai-tan"},"content":"- `Interested` → You’ve found the internship and might apply.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"- `Applied` → You’ve submitted your application.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lukeai-tan"},"content":"- `Interviewing` → You’re currently in the interview process.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lukeai-tan"},"content":"- `Offer` → You’ve received an internship offer.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lukeai-tan"},"content":"- `Accepted` → You’ve accepted the offer.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lukeai-tan"},"content":"- `Rejected` → The application was unsuccessful or withdrawn.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lukeai-tan"},"content":"Format:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lukeai-tan"},"content":"update INDEX status/NEW_STATUS","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lukeai-tan"},"content":"Example:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lukeai-tan"},"content":"update 1 status/Accepted","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lukeai-tan"},"content":"This command updates the status of the internship application at index 1 to \"Accepted\".","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lukeai-tan"},"content":"### Listing all applications: `list`","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lukeai-tan"},"content":"Use this command to view all internship applications.  ","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lukeai-tan"},"content":"By default, the list shows applications in the **order they were added**.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lukeai-tan"},"content":"You can optionally sort them by deadline in ascending or descending order.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lukeai-tan"},"content":"Format:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lukeai-tan"},"content":"list","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lukeai-tan"},"content":"list sort/ORDER","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lukeai-tan"},"content":"Example:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lukeai-tan"},"content":"list","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lukeai-tan"},"content":"list sort/asc","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lukeai-tan"},"content":"list sort/desc","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lukeai-tan"},"content":"- `list` → shows all applications in the order they were added","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lukeai-tan"},"content":"- `list sort/asc` → sorts applications by deadline ascending","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lukeai-tan"},"content":"- `list sort/desc` → sorts applications by deadline descending","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BestBearrr"},"content":"### Finding by keyword: `find`","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BestBearrr"},"content":"Search for internship applications by keyword. The search is case-insensitive.","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lukeai-tan"},"content":"Format:","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BestBearrr"},"content":"find KEYWORD","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lukeai-tan"},"content":"Example:","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BestBearrr"},"content":"find Software Engineer","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BestBearrr"},"content":"This command lists all internship applications that contain the keyword \"Software Engineer\" in either its company or","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BestBearrr"},"content":"role details.","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lukeai-tan"},"content":"### Setting/Changing username: `username`","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lukeai-tan"},"content":"Use this command to set or change the username for the Internity application.","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lukeai-tan"},"content":"Format:","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"lukeai-tan"},"content":"username USERNAME","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"lukeai-tan"},"content":"Example:","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"lukeai-tan"},"content":"username Yoshikage Kira","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"lukeai-tan"},"content":"### Displaying dashboard: `dashboard`","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"lukeai-tan"},"content":"Use this command to display a dashboard showing the current user\u0027s information, total internships, nearest deadline,","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"lukeai-tan"},"content":"and a breakdown of internships by status.","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lukeai-tan"},"content":"Format:","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"lukeai-tan"},"content":"dashboard","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"BestBearrr"},"content":"### Exit Internity: `exit`","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"BestBearrr"},"content":"Quit the program. Your data is saved.","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"BestBearrr"},"content":"Format:","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"BestBearrr"},"content":"exit","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"BestBearrr"},"content":"---","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"BestBearrr"},"content":"* **Q**: How do I transfer my data to another computer?  ","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"BestBearrr"},"content":"  **A**: Make a copy of the data folder of the home directory that runs `Internity.jar` to the new computer. Ensure that","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"BestBearrr"},"content":"  the folder structure remains intact.","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"BestBearrr"},"content":"* **Q**: I have encountered an invalid command error. What do I do?  ","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"BestBearrr"},"content":"  **A**: Refer to the [Features](#features) section for details on using a command.","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"BestBearrr"},"content":"* **Q**: Does Internity work without Internet?  ","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"BestBearrr"},"content":"  **A**: Yes, Internity does not require an active internet connection, allowing you to manage your internships","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"BestBearrr"},"content":"  seamlessly!","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"lukeai-tan"},"content":"| **Action**              | **Command** | **Format**                                                                                                                                                  | **Example**                                                                       |","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"BestBearrr"},"content":"|-------------------------|-------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------|","lastModifiedDate":"2025-10-28T14:39:17","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"BestBearrr"},"content":"| **Add Application**     | `add`       | `add company/COMPANY_NAME role/ROLE_NAME deadline/DEADLINE pay/PAY_AMOUNT`                                                                                  | `add company/Google role/Software Engineer Intern deadline/17-09-2025 pay/100000` |","lastModifiedDate":"2025-10-28T14:39:17","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"lukeai-tan"},"content":"| **Delete Application**  | `delete`    | `delete INDEX`                                                                                                                                              | `delete 2`                                                                        |","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"lukeai-tan"},"content":"| **Update Application**  | `update`    | `update INDEX FIELD/VALUE`                                                                                                                                  | `update 1 status/Interviewing`                                                    |","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"lukeai-tan"},"content":"| **List Applications**   | `list`      | `list` → list all applications in the order they were added \u003cbr\u003e `list sort/ORDER` → sort applications by deadline ascending (`asc`) or descending (`desc`) | `list` \u003cbr\u003e `list sort/asc` \u003cbr\u003e `list sort/desc`                                 |","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"BestBearrr"},"content":"| **Find Application**    | `find`      | `find KEYWORD`                                                                                                                                              | `find Software Engineer`                                                          |","lastModifiedDate":"2025-10-28T14:33:20","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"lukeai-tan"},"content":"| **Set/Change username** | `username`  | `username USERNAME`                                                                                                                                         | `username Yoshikage Kira`                                                         |","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"lukeai-tan"},"content":"| **Display Dashboard**   | `dashboard` | `dashboard`                                                                                                                                                 | `dashboard`                                                                       |","lastModifiedDate":"2025-10-26T19:26:55","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"BestBearrr"},"content":"| **Exit Internity**      | `exit`      | `exit`                                                                                                                                                      | `exit`                                                                            |","lastModifiedDate":"2025-10-28T14:41:42","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":136,"BestBearrr":80,"-":31,"BenyAlbatross":1}},{"path":"docs/diagrams/ArchitectureCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"@startuml@startuml","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"title Architecture - Class Diagram","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"\u0027 \u003d\u003d\u003d Core Controller \u003d\u003d\u003d","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"class InternityManager","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"\u0027 \u003d\u003d\u003d Logic Layer \u003d\u003d\u003d","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"class CommandParser","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"class CommandFactory","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"abstract class Command","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"class AddCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"class DeleteCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"class FindCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"class UpdateCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"class ListCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"class UsernameCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"class DashboardCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"class ExitCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"class ArgumentParser","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"\u0027 \u003d\u003d\u003d Model Layer \u003d\u003d\u003d","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"class InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"class Internship","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"class Storage","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"class Date","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"enum Status","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"\u0027 \u003d\u003d\u003d UI Layer \u003d\u003d\u003d","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"class Ui","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"class DashboardUi","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"\u0027 \u003d\u003d\u003d Utilities \u003d\u003d\u003d","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"class DateFormatter","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"\u0027 \u003d\u003d\u003d Relationships \u003d\u003d\u003d","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"InternityManager --\u003e CommandParser","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"InternityManager --\u003e InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"InternityManager --\u003e Storage","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"InternityManager --\u003e Ui","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"CommandParser --\u003e CommandFactory","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"CommandFactory --\u003e ArgumentParser","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"CommandFactory --\u003e Command","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"ArgumentParser --\u003e Command","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"\u0027 Command hierarchy","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- AddCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- DeleteCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- FindCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- UpdateCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- ListCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- UsernameCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- DashboardCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- ExitCommand","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"\u0027 All commands interact with InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"AddCommand --\u003e InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"DeleteCommand --\u003e InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"FindCommand --\u003e InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"UpdateCommand --\u003e InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"ListCommand --\u003e InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"UsernameCommand --\u003e InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"DashboardCommand --\u003e InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"ExitCommand --\u003e InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"\u0027 Dashboard uses DashboardUi","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"DashboardCommand --\u003e DashboardUi","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"\u0027 InternshipList relationships","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"InternshipList --\u003e Storage","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"InternshipList --\u003e Internship","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"Internship --\u003e Date","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"Internship --\u003e Status","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"DashboardUi --\u003e InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"\u0027 ArgumentParser uses DateFormatter","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"ArgumentParser --\u003e DateFormatter","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"@enduml","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":79}},{"path":"docs/diagrams/InternityManagerCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"@startuml","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"title InternityManager - Class Diagram","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"class InternityManager {","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"    - scanner: Scanner","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"    - commandParser: CommandParser","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"    + InternityManager(storagePath: String)","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"    + start(): void","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"    - loadData(): void","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"    - saveData(): void","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"    - configureUsername(): void","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"    - isValidUsername(username: String): boolean","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"class CommandParser","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"class InternshipList","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"class Storage","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"class Ui","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"class Command","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"InternityManager --\u003e CommandParser : uses","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"InternityManager --\u003e InternshipList : manages data","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"InternityManager --\u003e Storage : initializes","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"InternityManager --\u003e Ui : prints messages","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"CommandParser --\u003e Command : returns","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"InternshipList --\u003e Storage : uses","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"@enduml","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":28}},{"path":"docs/diagrams/LogicComponentCD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"@startuml","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"title Logic Component - Class Diagram","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"class CommandParser {","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"    + parseInput(input: String): Command","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"class CommandFactory {","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"    + createCommand(commandWord: String, args: String): Command","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"class ArgumentParser {","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"    + {static} parseAddCommandArgs(args: String): AddCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    + {static} parseDeleteCommandArgs(args: String): DeleteCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"    + {static} parseFindCommandArgs(args: String): FindCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"    + {static} parseUpdateCommandArgs(args: String): UpdateCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"    + {static} parseListCommandArgs(args: String): ListCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"    + {static} parseUsernameCommandArgs(args: String): UsernameCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"abstract class Command {","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    + execute(): void","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"    + isExit(): boolean","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"class AddCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"class DeleteCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"class FindCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"class UpdateCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"class ListCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"class UsernameCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"class DashboardCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"class ExitCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"CommandParser --\u003e CommandFactory : uses","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"CommandFactory --\u003e ArgumentParser : delegates parsing","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"CommandFactory --\u003e Command : creates","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"ArgumentParser --\u003e Command : creates","lastModifiedDate":"2025-10-26T22:09:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- AddCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- DeleteCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- FindCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- UpdateCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- ListCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- UsernameCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- DashboardCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"Command \u003c|-- ExitCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"@enduml","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":48}},{"path":"docs/diagrams/LogicComponentSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"@startuml","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"title Logic Component - Sequence Diagram","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"participant \":InternityManager\" as IM","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"participant \":CommandParser\" as CP","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"participant \":CommandFactory\" as CF","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nArgumentParser\" as AP","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"participant \":AddCommand\" as AddC","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"participant \":ExitCommand\" as ExitC","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"IM -\u003e CP: parseInput(input)","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"activate CP","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"\u0027 --- validate input ---","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"CP -\u003e CP: validate input (null/blank)","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"activate CP","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"CP --\u003e CP: return from validate","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"deactivate CP","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"\u0027 --- split input ---","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"CP -\u003e CP: split input into commandWord and args","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"activate CP","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"CP --\u003e CP: return from split","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"deactivate CP","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"\u0027 --- create command via factory ---","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"CP -\u003e CF: createCommand(commandWord, args)","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"activate CF","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"alt Command requires argument parsing","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"    CF -\u003e AP: parseAddCommandArgs(args)","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"    activate AP","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"    AP -\u003e AddC: new AddCommand(company, role, deadline, pay)","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"    activate AddC","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"    AddC --\u003e AP: return AddCommand instance","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"    deactivate AddC","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"    AP --\u003e CF: return AddCommand","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"    deactivate AP","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"else Command does not require args (exit/dashboard)","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"    CF -\u003e ExitC: new ExitCommand()","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"    activate ExitC","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"    ExitC --\u003e CF: return ExitCommand instance","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"    deactivate ExitC","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"end","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"CF --\u003e CP: return Command","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"deactivate CF","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"CP --\u003e IM: return Command","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"deactivate CP","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"@enduml","lastModifiedDate":"2025-10-26T16:41:03","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":52}},{"path":"docs/diagrams/UserInteractionSD.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"@startuml","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"title Internity - User Interaction Sequence","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"actor User","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"participant \":InternityManager\" as Manager","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"participant \":CommandParser\" as Parser","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"participant \":CommandFactory\" as Factory","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"participant \":Command\" as Command","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"participant \"\u003c\u003cclass\u003e\u003e InternshipList\" as Model","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"participant \"\u003c\u003cclass\u003e\u003e Ui\" as Ui","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"User -\u003e Manager : type command (e.g., \"delete 1\")","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"Manager -\u003e Parser : parseInput(userInput)","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"Parser -\u003e Factory : createCommand(commandWord, args)","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"Factory --\u003e Parser : return Command","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"Parser --\u003e Manager : return Command","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"Manager -\u003e Command : execute()","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"Command -\u003e Model : modify / query internships","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"Command -\u003e Ui : Ui display method","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"Manager -\u003e Storage : save changes","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"Manager --\u003e User :","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"@end","lastModifiedDate":"2025-10-26T19:14:33","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":24}},{"path":"docs/team/VitoBHalim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"# Vito Benedict Halim - Project Portfolio Page","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"## Overview","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"Y2 CEG. Part of the development team for Internity. Hoping to support Internity to the best of my abilities by providing meaningful code and feedback.","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"Connect with me on LinkedIn [HERE](https://www.linkedin.com/in/vito-benedict-halim-832775308/)","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":"## Summary of Contributions","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":"Recess Week - add info :)\u003c/br\u003e","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":"*tbd - project ongoing*","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false}],"authorContributionMap":{"V1T0bh":8}},{"path":"docs/team/benjaminChek.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BenyAlbatross"},"content":"### Benjamin Chek - Project Portfolio Page","lastModifiedDate":"2025-09-25T12:49:51","isFullCredit":false}],"authorContributionMap":{"BenyAlbatross":1}},{"path":"docs/team/hongxun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"# Luo Hongxun - Project Portfolio Page","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"## Overview","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"Hello, World!\u003cbr\u003e","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"I work on implementing features for this project -- Bringing Internity to you :)","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"### Summary of Contributions","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false}],"authorContributionMap":{"BestBearrr":7}},{"path":"docs/team/joannaJung.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Joannaj00"},"content":"# Joanna Jung - Project Portfolio Page","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Joannaj00"},"content":"## Overview","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Joannaj00"},"content":"- Major: Computer Science","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Joannaj00"},"content":"- School: Northwestern University","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Joannaj00"},"content":"### Summary of Contributions","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false}],"authorContributionMap":{"Joannaj00":7}},{"path":"docs/team/lukeai-tan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"# Luke Aidan Tan - Project Portfolio Page","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"## Overview","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"Internity is a Command-Line Interface (CLI) application designed to help users manage their internship applications efficiently. ","lastModifiedDate":"2025-10-27T13:02:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"It is especially useful for Computer Science students who often apply to hundreds of internships and need a simple yet powerful ","lastModifiedDate":"2025-10-27T13:02:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"way to organize their applications.","lastModifiedDate":"2025-10-27T13:02:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"The app allows users to add, update, delete, find, and list internships, each with detailed ","lastModifiedDate":"2025-10-27T13:02:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"attributes such as company name, role, application deadline, pay, and status. In addition, Internity provides features ","lastModifiedDate":"2025-10-27T12:59:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"like a dashboard overview for quick insights and data persistence between sessions.","lastModifiedDate":"2025-10-27T12:59:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"### Code Contributions (and Enhancements)","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"[RepoSense link](https://nus-cs2113-ay2526s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2025-09-19T00%3A00%3A00\u0026filteredFileName\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dlukeai-tan\u0026tabRepo\u003dAY2526S1-CS2113-W14-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"#### InternityManager (+ enhancement)","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"- Developed the main controller class that coordinates between the UI, command parser, and the internship data.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"- Handles execution of commands and manages the interaction with the storage and UI layers.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"- Extracted the main logic from the original `Internity` class and refactored it into a dedicated `InternityManager` class.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"- This enhancement improves code organization by separating application orchestration from the entry point, making","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"the system more modular and maintainable.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"#### Command Parser (`CommandParser`)","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"- Implemented the logic to parse raw user input into executable commands, handling input validation,","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"  splitting into command words and arguments, and coordinating with `CommandFactory`.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"#### Command Factory (`CommandFactory`) (+ enhancement)","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"- Developed the factory class that creates the appropriate command objects based on parsed input,","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"  delegating argument parsing to `ArgumentParser`.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"- Abstracted the command creation logic from `CommandParser` into a dedicated `CommandFactory` class.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"- This enhancement centralizes the instantiation of commands based on user input, improving separation of concerns and","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"maintainability.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"- Simplifies `CommandParser` by delegating command creation, making it easier to add new commands in the future.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"#### Argument Parser (`ArgumentParser`) ","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"- Designed and implemented `ArgumentParser` to centralize command argument parsing.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"- Provides a structured way for commands like `add`, `delete`, `update`, `list` to parse their input arguments.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"- Allows future developers to easily add new parsing methods for additional commands, promoting modularity and","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"code reuse.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"#### Argument Parsing Support (`DateFormatter` and `Date`)","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"- Created `DateFormatter` for parsing user-provided dates and `Date` as a custom comparable date object","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"  used across internships.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"#### Exit, Username, Dashboard Command (`ExitCommand`, `UsernameCommand`, `DashboardCommand`)","lastModifiedDate":"2025-10-27T12:47:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"- Implemented the `exit` command for users to exit the program.","lastModifiedDate":"2025-10-27T12:47:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"- Implemented the `username` command to set or display the current username.","lastModifiedDate":"2025-10-27T12:47:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"- Implemented the `dashboard` command to display a dashboard overview of internships, showing nearest deadlines and status","lastModifiedDate":"2025-10-27T12:47:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"  breakdowns.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"#### Dashboard UI (`DashboardUi`)","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"- Built the UI layer for the dashboard, including methods to print the total number of internships,","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"  nearest deadlines and status overview.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"### Project management","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"- Prioritized tasks and managed the implementation schedule to meet project deadlines.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"- Managed releases `v1.0`-`v2.1` on GitHub.","lastModifiedDate":"2025-10-27T17:52:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:52:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"### Enhancements to existing features","lastModifiedDate":"2025-10-27T17:52:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"- Wrote additional tests for existing features to increase branch coverage from 55% to 72% and line coverage from","lastModifiedDate":"2025-10-27T17:52:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"70% to 83% (Pull Request [#95](https://github.com/AY2526S1-CS2113-W14-4/tp/pull/95))","lastModifiedDate":"2025-10-27T18:12:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"### Documentation","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"- User Guide:","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"    - Added documentation for the features `exit`, `username`, `dashboard`","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"- Developer Guide:","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"    - Added design details of the architecture and logic component.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"    - Added UML diagrams for:","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"      - Architecture Class Diagram","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"      - User Interaction Sequence Diagram","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"      - Logic Component Class Diagram","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"      - Logic Component Sequence Diagram","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"    - Added details of product scope, user stories and non-functional requirements.","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"### Community","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"- PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"[#38](https://github.com/AY2526S1-CS2113-W14-4/tp/pull/38),","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"[#59](https://github.com/AY2526S1-CS2113-W14-4/tp/pull/59),","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"[#62](https://github.com/AY2526S1-CS2113-W14-4/tp/pull/62),","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"[#65](https://github.com/AY2526S1-CS2113-W14-4/tp/pull/65),","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"[#78](https://github.com/AY2526S1-CS2113-W14-4/tp/pull/78),","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"[#79](https://github.com/AY2526S1-CS2113-W14-4/tp/pull/79)","lastModifiedDate":"2025-10-27T01:28:18","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":79}},{"path":"src/main/java/internity/Internity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity;","lastModifiedDate":"2025-10-02T23:12:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-23T23:34:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:34:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityManager;","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import internity.utils.InternityLogger;","lastModifiedDate":"2025-10-23T23:34:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T15:08:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":" * The main entry point for the \u003cb\u003eInternity\u003c/b\u003e application.","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * This class is responsible for initializing and starting the core application","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" * through the {@link InternityManager}. It defines the default data storage","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" * location and initializes the system when the program starts.","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"public class Internity {","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"     * The default file path used to store internship data.","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BenyAlbatross"},"content":"    private static final String DEFAULT_STORAGE_PATH \u003d \"./data/internships.txt\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"     * Initializes the Internity system by creating an {@link InternityManager}","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"     * instance and starting it.","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"     * This method sets up all necessary components and begins program execution.","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"    public static void initInternity() {","lastModifiedDate":"2025-10-04T18:31:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"        Logger logger \u003d InternityLogger.getLogger();","lastModifiedDate":"2025-10-23T23:34:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"        logger.info(\"Internity starting...\");","lastModifiedDate":"2025-10-23T23:34:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:34:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"        InternityManager manager \u003d new InternityManager(DEFAULT_STORAGE_PATH);","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"        manager.start();","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"     * The main entry point for the \u003cb\u003eInternity\u003c/b\u003e application.","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"     * This method serves as the program launcher and delegates initialization","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"     * to {@link #initInternity()}.","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-23T23:07:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        initInternity();","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":45,"BenyAlbatross":2}},{"path":"src/main/java/internity/cli/ArgumentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.cli;","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-23T23:44:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:44:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"import internity.commands.AddCommand;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.DeleteCommand;","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"import internity.commands.FindCommand;","lastModifiedDate":"2025-10-21T23:33:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.ListCommand;","lastModifiedDate":"2025-10-13T21:51:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.UpdateCommand;","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.UsernameCommand;","lastModifiedDate":"2025-10-20T17:52:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"import internity.utils.DateFormatter;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":" * A utility class responsible for parsing command-line arguments for various commands","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":" * such as Add, Delete, Find, Update and List.","lastModifiedDate":"2025-10-21T23:15:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"public final class ArgumentParser {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"    private static final int ADD_COMMAND_PARTS \u003d 4;","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"    private static final int IDX_COMPANY \u003d 0;","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"    private static final int IDX_ROLE \u003d 1;","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"    private static final int IDX_DEADLINE \u003d 2;","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"    private static final int IDX_PAY \u003d 3;","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"    private static final Logger logger \u003d Logger.getLogger(ArgumentParser.class.getName());","lastModifiedDate":"2025-10-21T23:15:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T23:15:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"     * Private constructor to prevent instantiation of the ArgumentParser class.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"    private ArgumentParser() {","lastModifiedDate":"2025-10-13T19:51:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"     * Parses the arguments for Add Command to create an {@link AddCommand} instance.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"     * @param args arguments for {@link AddCommand}","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"     * @return an instance of {@link AddCommand} constructed from the parsed arguments.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"     * @throws InternityException if the arguments are missing or invalid.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"    public static AddCommand parseAddCommandArgs(String args) throws InternityException {","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"        if (args \u003d\u003d null || args.isBlank()) {","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"            throw InternityException.invalidAddCommand();","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"        assert !args.isBlank() : \"Arguments cannot be blank after validation\";","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"        try {","lastModifiedDate":"2025-10-13T19:59:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"            String[] parts \u003d args.split(\"\\\\s+(?\u003dcompany/|role/|deadline/|pay/)\");","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"            if (parts.length !\u003d ADD_COMMAND_PARTS ||","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"                    !parts[IDX_COMPANY].startsWith(\"company/\") ||","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"                    !parts[IDX_ROLE].startsWith(\"role/\") ||","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"                    !parts[IDX_DEADLINE].startsWith(\"deadline/\") ||","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"                    !parts[IDX_PAY].startsWith(\"pay/\")) {","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"                logger.severe(\"One or more arguments of Add command is in the wrong order.\");","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"                throw InternityException.invalidAddCommand();","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"            }","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-13T19:51:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"            logger.info(\"Successfully parsed 4 arguments of AddCommand.\");","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"            String company \u003d parts[IDX_COMPANY].substring(\"company/\".length()).trim();","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"            String role \u003d parts[IDX_ROLE].substring(\"role/\".length()).trim();","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"            Date deadline \u003d DateFormatter.parse(parts[IDX_DEADLINE].substring(\"deadline/\".length()).trim());","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"            int pay \u003d Integer.parseInt(parts[IDX_PAY].substring(\"pay/\".length()).trim());","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"            // throw exception on empty input or invalid pay","lastModifiedDate":"2025-10-21T21:47:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"            if (company.isEmpty() || role.isEmpty() || pay \u003c 0) {","lastModifiedDate":"2025-10-13T20:10:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"                logger.severe(\"One or more arguments of Add command is empty or invalid.\");","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"                throw InternityException.invalidAddCommand();","lastModifiedDate":"2025-10-13T20:10:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"            }","lastModifiedDate":"2025-10-13T20:10:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"V1T0bh"},"content":"            // throw exception on exceeding max length","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"V1T0bh"},"content":"            if (company.length() \u003e InternshipList.COMPANY_MAXLEN ||","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"V1T0bh"},"content":"                    role.length() \u003e InternshipList.ROLE_MAXLEN) {","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"                logger.severe(\"One or more arguments exceeded max length.\");","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"V1T0bh"},"content":"                throw InternityException.invalidAddCommand();","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"V1T0bh"},"content":"            }","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"            return new AddCommand(company, role, deadline, pay);","lastModifiedDate":"2025-10-13T19:51:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-10-13T19:59:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BestBearrr"},"content":"            logger.severe(\"Error executing Add Command: \" + e.getMessage());","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BestBearrr"},"content":"            throw InternityException.invalidAddCommand();","lastModifiedDate":"2025-10-13T19:59:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-10-13T19:59:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BestBearrr"},"content":"     * Parses the arguments for Delete Command to create an {@link DeleteCommand} instance.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BestBearrr"},"content":"     * @param args arguments for {@link DeleteCommand}","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BestBearrr"},"content":"     * @return an instance of {@link DeleteCommand} constructed from the parsed arguments.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BestBearrr"},"content":"     * @throws InternityException if the arguments are missing or invalid.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"    public static DeleteCommand parseDeleteCommandArgs(String args) throws InternityException {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"        if (args \u003d\u003d null || args.isBlank()) {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidDeleteCommand();","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"        try {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"            int oneBasedIndex \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"            int zeroBasedIndex \u003d oneBasedIndex - 1;","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"            return new DeleteCommand(zeroBasedIndex);","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lukeai-tan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidInternshipIndex();","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T22:29:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BestBearrr"},"content":"     * Parses the arguments for Find Command to create a {@link FindCommand} instance.","lastModifiedDate":"2025-10-21T22:29:59","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-21T22:29:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BestBearrr"},"content":"     * @param args arguments for {@link FindCommand}","lastModifiedDate":"2025-10-21T22:29:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BestBearrr"},"content":"     * @return an instance of {@link FindCommand} constructed from the parsed arguments.","lastModifiedDate":"2025-10-21T22:29:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BestBearrr"},"content":"     * @throws InternityException if the arguments are missing.","lastModifiedDate":"2025-10-21T22:58:46","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T22:29:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BestBearrr"},"content":"    public static FindCommand parseFindCommandArgs(String args) throws InternityException {","lastModifiedDate":"2025-10-21T22:58:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BestBearrr"},"content":"        if (args \u003d\u003d null || args.isBlank()) {","lastModifiedDate":"2025-10-21T22:58:46","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BestBearrr"},"content":"            throw InternityException.invalidFindCommand();","lastModifiedDate":"2025-10-21T22:58:46","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-10-21T22:58:46","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BestBearrr"},"content":"        return new FindCommand(args);","lastModifiedDate":"2025-10-21T22:29:59","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T22:29:59","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:29:59","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BestBearrr"},"content":"     * Parses the arguments for Update Command to create an {@link UpdateCommand} instance.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BestBearrr"},"content":"     * @param args arguments for {@link UpdateCommand}","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BestBearrr"},"content":"     * @return an instance of {@link UpdateCommand} constructed from the parsed arguments.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BestBearrr"},"content":"     * @throws InternityException if the arguments are missing or invalid.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lukeai-tan"},"content":"    public static UpdateCommand parseUpdateCommandArgs(String args) throws InternityException {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Joannaj00"},"content":"        String trimmed \u003d requireArgs(args);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Joannaj00"},"content":"        String[] idxAndTagged \u003d splitIndexAndTagged(trimmed);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Joannaj00"},"content":"        int index \u003d parseOneBasedIndex(idxAndTagged[0]);","lastModifiedDate":"2025-10-21T22:27:48","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Joannaj00"},"content":"        String tagged \u003d requireTagged(idxAndTagged[1]);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Joannaj00"},"content":"        String[] parts \u003d tagged.split(\"\\\\s+(?\u003dcompany/|role/|deadline/|pay/|status/)\");","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Joannaj00"},"content":"        String company \u003d null;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Joannaj00"},"content":"        String role \u003d null;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Joannaj00"},"content":"        Date deadline \u003d null;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Joannaj00"},"content":"        Integer pay \u003d null;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Joannaj00"},"content":"        String status \u003d null;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lukeai-tan"},"content":"        try {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Joannaj00"},"content":"            for (String part : parts) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Joannaj00"},"content":"                String p \u003d part.trim();","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Joannaj00"},"content":"                if (p.isEmpty()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Joannaj00"},"content":"                    continue;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lukeai-tan"},"content":"                }","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Joannaj00"},"content":"                if (p.startsWith(\"company/\")) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Joannaj00"},"content":"                    company \u003d valueAfterTag(p, \"company/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Joannaj00"},"content":"                    if (company.isEmpty()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Joannaj00"},"content":"                        throw InternityException.emptyField(\"company/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Joannaj00"},"content":"                    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Joannaj00"},"content":"                } else if (p.startsWith(\"role/\")) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Joannaj00"},"content":"                    role \u003d valueAfterTag(p, \"role/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Joannaj00"},"content":"                    if (role.isEmpty()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Joannaj00"},"content":"                        throw InternityException.emptyField(\"role/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Joannaj00"},"content":"                    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Joannaj00"},"content":"                } else if (p.startsWith(\"deadline/\")) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Joannaj00"},"content":"                    String d \u003d valueAfterTag(p, \"deadline/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Joannaj00"},"content":"                    deadline \u003d DateFormatter.parse(d);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Joannaj00"},"content":"                } else if (p.startsWith(\"pay/\")) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Joannaj00"},"content":"                    String payStr \u003d valueAfterTag(p, \"pay/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Joannaj00"},"content":"                    int payVal \u003d Integer.parseInt(payStr);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Joannaj00"},"content":"                    if (payVal \u003c 0) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Joannaj00"},"content":"                        throw new NumberFormatException();","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lukeai-tan"},"content":"                    }","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Joannaj00"},"content":"                    pay \u003d payVal;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Joannaj00"},"content":"                } else if (p.startsWith(\"status/\")) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Joannaj00"},"content":"                    status \u003d valueAfterTag(p, \"status/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Joannaj00"},"content":"                    if (status.isEmpty()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Joannaj00"},"content":"                        throw InternityException.emptyField(\"status/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Joannaj00"},"content":"                    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Joannaj00"},"content":"                } else {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Joannaj00"},"content":"                    throw InternityException.unknownUpdateField(p);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Joannaj00"},"content":"                }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Joannaj00"},"content":"            }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Joannaj00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidPayFormat();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Joannaj00"},"content":"        if (company \u003d\u003d null \u0026\u0026 role \u003d\u003d null \u0026\u0026 deadline \u003d\u003d null \u0026\u0026 pay \u003d\u003d null \u0026\u0026 status \u003d\u003d null) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.noUpdateFieldsProvided();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Joannaj00"},"content":"        return new UpdateCommand(index, company, role, deadline, pay, status);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-13T21:51:16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BestBearrr"},"content":"     * Parses the arguments for List Command to create an {@link ListCommand} instance.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BestBearrr"},"content":"     * @param args arguments for {@link ListCommand}","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BestBearrr"},"content":"     * @return an instance of ListCommand constructed from the parsed arguments.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BestBearrr"},"content":"     *      Returns a default ListCommand if no arguments are provided.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BestBearrr"},"content":"     * @throws InternityException if the arguments are missing or invalid.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"lukeai-tan"},"content":"    public static ListCommand parseListCommandArgs(String args) throws InternityException {","lastModifiedDate":"2025-10-13T21:51:16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"V1T0bh"},"content":"        if (args \u003d\u003d null || args.isBlank()) {","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"V1T0bh"},"content":"            return new ListCommand(ListCommand.orderType.DEFAULT); // Default order","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"V1T0bh"},"content":"        if (!args.startsWith(\"sort/\")) {","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"V1T0bh"},"content":"            throw InternityException.invalidListCommand();","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"V1T0bh"},"content":"        String[] splitArgs \u003d args.split(\"\\\\s+sort/\");","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"V1T0bh"},"content":"        if (splitArgs.length \u003e 1) {","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"V1T0bh"},"content":"            throw InternityException.invalidListCommand();","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"V1T0bh"},"content":"        String order \u003d splitArgs[0].substring(\"sort/\".length()).trim();","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"V1T0bh"},"content":"        if (order.equals(\"asc\")) {","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"V1T0bh"},"content":"            return new ListCommand(ListCommand.orderType.ASCENDING);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"V1T0bh"},"content":"        } else if (order.equals(\"desc\")) {","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"V1T0bh"},"content":"            return new ListCommand(ListCommand.orderType.DESCENDING);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"V1T0bh"},"content":"        } else {","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"V1T0bh"},"content":"            throw InternityException.invalidListCommand();","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-13T21:51:16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Joannaj00"},"content":"    private static String requireArgs(String args) throws InternityException {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Joannaj00"},"content":"        if (args \u003d\u003d null || args.isBlank()) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidUpdateFormat();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Joannaj00"},"content":"        return args.trim();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Joannaj00"},"content":"    private static String requireTagged(String tagged) throws InternityException {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Joannaj00"},"content":"        if (tagged.isBlank()) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.noUpdateFieldsProvided();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Joannaj00"},"content":"        return tagged;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Joannaj00"},"content":"    private static String[] splitIndexAndTagged(String trimmed) throws InternityException {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Joannaj00"},"content":"        int firstSpace \u003d trimmed.indexOf(\u0027 \u0027);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Joannaj00"},"content":"        if (firstSpace \u003c 0) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidUpdateFormat();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Joannaj00"},"content":"        String indexToken \u003d trimmed.substring(0, firstSpace).trim();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Joannaj00"},"content":"        String tagged \u003d trimmed.substring(firstSpace + 1).trim();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Joannaj00"},"content":"        return new String[] { indexToken, tagged };","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Joannaj00"},"content":"    private static int parseOneBasedIndex(String indexToken) throws InternityException {","lastModifiedDate":"2025-10-21T22:27:48","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Joannaj00"},"content":"        try {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Joannaj00"},"content":"            return Integer.parseInt(indexToken) - 1;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Joannaj00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidIndexForUpdate();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Joannaj00"},"content":"    private static String valueAfterTag(String token, String tag) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Joannaj00"},"content":"        return token.substring(tag.length()).trim();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-13T21:51:16","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-20T17:52:34","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"lukeai-tan"},"content":"    public static UsernameCommand parseUsernameCommandArgs(String args) throws InternityException {","lastModifiedDate":"2025-10-20T17:52:34","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"lukeai-tan"},"content":"        if (args \u003d\u003d null || args.isBlank()) {","lastModifiedDate":"2025-10-20T17:52:34","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidUsernameCommand();","lastModifiedDate":"2025-10-20T17:52:34","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-20T17:52:34","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"lukeai-tan"},"content":"        return new UsernameCommand(args);","lastModifiedDate":"2025-10-20T17:52:34","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-20T17:52:34","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false}],"authorContributionMap":{"Joannaj00":88,"lukeai-tan":45,"BestBearrr":101,"V1T0bh":30}},{"path":"src/main/java/internity/cli/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.cli;","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.CommandFactory;","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.Command;","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * Parses raw user input into executable {@link Command} objects. \u003cbr\u003e","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" * The {@code CommandParser} is responsible for identifying the command keyword,","lastModifiedDate":"2025-10-10T19:27:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" * validating the input and constructing the instance of the","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" * corresponding command.","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003eSupported commands include:","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":" *      \u003cli\u003e{@code exit} - exits the program\u003c/li\u003e","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-04T16:16:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"public class CommandParser {","lastModifiedDate":"2025-10-10T19:27:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    private static final Logger logger \u003d Logger.getLogger(CommandParser.class.getName());","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    static {","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     * Parses the given input string and returns the corresponding {@link Command}. \u003cbr\u003e","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     * The first token (before the first space) is treated as the command keyword.","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"     * @param input raw user input","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"     * @return a {@link Command} corresponding to the input","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"     * @throws InternityException if input is null or blank or unknown command is entered","lastModifiedDate":"2025-10-04T19:04:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"    public Command parseInput(String input) throws InternityException {","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        if (input \u003d\u003d null || input.isBlank()) {","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidInput();","lastModifiedDate":"2025-10-04T19:04:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"        assert !input.isBlank() : \"Input should not be blank after validation\";","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        String[] parts \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"        assert parts.length \u003e\u003d 1 : \"Splitting input should result in at least one part\";","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        String commandWord \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        logger.fine(() -\u003e \"Parsed command: \\\"\" + commandWord + \"\\\" with args: \\\"\" + args + \"\\\"\");","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"        assert !commandWord.isBlank() : \"Command keyword must not be blank\";","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"        assert args !\u003d null : \"Args should never be null (may be empty string)\";","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"        CommandFactory commandFactory \u003d new CommandFactory();","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandFactory.createCommand(commandWord, args);","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"        logger.fine(() -\u003e \"Parsed command: \\\"\" + commandWord + \"\\\" with args: \\\"\" + args + \"\\\"\");","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"        assert command !\u003d null : \"CommandFactory should never return null command\";","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"        logger.info(() -\u003e \"Successfully created command: \" + command.getClass().getSimpleName());","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"        return command;","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":63}},{"path":"src/main/java/internity/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package internity.commands;","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-23T23:44:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:44:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":" * Represents a command that adds a new {@link Internship} entry to the {@link InternshipList}.","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":" * The command parses a user input string in the following format:","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":" *     add company/COMPANY_NAME role/ROLE_NAME deadline/DD-MM-YYYY pay/PAY_AMOUNT","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":" * Example:","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":" *     add company/Google role/Software Engineer deadline/17-09-2025 pay/120000","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":" *","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":" * Each field is parsed and validated before creating a new {@link Internship} object.","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"    private static final Logger logger \u003d Logger.getLogger(AddCommand.class.getName());","lastModifiedDate":"2025-10-21T21:36:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T21:36:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"    private final String company;","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"    private final String role;","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"    private final Date deadline;","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"    private final int pay;","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"     * Constructs an {@code AddCommand} with the specified internship details.","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"     * @param company  the name of the company offering the internship","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"     * @param role     the internship role or position","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"     * @param deadline the application deadline for the internship","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"     * @param pay      the monthly pay or stipend for the internship","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"    public AddCommand(String company, String role, Date deadline, int pay) {","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"        this.company \u003d company;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"        this.role \u003d role;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"        this.pay \u003d pay;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"     * Executes the add command by creating a new {@link Internship} object and","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"     * adding it to the global static {@link InternshipList}.","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"     * Once added, the {@link Ui} class is used to show a confirmation message.","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"     * @throws InternityException if an error occurs.","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"    public void execute() throws InternityException {","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"        logger.info(\"Executing add command\");","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"        Internship internship \u003d new Internship(company, role, deadline, pay);","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"        InternshipList.add(internship);","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"        Ui.printAddInternship(internship);","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"        logger.info(\"Add command executed successfully.\");","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"     * Indicates that this command does not terminate the program.","lastModifiedDate":"2025-10-26T01:56:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"     * @return {@code false}","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"        return false;","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":3,"BestBearrr":75}},{"path":"src/main/java/internity/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-02T23:12:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":" * Represents an abstract command in the system. \u003cbr\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":" * Each user instruction (e.g. {@code add}, {@code delete}, {@code list})","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":" * is encapsulated as a {@code Command} object that defines specific behavior.","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003eSubclasses must implement:","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" *     \u003cli\u003e{@link #execute()} - performs the action defined by the command\u003c/li\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" *     \u003cli\u003e{@link #isExit()} - indicates whether the command ends the program\u003c/li\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003eThis design follows the \u003cb\u003eCommand Pattern\u003c/b\u003e,","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":" * allowing user inputs to be decoupled from their execution logic.\u003c/p\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"public abstract class Command {","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"     * Executes the action associated with this command.","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BenyAlbatross"},"content":"    public abstract void execute() throws InternityException;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"     * Determines whether this command signals program termination.","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     * @return {@code true} if the command exits the program, {@code false} otherwise","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":29,"BenyAlbatross":3}},{"path":"src/main/java/internity/commands/CommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import internity.cli.ArgumentParser;","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":" * A factory class responsible for creating {@link Command} objects","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":" * based on the user input command word and its arguments.","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" * The {@code CommandFactory} delegates argument parsing to the","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * {@link ArgumentParser} and returns the corresponding {@link Command}","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" * subclass instance for execution. If the provided command word does not","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" * match any recognized command, an {@link InternityException} is thrown.","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003eSupported commands include:\u003c/p\u003e","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":" *   \u003cli\u003e{@link AddCommand}\u003c/li\u003e","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":" *   \u003cli\u003e{@link DeleteCommand}\u003c/li\u003e","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":" *   \u003cli\u003e{@link UpdateCommand}\u003c/li\u003e","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":" *   \u003cli\u003e{@link ListCommand}\u003c/li\u003e","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":" *   \u003cli\u003e{@link UsernameCommand}\u003c/li\u003e","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":" *   \u003cli\u003e{@link ExitCommand}\u003c/li\u003e","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-23T23:03:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"public class CommandFactory {","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"     * Creates a {@link Command} instance based on the specified command word","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     * and argument string.","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"     * The method determines which command to create by matching the given","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"     * {@code commandWord} against known commands. It then delegates argument","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"     * parsing to the appropriate static method in {@link ArgumentParser}.","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"     * @param commandWord the command keyword (e.g., \"add\", \"delete\", \"update\")","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"     * @param args the arguments to be parsed and passed to the command","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"     * @return a concrete {@link Command} object representing the parsed command","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"     * @throws InternityException if the command is unknown or argument parsing fails","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-23T23:05:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"    public Command createCommand(String commandWord, String args) throws InternityException {","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"        case \"add\":","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"            return ArgumentParser.parseAddCommandArgs(args);","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        case \"delete\":","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"            return ArgumentParser.parseDeleteCommandArgs(args);","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"        case \"find\":","lastModifiedDate":"2025-10-21T22:29:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"            return ArgumentParser.parseFindCommandArgs(args);","lastModifiedDate":"2025-10-21T22:29:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"        case \"update\":","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"            return ArgumentParser.parseUpdateCommandArgs(args);","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"        case \"list\":","lastModifiedDate":"2025-10-13T21:50:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"            return ArgumentParser.parseListCommandArgs(args);","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"        case \"username\":","lastModifiedDate":"2025-10-20T17:52:50","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"            return ArgumentParser.parseUsernameCommandArgs(args);","lastModifiedDate":"2025-10-20T17:52:50","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"        case \"dashboard\":","lastModifiedDate":"2025-10-25T20:51:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"            return new DashboardCommand();","lastModifiedDate":"2025-10-25T20:51:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"        case \"exit\":","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"        default:","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.unknownCommand(commandWord);","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":57,"BestBearrr":4,"V1T0bh":2}},{"path":"src/main/java/internity/commands/DashboardCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-21T16:06:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-21T16:06:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-26T01:41:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import internity.ui.DashboardUi;","lastModifiedDate":"2025-10-26T01:46:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":" * Represents the {@code dashboard} command, which displays the dashboard.","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":" * When executed, this command prints the user dashboard to the console,","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" * showing the current user\u0027s information, total internships, nearest deadline,","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * and a breakdown of internships by status.","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003eCommand format: {@code dashboard}\u003c/p\u003e","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"public class DashboardCommand extends Command {","lastModifiedDate":"2025-10-21T16:06:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"     * Executes the dashboard command by printing the dashboard UI.","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"     * @throws InternityException if an error occurs while accessing internship data","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"    @Override","lastModifiedDate":"2025-10-21T16:06:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    public void execute() throws InternityException {","lastModifiedDate":"2025-10-26T01:41:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"        DashboardUi.printDashboard();","lastModifiedDate":"2025-10-26T01:46:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-21T16:06:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-21T16:06:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     * Indicates that this command does not terminate the program.","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"     * @return {@code false}","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-26T01:56:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"    @Override","lastModifiedDate":"2025-10-21T16:06:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-21T16:06:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"        return false;","lastModifiedDate":"2025-10-21T16:06:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-21T16:06:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-21T16:06:16","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":37}},{"path":"src/main/java/internity/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenyAlbatross"},"content":"package internity.commands;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-23T23:44:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:44:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BenyAlbatross"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BenyAlbatross"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BenyAlbatross"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteCommand.class.getName());","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BenyAlbatross"},"content":"    private final int index;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BenyAlbatross"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BenyAlbatross"},"content":"    @Override","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BenyAlbatross"},"content":"    public void execute() throws InternityException {","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BenyAlbatross"},"content":"        logger.info(\"Executing delete command for index: \" + index);","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BenyAlbatross"},"content":"        // Get the internship before deleting to display its info","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        Internship internship \u003d InternshipList.get(index);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BenyAlbatross"},"content":"        String internshipInfo \u003d internship.getCompany() + \" - \" + internship.getRole();","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BenyAlbatross"},"content":"        // Assertion for internshipInfo not required here as strong concatenation will always be true","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BenyAlbatross"},"content":"        logger.fine(\"Retrieved internship: \" + internshipInfo);","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BenyAlbatross"},"content":"        // Delete the internship","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.delete(index);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BenyAlbatross"},"content":"        // Get the new size after deletion","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"        int totalItems \u003d InternshipList.size();","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BenyAlbatross"},"content":"        assert totalItems \u003e\u003d 0 : \"Size cannot be negative after deletion\";","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BenyAlbatross"},"content":"        // Print the removal message","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BenyAlbatross"},"content":"        Ui.printRemoveInternship(internshipInfo, totalItems);","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BenyAlbatross"},"content":"        logger.info(\"Delete command executed successfully. Remaining items: \" + totalItems);","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BenyAlbatross"},"content":"    @Override","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BenyAlbatross"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BenyAlbatross"},"content":"        return false;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BenyAlbatross"},"content":"}","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":6,"BenyAlbatross":43}},{"path":"src/main/java/internity/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-18T20:50:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:50:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":" * Represents the {@code exit} command, which terminates the program.","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":" * When executed, it prints an exit message and signals that the","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" * program should exit.","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003eUsage: {@code exit}\u003c/p\u003e","lastModifiedDate":"2025-10-04T16:17:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"     * Executes the {@code exit} command.","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"     * Prints an exit message.","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"    @Override","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    public void execute() {","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        Ui.printExit();","lastModifiedDate":"2025-10-18T20:50:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"     * Indicates that this command terminates the program.","lastModifiedDate":"2025-10-26T01:56:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     * @return {@code true}","lastModifiedDate":"2025-10-26T01:56:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"    @Override","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"        return true;","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":35}},{"path":"src/main/java/internity/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package internity.commands;","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-24T15:54:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-24T15:54:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":" * Represents a command that allows the user to find internships with","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":" * matching company or role names based on a keyword.","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":" *","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":" * The command parses a user input string in the following format:","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":" *     find KEYWORD","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":" * Example:","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":" *     find Google","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":" *     find Software Engineer","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"    private static final Logger logger \u003d Logger.getLogger(FindCommand.class.getName());","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"    private final String keyword;","lastModifiedDate":"2025-10-21T22:16:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"     * Constructs a {@code FindCommand} with the specified keyword to search for internships.","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"     * @param keyword the keyword used to search for matching internships.","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"     * Executes the find command by searching for internships in the {@link InternshipList}","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"     * that match the provided keyword.","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"     * The command uses the {@link InternshipList} to filter","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"     * the internships based on the given keyword.","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"     * @throws InternityException if an error occurs while executing the find command.","lastModifiedDate":"2025-10-21T22:22:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"    public void execute() throws InternityException {","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"        logger.info(\"Executing find command\");","lastModifiedDate":"2025-10-21T22:16:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"        InternshipList.findInternship(keyword);","lastModifiedDate":"2025-10-21T22:16:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"        logger.info(\"Find command executed successfully.\");","lastModifiedDate":"2025-10-21T22:16:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"     * Indicates that this command does not terminate the program.","lastModifiedDate":"2025-10-26T01:56:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"     * @return {@code false}","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"        return false;","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-10-21T22:16:46","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":3,"BestBearrr":61}},{"path":"src/main/java/internity/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package internity.commands;","lastModifiedDate":"2025-10-13T20:00:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:00:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-23T23:44:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:44:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":" * Represents a command that lists all internship applications","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":" * as a formatted table","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":" * \u003cbr\u003e","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":" * Command format:","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":" * {@code list [sort/asc|sort/desc]}","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-10-13T20:26:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"    public enum orderType {","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":"        DEFAULT,","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"        ASCENDING,","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":"        DESCENDING","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":"    private static final Logger logger \u003d Logger.getLogger(ListCommand.class.getName());","lastModifiedDate":"2025-10-16T19:19:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":"    orderType order;","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"    public ListCommand(orderType o) {","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"        order \u003d o;","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"     * Executes the {@code list} command.","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"     * Prints a formatted table with all internship applications.","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"    @Override","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"    public void execute() throws InternityException {","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"        logger.info(\"Executing list command\");","lastModifiedDate":"2025-10-16T19:19:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.listAll(order);","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"        logger.info(\"List command executed successfully.\");","lastModifiedDate":"2025-10-16T19:19:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-26T01:56:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"     * Indicates that this command does not terminate the program.","lastModifiedDate":"2025-10-26T01:56:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-26T01:56:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"     * @return {@code false}","lastModifiedDate":"2025-10-26T01:56:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-26T01:56:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"    @Override","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"        return false;","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-10-13T20:00:32","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":7,"V1T0bh":44}},{"path":"src/main/java/internity/commands/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joannaj00"},"content":"package internity.commands;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Joannaj00"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Joannaj00"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-10T02:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Joannaj00"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Joannaj00"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":"/**","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Joannaj00"},"content":" * Represents a command that updates one or more fields of an existing internship entry","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Joannaj00"},"content":" * in the {@link InternshipList}.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Joannaj00"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Joannaj00"},"content":" * The command parses a user input string in the following format:","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Joannaj00"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Joannaj00"},"content":" *     update INDEX [company/COMPANY_NAME] [role/ROLE_NAME] [deadline/DD-MM-YYYY] [pay/PAY_AMOUNT] [status/NEW_STATUS]","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Joannaj00"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Joannaj00"},"content":" * Example:","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Joannaj00"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Joannaj00"},"content":" *     update 1 company/Google role/Software Engineer pay/9000 status/Accepted","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Joannaj00"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Joannaj00"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Joannaj00"},"content":" *","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Joannaj00"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Joannaj00"},"content":" * Each provided field will be validated and isUpdated in the corresponding internship entry.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Joannaj00"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Joannaj00"},"content":" */","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Joannaj00"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Joannaj00"},"content":"    private final int index;     ","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Joannaj00"},"content":"    private final String company;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Joannaj00"},"content":"    private final String role;    ","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Joannaj00"},"content":"    private final Date deadline;   ","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Joannaj00"},"content":"    private final Integer pay;   ","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Joannaj00"},"content":"    private final String status;   ","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Joannaj00"},"content":"    /**","lastModifiedDate":"2025-10-10T02:20:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Joannaj00"},"content":"     * Constructs an {@code UpdateCommand} that updates one or more internship fields.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Joannaj00"},"content":"     * @param index    the index of the internship to be isUpdated (0-based)","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Joannaj00"},"content":"     * @param company  the new company name, or {@code null} if unchanged","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Joannaj00"},"content":"     * @param role     the new role, or {@code null} if unchanged","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Joannaj00"},"content":"     * @param deadline the new application deadline, or {@code null} if unchanged","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Joannaj00"},"content":"     * @param pay      the new pay amount, or {@code null} if unchanged","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Joannaj00"},"content":"     * @param status   the new internship status, or {@code null} if unchanged","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Joannaj00"},"content":"     */","lastModifiedDate":"2025-10-10T02:20:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Joannaj00"},"content":"    public UpdateCommand(int index, String company, String role, Date deadline, Integer pay, String status) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-10-11T15:11:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Joannaj00"},"content":"        this.company \u003d company;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Joannaj00"},"content":"        this.role \u003d role;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Joannaj00"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Joannaj00"},"content":"        this.pay \u003d pay;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Joannaj00"},"content":"        this.status \u003d status;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Joannaj00"},"content":"    /**","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Joannaj00"},"content":"     * Constructs a simplified {@code UpdateCommand} that only updates the internship status.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Joannaj00"},"content":"     * @param index     the index of the internship to be isUpdated (0-based)","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Joannaj00"},"content":"     * @param newStatus the new internship status","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Joannaj00"},"content":"     */","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Joannaj00"},"content":"    public UpdateCommand(int index, String newStatus) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Joannaj00"},"content":"        this(index, null, null, null, null, newStatus);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Joannaj00"},"content":"    /**","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Joannaj00"},"content":"     * Executes the update command by applying each provided field update to the specified internship.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Joannaj00"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Joannaj00"},"content":"     * Each non-null parameter will trigger a corresponding update in {@link InternshipList}.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Joannaj00"},"content":"     * If no valid fields are provided, an {@link InternityException} will be thrown.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Joannaj00"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Joannaj00"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Joannaj00"},"content":"     * After performing the update, a confirmation message is displayed through {@link Ui#printUpdateInternship()}.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Joannaj00"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Joannaj00"},"content":"     * @throws InternityException if the index is invalid or no fields are provided.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Joannaj00"},"content":"     */","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Joannaj00"},"content":"    @Override","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"    public void execute() throws InternityException {","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Joannaj00"},"content":"        boolean isUpdated \u003d false; ","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Joannaj00"},"content":"        if (company !\u003d null) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Joannaj00"},"content":"            InternshipList.updateCompany(index, company);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Joannaj00"},"content":"            isUpdated \u003d true;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Joannaj00"},"content":"        if (role !\u003d null) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Joannaj00"},"content":"            InternshipList.updateRole(index, role);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Joannaj00"},"content":"            isUpdated \u003d true;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Joannaj00"},"content":"        if (deadline !\u003d null) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Joannaj00"},"content":"            InternshipList.updateDeadline(index, deadline);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Joannaj00"},"content":"            isUpdated \u003d true;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Joannaj00"},"content":"        if (pay !\u003d null) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Joannaj00"},"content":"            InternshipList.updatePay(index, pay);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Joannaj00"},"content":"            isUpdated \u003d true;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Joannaj00"},"content":"        if (status !\u003d null) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Joannaj00"},"content":"            InternshipList.updateStatus(index, status);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Joannaj00"},"content":"            isUpdated \u003d true;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Joannaj00"},"content":"        if (!isUpdated) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Joannaj00"},"content":"            throw new InternityException(","lastModifiedDate":"2025-10-21T01:23:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Joannaj00"},"content":"                \"Provide at least one field to update: company/, role/, deadline/, pay/, status/\"","lastModifiedDate":"2025-10-21T01:23:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Joannaj00"},"content":"            );","lastModifiedDate":"2025-10-21T01:23:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Joannaj00"},"content":"        Ui.printUpdateInternship();","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Joannaj00"},"content":"    /**","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"     * Indicates that this command does not terminate the program.","lastModifiedDate":"2025-10-26T01:56:02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Joannaj00"},"content":"     * @return {@code false}","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Joannaj00"},"content":"     */","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Joannaj00"},"content":"    @Override","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Joannaj00"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Joannaj00"},"content":"        return false;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Joannaj00"},"content":"}","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false}],"authorContributionMap":{"Joannaj00":114,"lukeai-tan":3}},{"path":"src/main/java/internity/commands/UsernameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-19T19:07:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-19T19:07:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-10-22T19:23:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-22T19:23:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-22T19:23:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-20T17:53:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-22T19:23:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-20T17:53:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * Represents the {@code username} command, which sets the username.","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" * This command allows the user to specify their preferred username, which is stored","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" * in the {@link InternshipList} for use throughout the session (and can be persisted","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" * to storage when the data is saved).","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003eCommand format: {@code username USERNAME}\u003c/p\u003e","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"public class UsernameCommand extends Command {","lastModifiedDate":"2025-10-19T19:07:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(UsernameCommand.class.getName());","lastModifiedDate":"2025-10-22T19:23:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    private final String username;","lastModifiedDate":"2025-10-22T19:23:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-20T17:53:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"     * Constructs a {@code UsernameCommand} with the specified username.","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     * @param args The username string provided by the user input.","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     *             This value is stored and later used to update the application state.","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"    public UsernameCommand(String args) {","lastModifiedDate":"2025-10-20T17:53:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"        assert args !\u003d null : \"Username argument must not be null\";","lastModifiedDate":"2025-10-23T22:39:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"        assert !args.trim().isEmpty() : \"Username argument must not be empty\";","lastModifiedDate":"2025-10-23T22:39:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T22:39:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"        username \u003d args;","lastModifiedDate":"2025-10-20T17:53:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        LOGGER.log(Level.FINE, \"UsernameCommand created with username: {0}\", username);","lastModifiedDate":"2025-10-22T19:23:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-20T17:53:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-20T17:53:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"     * Executes the {@code username} command.","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"     * This method sets Internity\u0027s current username to the provided value,","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"     * updates it in the {@link InternshipList}, and prints a confirmation message","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"     * to the user interface.","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"    @Override","lastModifiedDate":"2025-10-19T19:07:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"    public void execute() {","lastModifiedDate":"2025-10-19T19:07:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"        assert username !\u003d null \u0026\u0026 !username.isEmpty()","lastModifiedDate":"2025-10-23T22:39:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"                : \"Username must be non-null and non-empty before execution\";","lastModifiedDate":"2025-10-23T22:39:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"        LOGGER.log(Level.INFO, \"Executing UsernameCommand: setting username to {0}\", username);","lastModifiedDate":"2025-10-22T19:23:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.setUsername(username);","lastModifiedDate":"2025-10-20T17:53:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"        Ui.printSetUsername(username);","lastModifiedDate":"2025-10-22T19:23:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"        assert username.equals(InternshipList.getUsername())","lastModifiedDate":"2025-10-23T22:39:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"                : \"Username was incorrectly set in InternshipList\";","lastModifiedDate":"2025-10-23T22:39:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"        LOGGER.log(Level.FINE, \"Username successfully set in InternshipList and printed to UI\");","lastModifiedDate":"2025-10-22T19:23:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-19T19:07:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-19T19:07:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"     * Indicates that this command does not terminate the program.","lastModifiedDate":"2025-10-26T01:56:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"     * @return {@code false}","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-23T22:29:13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"    @Override","lastModifiedDate":"2025-10-19T19:07:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-19T19:07:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"        LOGGER.log(Level.FINEST, \"isExit() called on UsernameCommand\");","lastModifiedDate":"2025-10-22T19:23:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"        return false;","lastModifiedDate":"2025-10-19T19:07:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-19T19:07:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-19T19:07:37","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":71}},{"path":"src/main/java/internity/core/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.core;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"public class Date implements Comparable\u003cDate\u003e {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"    private int day;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"    private int month;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"    private int year;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"    public Date(int day, int month, int year) {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"        setDay(day);","lastModifiedDate":"2025-10-27T17:30:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"        setMonth(month);","lastModifiedDate":"2025-10-27T17:30:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"        setYear(year);","lastModifiedDate":"2025-10-27T17:30:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    public int getMonth() {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"        return month;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"    public void setMonth(int month) {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"        this.month \u003d month;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    public int getDay() {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        return day;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    public void setDay(int day) {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"        this.day \u003d day;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"    public int getYear() {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"        return year;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"    public void setYear(int year) {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"        this.year \u003d year;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"    @Override","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"    public int compareTo(Date other) {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"        if (this.year !\u003d other.year) {","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"            return this.year - other.year;","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"        if (this.month !\u003d other.month) {","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"            return this.month - other.month;","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"        return this.day - other.day;","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"    @Override","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"    public String toString() {","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"        return String.format(\"%02d-%02d-%04d\", day, month, year);","lastModifiedDate":"2025-10-09T11:08:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":53}},{"path":"src/main/java/internity/core/InternityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.core;","lastModifiedDate":"2025-10-04T17:42:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T17:42:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":" * Represents custom exceptions used throughout the Internity application.","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":" * This class extends {@code Exception} and provides static methods that create a specific","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":" * exception message for common error conditions such as invalid input or unknown commands.","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"public class InternityException extends Exception {","lastModifiedDate":"2025-10-04T17:42:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"    public InternityException(String message) {","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"        super(message);","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T17:42:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException invalidInput() {","lastModifiedDate":"2025-10-04T19:04:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"        return new InternityException(\"Input cannot be null or blank\");","lastModifiedDate":"2025-10-04T19:04:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-04T19:04:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T19:04:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException unknownCommand(String message) {","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"        return new InternityException(\"Unknown command: \" + message);","lastModifiedDate":"2025-10-04T19:16:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:40:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException invalidDateFormat() {","lastModifiedDate":"2025-10-08T22:40:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"        return new InternityException(\"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\");","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:40:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-10T18:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"    public static InternityException invalidAddCommand() {","lastModifiedDate":"2025-10-11T17:51:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"        return new InternityException(\"Invalid add command. Usage: add company/COMPANY_NAME\" +","lastModifiedDate":"2025-10-11T17:51:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"                \" role/ROLE_NAME deadline/DEADLINE pay/PAY_AMOUNT\");","lastModifiedDate":"2025-10-11T17:51:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T17:51:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T17:51:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException invalidDeleteCommand() {","lastModifiedDate":"2025-10-10T18:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"        return new InternityException(\"Invalid delete command. Usage: delete INDEX\");","lastModifiedDate":"2025-10-10T18:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-10T18:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"    public static InternityException invalidFindCommand() {","lastModifiedDate":"2025-10-21T22:58:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"        return new InternityException(\"Invalid find command. Usage: find KEYWORD\");","lastModifiedDate":"2025-10-21T22:58:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T22:58:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:58:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException invalidInternshipIndex() {","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        return new InternityException(\"Invalid internship index.\");","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-13T21:50:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException invalidListCommand() {","lastModifiedDate":"2025-10-13T21:50:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"        return new InternityException(\"Invalid list command. Usage: list [sort/asc|sort/desc]\");","lastModifiedDate":"2025-10-20T21:31:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-13T21:50:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-20T17:56:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException invalidUpdateFormat() {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"                \"Invalid update command. Usage: update INDEX field/VALUE\"","lastModifiedDate":"2025-10-27T17:34:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Joannaj00"},"content":"        );","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException noUpdateFieldsProvided() {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Joannaj00"},"content":"                \"Provide at least one field to update: company/, role/, deadline/, pay/, status/\"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Joannaj00"},"content":"        );","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException emptyField(String tag) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(tag + \" cannot be empty\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException invalidIndexForUpdate() {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Joannaj00"},"content":"                \"Invalid index. Use a positive integer, for example: update 1 company/Google\"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Joannaj00"},"content":"        );","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException invalidPayFormat() {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(\"Invalid pay. Use a whole number (example: pay/8000)\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException unknownUpdateField(String token) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Joannaj00"},"content":"                \"Unknown update field in \\\"\" + token","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Joannaj00"},"content":"                + \"\\\". Allowed: company, role, deadline, pay, status\"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Joannaj00"},"content":"        );","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException invalidStatus(String value) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Joannaj00"},"content":"                \"Invalid status \\\"\" + value","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Joannaj00"},"content":"                + \"\\\". Allowed: Pending, Interested, Applied, Interviewing, Offer, Accepted, Rejected\"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Joannaj00"},"content":"        );","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException invalidUsernameCommand() {","lastModifiedDate":"2025-10-20T17:56:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"        return new InternityException(\"Invalid username command. Usage: username USERNAME\");","lastModifiedDate":"2025-10-20T17:56:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-20T17:56:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-04T17:42:39","isFullCredit":false}],"authorContributionMap":{"Joannaj00":39,"lukeai-tan":43,"BestBearrr":9,"V1T0bh":1}},{"path":"src/main/java/internity/core/InternityManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.core;","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import internity.cli.CommandParser;","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.Command;","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * The {@code InternityManager} class serves as the central controller","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" * for the Internity application. It manages the main program loop,","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" * user interaction, command parsing, and data persistence.","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" * Responsibilities include:","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":" *     \u003cli\u003eInitializing core components such as storage and parser.\u003c/li\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":" *     \u003cli\u003eLoading and saving internship data from persistent storage.\u003c/li\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":" *     \u003cli\u003eHandling user input via the command-line interface.\u003c/li\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":" *     \u003cli\u003eExecuting parsed commands and managing application flow.\u003c/li\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"public class InternityManager {","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    private static final Logger logger \u003d Logger.getLogger(InternityManager.class.getName());","lastModifiedDate":"2025-10-24T15:07:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    private final CommandParser commandParser;","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     * Constructs a new {@code InternityManager} instance.","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"     * @param storagePath the path to the file or directory used for storing internship data","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"    public InternityManager(String storagePath) {","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"        Storage storage \u003d new Storage(storagePath);","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.setStorage(storage);","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        commandParser \u003d new CommandParser();","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"     * Starts the Internity application.","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"     * This method performs the following tasks in sequence:","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003eRedirects error output to standard output for ordered display.\u003c/li\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003eLoads saved internship data from storage.\u003c/li\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003ePrints the welcome message and configures the username if necessary.\u003c/li\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003eBegins the main command loop, processing user input until an exit command is issued.\u003c/li\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"    public void start() {","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"        System.setErr(System.out);","lastModifiedDate":"2025-10-24T00:15:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"        loadData();","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"        configureUsername();","lastModifiedDate":"2025-10-23T22:29:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"        while (!isExit \u0026\u0026 scanner.hasNextLine()) {","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"            try {","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"                Command command \u003d commandParser.parseInput(input);","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"                command.execute();","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"                saveData(); // auto-save after each command","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"            }","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"        scanner.close();","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"     * Loads previously saved internship data from storage.","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"     * If loading fails, a warning message is displayed and the application","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"     * starts with an empty internship list.","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lukeai-tan"},"content":"    private void loadData() {","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"        try {","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"            InternshipList.loadFromStorage();","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"            System.out.println(\"Warning: Could not load data from storage. Starting with empty list.\");","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"     * Saves the current internship data to persistent storage.","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"     * Displays a warning message if saving fails.","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"    private void saveData() {","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"        try {","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"            InternshipList.saveToStorage();","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"            System.out.println(\"Warning: Could not save data to storage.\");","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T22:29:38","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lukeai-tan"},"content":"     * Configures the username for the current session.","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"     * If a username is not yet set, the method prompts the user to input one.","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lukeai-tan"},"content":"     * The configured username is then displayed as part of a personalized greeting.","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:32:44","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lukeai-tan"},"content":"    private void configureUsername() {","lastModifiedDate":"2025-10-23T22:29:38","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lukeai-tan"},"content":"        assert scanner !\u003d null : \"Scanner should not be null\";","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lukeai-tan"},"content":"        logger.info(\"Starting username configuration.\");","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lukeai-tan"},"content":"        while (!isValidUsername(InternshipList.getUsername())) {","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lukeai-tan"},"content":"            logger.info(\"No valid username found. Prompting user for input...\");","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lukeai-tan"},"content":"            Ui.printAskUsername();","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lukeai-tan"},"content":"            String username \u003d scanner.nextLine();","lastModifiedDate":"2025-10-23T22:29:38","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lukeai-tan"},"content":"            if (!isValidUsername(username)) {","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lukeai-tan"},"content":"                logger.warning(\"Invalid username entered (empty or null). Asking again...\");","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lukeai-tan"},"content":"                System.out.println(\"Invalid username entered. Try again.\");","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lukeai-tan"},"content":"            } else {","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lukeai-tan"},"content":"                InternshipList.setUsername(username.trim());","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lukeai-tan"},"content":"                logger.info(\"Username successfully set to: \" + username);","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lukeai-tan"},"content":"            }","lastModifiedDate":"2025-10-23T22:29:38","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lukeai-tan"},"content":"        assert InternshipList.getUsername() !\u003d null : \"Username must be initialized before greeting\";","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lukeai-tan"},"content":"        Ui.printGreeting(InternshipList.getUsername());","lastModifiedDate":"2025-10-23T22:29:38","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-23T22:29:38","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lukeai-tan"},"content":"     * Validates a username string to ensure it is not {@code null} or blank.","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lukeai-tan"},"content":"     * @param username the username string to validate","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lukeai-tan"},"content":"     * @return {@code true} if the username is non-null and not blank;\u003cp\u003e","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lukeai-tan"},"content":"     *         {@code false} otherwise","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lukeai-tan"},"content":"    private boolean isValidUsername(String username) {","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lukeai-tan"},"content":"        return username !\u003d null \u0026\u0026 !username.isBlank();","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-24T15:02:30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-19T19:07:45","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":141}},{"path":"src/main/java/internity/core/Internship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.core;","lastModifiedDate":"2025-10-02T23:12:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.Set;","lastModifiedDate":"2025-10-23T23:44:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":" * Represents an internship entry in the Internity application.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":" * Each {@code Internship} object stores key details about an internship,","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" * including the company name, role title, application deadline,","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * pay, and current application status.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" * Internships are {@link Comparable} by their {@link #deadline}, allowing","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" * sorting by date.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":" * Valid statuses include:","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":" * {@code \"Pending\"}, {@code \"Interested\"}, {@code \"Applied\"},","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":" * {@code \"Interviewing\"}, {@code \"Offer\"}, {@code \"Accepted\"}, and {@code \"Rejected\"}.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"public class Internship implements Comparable\u003cInternship\u003e {","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BenyAlbatross"},"content":"    private static final Set\u003cString\u003e VALID_STATUSES \u003d Set.of(","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BenyAlbatross"},"content":"            \"Pending\", \"Interested\", \"Applied\", \"Interviewing\", \"Offer\", \"Accepted\", \"Rejected\"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BenyAlbatross"},"content":"    );","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"    private String company;","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"    private String role;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"    private Date deadline;","lastModifiedDate":"2025-10-08T19:22:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"    private int pay;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Joannaj00"},"content":"    private String status;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"     * Constructs a new {@code Internship} with the given details.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"     * The initial status is set to {@code \"Pending\"} by default.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"     * @param company  the name of the company offering the internship","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"     * @param role     the role or job title of the internship","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"     * @param deadline the application deadline","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"     * @param pay      the pay for the internship","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"    public Internship(String company, String role, Date deadline, int pay) {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"        this.company \u003d company;","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        this.role \u003d role;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"        this.pay \u003d pay;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Joannaj00"},"content":"        this.status \u003d \"Pending\";","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"     * Returns the company offering this internship.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"     * @return the company name","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"    public String getCompany() {","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"        return company;","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"     * Updates the company name for this internship.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"     * @param company the new company name","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"    public void setCompany(String company) {","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"        this.company \u003d company;","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"     * Returns the role for this internship.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"     * @return the internship role","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"    public String getRole() {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"        return role;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"     * Updates the role for this internship.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"     * @param role the new role","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"    public void setRole(String role) {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"        this.role \u003d role;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"     * Returns the application deadline.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"     * @return the deadline as a {@link Date} object","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"    public Date getDeadline() {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"        return deadline;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"     * Updates the application deadline.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"     * @param deadline the new application deadline","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"    public void setDeadline(Date deadline) {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lukeai-tan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"     * Returns the internship pay amount.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lukeai-tan"},"content":"     * @return the pay amount","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lukeai-tan"},"content":"    public int getPay() {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lukeai-tan"},"content":"        return pay;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lukeai-tan"},"content":"     * Updates the pay amount for this internship.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lukeai-tan"},"content":"     * @param pay the new pay amount","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lukeai-tan"},"content":"    public void setPay(int pay) {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lukeai-tan"},"content":"        this.pay \u003d pay;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lukeai-tan"},"content":"     * Returns the current application status.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lukeai-tan"},"content":"     * @return the current status string","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Joannaj00"},"content":"    public String getStatus() {","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Joannaj00"},"content":"        return status;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lukeai-tan"},"content":"     * Updates the application status for this internship.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lukeai-tan"},"content":"     * @param status the new status value","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Joannaj00"},"content":"    public void setStatus(String status) {","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Joannaj00"},"content":"        this.status \u003d status;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lukeai-tan"},"content":"     * Compares this internship with another based on their deadlines.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lukeai-tan"},"content":"     * Earlier deadlines are considered \"less than\" later ones.","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lukeai-tan"},"content":"     * @param o the other internship to compare with","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lukeai-tan"},"content":"     * @return a negative integer, zero, or a positive integer as this internship’s","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lukeai-tan"},"content":"     *         deadline is earlier than, equal to, or later than the specified internship’s deadline","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-24T00:41:34","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"V1T0bh"},"content":"    @Override","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"V1T0bh"},"content":"    public int compareTo(Internship o) {","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"V1T0bh"},"content":"        return this.deadline.compareTo(o.getDeadline());","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BenyAlbatross"},"content":"     * Checks if the given status is valid.","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BenyAlbatross"},"content":"     * @param status The status to validate.","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BenyAlbatross"},"content":"     * @return true if the status is valid, false otherwise.","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BenyAlbatross"},"content":"    public static boolean isValidStatus(String status) {","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BenyAlbatross"},"content":"        return status !\u003d null \u0026\u0026 VALID_STATUSES.contains(status);","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-23T15:38:07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-10-21T22:33:33","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BestBearrr"},"content":"    public String toString() {","lastModifiedDate":"2025-10-21T22:33:33","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BestBearrr"},"content":"        return \"  \" + getCompany() + \" - \" + getRole()","lastModifiedDate":"2025-10-21T22:33:33","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BestBearrr"},"content":"                + \" | Deadline: \" + getDeadline()","lastModifiedDate":"2025-10-21T22:33:33","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BestBearrr"},"content":"                + \" | Pay: \" + getPay()","lastModifiedDate":"2025-10-21T22:38:18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BestBearrr"},"content":"                + \" | Status: \" + getStatus();","lastModifiedDate":"2025-10-21T22:38:18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T22:33:33","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false}],"authorContributionMap":{"Joannaj00":10,"lukeai-tan":137,"BestBearrr":8,"BenyAlbatross":14,"V1T0bh":7}},{"path":"src/main/java/internity/core/InternshipList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package internity.core;","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":"import internity.commands.ListCommand;","lastModifiedDate":"2025-10-21T21:30:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Joannaj00"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":"public class InternshipList {","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":"    public static final int INDEX_MAXLEN \u003d 5;","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":"    public static final int COMPANY_MAXLEN \u003d 15;","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":"    public static final int ROLE_MAXLEN \u003d 30;","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"    public static final int DEADLINE_MAXLEN \u003d 15;","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"    public static final int PAY_MAXLEN \u003d 10;","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":"    public static final int STATUS_MAXLEN \u003d 10;","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:00:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":"    private static final Logger logger \u003d Logger.getLogger(InternshipList.class.getName());","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"    private static final ArrayList\u003cInternship\u003e List \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BenyAlbatross"},"content":"    private static Storage storage;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    private static String username;","lastModifiedDate":"2025-10-20T17:56:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    private InternshipList() {}","lastModifiedDate":"2025-10-18T20:46:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BenyAlbatross"},"content":"     * Sets the storage instance for auto-saving.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BenyAlbatross"},"content":"     * @param storageInstance The storage instance to use for persistence.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BenyAlbatross"},"content":"    public static void setStorage(Storage storageInstance) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BenyAlbatross"},"content":"        storage \u003d storageInstance;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BenyAlbatross"},"content":"     * Loads internships from storage.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BenyAlbatross"},"content":"     * @throws InternityException If there is an error loading from storage.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BenyAlbatross"},"content":"    public static void loadFromStorage() throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BenyAlbatross"},"content":"        if (storage \u003d\u003d null) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BenyAlbatross"},"content":"            return;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e loadedInternships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BenyAlbatross"},"content":"        List.clear();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BenyAlbatross"},"content":"        List.addAll(loadedInternships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BenyAlbatross"},"content":"     * Saves internships to storage.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BenyAlbatross"},"content":"     * @throws InternityException If there is an error saving to storage.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BenyAlbatross"},"content":"    public static void saveToStorage() throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BenyAlbatross"},"content":"        if (storage \u003d\u003d null) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BenyAlbatross"},"content":"            return;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(List);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"    public static void add(Internship item) {","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"V1T0bh"},"content":"        List.add(item);","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"    public static void delete(int index) throws InternityException {","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BenyAlbatross"},"content":"        if (index \u003c 0 || index \u003e\u003d List.size()) {","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"            throw new InternityException(\"Invalid internship index: \" + (index + 1));","lastModifiedDate":"2025-10-13T21:50:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BenyAlbatross"},"content":"        List.remove(index);","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"    public static Internship get(int index) throws InternityException {","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BenyAlbatross"},"content":"        if (index \u003c 0 || index \u003e\u003d List.size()) {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"            throw new InternityException(\"Invalid internship index: \" + (index + 1));","lastModifiedDate":"2025-10-13T21:50:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"V1T0bh"},"content":"        return List.get(index);","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"    public static int size() {","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BenyAlbatross"},"content":"        return List.size();","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"V1T0bh"},"content":"    public static void sortInternships(ListCommand.orderType order) {","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"V1T0bh"},"content":"        if (order \u003d\u003d ListCommand.orderType.DESCENDING) {","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"V1T0bh"},"content":"            List.sort(Comparator.comparing(Internship::getDeadline).reversed());","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"V1T0bh"},"content":"        } else if (order \u003d\u003d ListCommand.orderType.ASCENDING) {","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"V1T0bh"},"content":"            List.sort(Comparator.comparing(Internship::getDeadline));","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"V1T0bh"},"content":"    // list all","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"V1T0bh"},"content":"    public static void listAll(ListCommand.orderType order) throws InternityException {","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"V1T0bh"},"content":"        logger.info(\"Listing all internships\");","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:00:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"V1T0bh"},"content":"        String formatHeader \u003d \"%\" + INDEX_MAXLEN  + \"s %-\" + COMPANY_MAXLEN + \"s %-\" + ROLE_MAXLEN","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"V1T0bh"},"content":"                + \"s %-\" + DEADLINE_MAXLEN + \"s %-\" + PAY_MAXLEN + \"s %-\" + STATUS_MAXLEN + \"s%n\";","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"V1T0bh"},"content":"        String formatContent \u003d \"%\" + INDEX_MAXLEN  + \"d %-\" + COMPANY_MAXLEN + \"s %-\" + ROLE_MAXLEN","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"V1T0bh"},"content":"                + \"s %-\" + DEADLINE_MAXLEN + \"s %-\" + PAY_MAXLEN + \"d %-\" + STATUS_MAXLEN + \"s%n\";","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:00:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:00:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"V1T0bh"},"content":"        if (InternshipList.isEmpty()) {","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"V1T0bh"},"content":"            logger.warning(\"No internships found to list\");","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"No internships found. Please add an internship first.\");","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"V1T0bh"},"content":"            assert (size() \u003d\u003d 0) : \"Internship list should be empty\";","lastModifiedDate":"2025-10-16T16:41:35","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"V1T0bh"},"content":"            return;","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"V1T0bh"},"content":"        assert (size() \u003e 0) : \"Internship list should not be empty\";","lastModifiedDate":"2025-10-16T16:41:35","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"V1T0bh"},"content":"        sortInternships(order);","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"V1T0bh"},"content":"        System.out.printf(formatHeader,","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"V1T0bh"},"content":"                \"No.\", \"Company\", \"Role\", \"Deadline\", \"Pay\", \"Status\");","lastModifiedDate":"2025-10-13T19:59:29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"V1T0bh"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2025-10-13T19:59:29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"V1T0bh"},"content":"        int i;","lastModifiedDate":"2025-10-16T16:41:35","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"V1T0bh"},"content":"        for (i \u003d 0; i \u003c InternshipList.size(); i++) {","lastModifiedDate":"2025-10-16T16:41:35","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"V1T0bh"},"content":"            Internship internship \u003d InternshipList.get(i);","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"V1T0bh"},"content":"            logger.fine(\"Listing internship at index: \" + i);","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"V1T0bh"},"content":"            System.out.printf(formatContent,","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"V1T0bh"},"content":"                    i + 1,","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"V1T0bh"},"content":"                    internship.getCompany(),","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"V1T0bh"},"content":"                    internship.getRole(),","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"V1T0bh"},"content":"                    internship.getDeadline().toString(),","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"V1T0bh"},"content":"                    internship.getPay(),","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"V1T0bh"},"content":"                    internship.getStatus()","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"V1T0bh"},"content":"            );","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"V1T0bh"},"content":"        logger.info(\"Finished listing internships. Total: \" + i);","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"V1T0bh"},"content":"        assert (i \u003d\u003d size()) : \"All internships should be listed\";","lastModifiedDate":"2025-10-16T16:41:35","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"V1T0bh"},"content":"    private static boolean isEmpty() {","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"V1T0bh"},"content":"        return List.isEmpty();","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lukeai-tan"},"content":"    public static void updateStatus(int index, String newStatus) throws InternityException {","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Joannaj00"},"content":"        if (index \u003c 0 || index \u003e\u003d size()) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidInternshipIndex();","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Joannaj00"},"content":"        if (newStatus \u003d\u003d null || !Status.isValid(newStatus)) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidStatus(String.valueOf(newStatus));","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Joannaj00"},"content":"        final String normalized \u003d Status.canonical(newStatus);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Joannaj00"},"content":"        Internship internship \u003d List.get(index);","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Joannaj00"},"content":"        internship.setStatus(normalized);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Joannaj00"},"content":"        System.out.println(\"Updated internship \" + (index + 1) + \" status to: \" + normalized);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Joannaj00"},"content":"    public static void updateCompany(int index, String newCompany) throws InternityException {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Joannaj00"},"content":"        if (index \u003c 0 || index \u003e\u003d size()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidInternshipIndex();","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Joannaj00"},"content":"        Internship it \u003d List.get(index);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Joannaj00"},"content":"        it.setCompany(newCompany);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Joannaj00"},"content":"        System.out.println(\"Updated internship \" + (index + 1) + \" company to: \" + newCompany);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Joannaj00"},"content":"    public static void updateRole(int index, String newRole) throws InternityException {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Joannaj00"},"content":"        if (index \u003c 0 || index \u003e\u003d size()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidInternshipIndex();","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Joannaj00"},"content":"        Internship it \u003d List.get(index);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Joannaj00"},"content":"        it.setRole(newRole);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Joannaj00"},"content":"        System.out.println(\"Updated internship \" + (index + 1) + \" role to: \" + newRole);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Joannaj00"},"content":"    public static void updateDeadline(int index, Date newDeadline) throws InternityException {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Joannaj00"},"content":"        if (index \u003c 0 || index \u003e\u003d size()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidInternshipIndex();","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Joannaj00"},"content":"        Internship it \u003d List.get(index);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Joannaj00"},"content":"        it.setDeadline(newDeadline);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Joannaj00"},"content":"        System.out.println(\"Updated internship \" + (index + 1) + \" deadline to: \" + newDeadline);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Joannaj00"},"content":"    public static void updatePay(int index, int newPay) throws InternityException {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Joannaj00"},"content":"        if (index \u003c 0 || index \u003e\u003d size()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidInternshipIndex();","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Joannaj00"},"content":"        Internship it \u003d List.get(index);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Joannaj00"},"content":"        it.setPay(newPay);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Joannaj00"},"content":"        System.out.println(\"Updated internship \" + (index + 1) + \" pay to: \" + newPay);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BestBearrr"},"content":"    public static void findInternship(String keyword) {","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BestBearrr"},"content":"        ArrayList\u003cInternship\u003e matchingInternships \u003d List.stream()","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BestBearrr"},"content":"                .filter(internship -\u003e","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BestBearrr"},"content":"                        internship.getCompany().toLowerCase().contains(keyword.toLowerCase()) ||","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BestBearrr"},"content":"                                internship.getRole().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BestBearrr"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BestBearrr"},"content":"        if (matchingInternships.isEmpty()) {","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BestBearrr"},"content":"            System.out.println(\"No internships with this company or role found.\");","lastModifiedDate":"2025-10-24T15:24:45","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BestBearrr"},"content":"            return;","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BestBearrr"},"content":"        Ui.printFindInternship(matchingInternships);","lastModifiedDate":"2025-10-21T22:16:46","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:12:16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"lukeai-tan"},"content":"    public static void clear() {","lastModifiedDate":"2025-10-10T19:14:16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"lukeai-tan"},"content":"        List.clear();","lastModifiedDate":"2025-10-10T19:14:16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-10T19:14:16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-20T17:56:59","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lukeai-tan"},"content":"    public static void setUsername(String username) {","lastModifiedDate":"2025-10-20T17:56:59","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.username \u003d username;","lastModifiedDate":"2025-10-20T17:56:59","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-20T17:56:59","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-20T17:56:59","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"lukeai-tan"},"content":"    public static String getUsername() {","lastModifiedDate":"2025-10-20T17:56:59","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"lukeai-tan"},"content":"        return username;","lastModifiedDate":"2025-10-20T17:56:59","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-20T17:56:59","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false}],"authorContributionMap":{"Joannaj00":46,"lukeai-tan":22,"BestBearrr":16,"V1T0bh":83,"BenyAlbatross":44}},{"path":"src/main/java/internity/core/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joannaj00"},"content":"package internity.core;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Joannaj00"},"content":"/**","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Joannaj00"},"content":" * Represents the set of valid internship statuses within the Internity application.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Joannaj00"},"content":" * Each status describes a stage in the internship application process.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Joannaj00"},"content":" *","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Joannaj00"},"content":" * \u003cp\u003eValid statuses include:","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003ePending\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003eInterested\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003eApplied\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003eInterviewing\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003eOffer\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003eAccepted\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003eRejected\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Joannaj00"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Joannaj00"},"content":" *","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Joannaj00"},"content":" * \u003cp\u003eThis enum provides utility methods for validating and normalizing","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Joannaj00"},"content":" * user input so that status values remain consistent across parsing,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Joannaj00"},"content":" * storage, and display.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Joannaj00"},"content":" */","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Joannaj00"},"content":"public enum Status {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Joannaj00"},"content":"    PENDING,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Joannaj00"},"content":"    INTERESTED,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Joannaj00"},"content":"    APPLIED,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Joannaj00"},"content":"    INTERVIEWING,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Joannaj00"},"content":"    OFFER,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Joannaj00"},"content":"    ACCEPTED,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Joannaj00"},"content":"    REJECTED;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Joannaj00"},"content":"    /**","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Joannaj00"},"content":"     * Checks whether the provided string corresponds to a valid {@link Status}.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Joannaj00"},"content":"     * The comparison is case-insensitive.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Joannaj00"},"content":"     * @param s The status string to validate.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Joannaj00"},"content":"     * @return {@code true} if the string matches a valid status, {@code false} otherwise.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Joannaj00"},"content":"     */","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Joannaj00"},"content":"    public static boolean isValid(String s) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Joannaj00"},"content":"        if (s \u003d\u003d null) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Joannaj00"},"content":"            return false;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Joannaj00"},"content":"        try {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Joannaj00"},"content":"            Status.valueOf(s.trim().toUpperCase());","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Joannaj00"},"content":"            return true;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Joannaj00"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Joannaj00"},"content":"            return false;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Joannaj00"},"content":"    /**","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Joannaj00"},"content":"     * Converts a valid status string into a canonical (Title Case) form","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Joannaj00"},"content":"     * for consistent display and storage.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Joannaj00"},"content":"     * \u003cp\u003eExample:","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Joannaj00"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Joannaj00"},"content":"     *     \u003cli\u003e\"interviewing\" → \"Interviewing\"\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Joannaj00"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Joannaj00"},"content":"     * @param s The input status string (must be valid).","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Joannaj00"},"content":"     * @return The canonical Title Case version of the status.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Joannaj00"},"content":"     * @throws IllegalArgumentException If the input does not match any valid status.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Joannaj00"},"content":"     */","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Joannaj00"},"content":"    public static String canonical(String s) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Joannaj00"},"content":"        assert s !\u003d null : \"Status string cannot be null\";","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Joannaj00"},"content":"        String upper \u003d s.trim().toUpperCase();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Joannaj00"},"content":"        Status e \u003d Status.valueOf(upper);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Joannaj00"},"content":"        String lower \u003d e.name().toLowerCase();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Joannaj00"},"content":"        return Character.toUpperCase(lower.charAt(0)) + lower.substring(1);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Joannaj00"},"content":"}","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false}],"authorContributionMap":{"Joannaj00":70}},{"path":"src/main/java/internity/core/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenyAlbatross"},"content":"package internity.core;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BenyAlbatross"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BenyAlbatross"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BenyAlbatross"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BenyAlbatross"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BenyAlbatross"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BenyAlbatross"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BenyAlbatross"},"content":"import internity.utils.DateFormatter;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BenyAlbatross"},"content":"/**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BenyAlbatross"},"content":" * Handles loading and saving internships to a file for persistent storage.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BenyAlbatross"},"content":" * The storage format is a pipe-delimited text file where each line represents one internship.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BenyAlbatross"},"content":" * Format: company | role | deadline (DD-MM-YYYY) | pay | status","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BenyAlbatross"},"content":" */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BenyAlbatross"},"content":"public class Storage {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BenyAlbatross"},"content":"    private static final Logger logger \u003d Logger.getLogger(Storage.class.getName());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BenyAlbatross"},"content":"    static {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BenyAlbatross"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BenyAlbatross"},"content":"    // Indices for pipe delimited format","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BenyAlbatross"},"content":"    private static final int IDX_COMPANY \u003d 0;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BenyAlbatross"},"content":"    private static final int IDX_ROLE \u003d 1;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BenyAlbatross"},"content":"    private static final int IDX_DEADLINE \u003d 2;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BenyAlbatross"},"content":"    private static final int IDX_PAY \u003d 3;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BenyAlbatross"},"content":"    private static final int IDX_STATUS \u003d 4;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BenyAlbatross"},"content":"    private static final int LEN_REQUIRED_FIELDS \u003d 5;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BenyAlbatross"},"content":"    private final Path filePath;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BenyAlbatross"},"content":"     * Creates a new Storage instance with the specified file path.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BenyAlbatross"},"content":"     * @param filePath The path to the file for storing internships.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BenyAlbatross"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BenyAlbatross"},"content":"        assert filePath !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BenyAlbatross"},"content":"        assert !filePath.trim().isEmpty() : \"File path cannot be empty\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BenyAlbatross"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BenyAlbatross"},"content":"     * Loads internships from the storage file.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BenyAlbatross"},"content":"     * The first line should contain \"Username (in line below):\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BenyAlbatross"},"content":"     * The second line should contain the actual username.","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BenyAlbatross"},"content":"     * Remaining lines contain internship entries.","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BenyAlbatross"},"content":"     * @return ArrayList of internships loaded from the file.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BenyAlbatross"},"content":"     * @throws InternityException If there is an error reading the file.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BenyAlbatross"},"content":"    public ArrayList\u003cInternship\u003e load() throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BenyAlbatross"},"content":"        logger.info(\"Loading internships from: \" + filePath);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BenyAlbatross"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BenyAlbatross"},"content":"            logger.info(\"Storage file does not exist. Starting with empty list.\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BenyAlbatross"},"content":"            return internships; // First run: nothing to load","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BenyAlbatross"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath.toFile()))) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BenyAlbatross"},"content":"            // Read first line (username header)","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BenyAlbatross"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BenyAlbatross"},"content":"            if (line \u003d\u003d null || !line.equals(\"Username (in line below):\")) {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BenyAlbatross"},"content":"                logger.warning(\"Invalid file format: missing username header\");","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BenyAlbatross"},"content":"                throw new InternityException(\"Invalid storage file format\");","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BenyAlbatross"},"content":"            }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BenyAlbatross"},"content":"            // Read second line (actual username)","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BenyAlbatross"},"content":"            String username \u003d br.readLine();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BenyAlbatross"},"content":"            if (username !\u003d null \u0026\u0026 !username.trim().isEmpty()) {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BenyAlbatross"},"content":"                InternshipList.setUsername(username.trim());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BenyAlbatross"},"content":"                logger.info(\"Loaded username: \" + username.trim());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BenyAlbatross"},"content":"            }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BenyAlbatross"},"content":"            // Read remaining lines as internship data","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BenyAlbatross"},"content":"            int lineNumber \u003d 2;","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BenyAlbatross"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BenyAlbatross"},"content":"                lineNumber++;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BenyAlbatross"},"content":"                String errorMessage \u003d parseInternshipFromFile(line, internships);","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BenyAlbatross"},"content":"                if (errorMessage !\u003d null) {","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BenyAlbatross"},"content":"                    System.err.println(errorMessage);","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BenyAlbatross"},"content":"                }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BenyAlbatross"},"content":"            }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BenyAlbatross"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BenyAlbatross"},"content":"            logger.severe(\"Failed to load internships from \" + filePath + \": \" + e.getMessage());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BenyAlbatross"},"content":"            throw new InternityException(\"Could not load internships: \" + e.getMessage());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BenyAlbatross"},"content":"        logger.info(\"Successfully loaded \" + internships.size() + \" internships\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BenyAlbatross"},"content":"        return internships;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BenyAlbatross"},"content":"     * Parses a single line from the storage file into an Internship object.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BenyAlbatross"},"content":"     * @param line The line to parse.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BenyAlbatross"},"content":"     * @param internships The list to add the parsed internship to.","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BenyAlbatross"},"content":"     * @return Error message if parsing failed, null if successful.","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BenyAlbatross"},"content":"    private String parseInternshipFromFile(String line, ArrayList\u003cInternship\u003e internships) {","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BenyAlbatross"},"content":"        assert line !\u003d null : \"Line to parse cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BenyAlbatross"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BenyAlbatross"},"content":"        // Trim all parts","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BenyAlbatross"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BenyAlbatross"},"content":"            parts[i] \u003d parts[i].trim();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BenyAlbatross"},"content":"        // Validate field count","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BenyAlbatross"},"content":"        if (parts.length !\u003d LEN_REQUIRED_FIELDS) {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BenyAlbatross"},"content":"            return \"Warning: Skipped line with invalid number of fields: \" + line;","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BenyAlbatross"},"content":"        // Parse and validate all fields in one place","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BenyAlbatross"},"content":"        return parseAndValidateFields(parts, line, internships);","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BenyAlbatross"},"content":"     * Parses and validates all fields of an internship entry from storage.","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BenyAlbatross"},"content":"     * This centralizes all parsing and validation logic for clarity and maintainability.","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BenyAlbatross"},"content":"     * Validation rules:","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BenyAlbatross"},"content":"     * - Company and role must not be empty","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BenyAlbatross"},"content":"     * - Pay must be a valid integer format","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BenyAlbatross"},"content":"     * - Pay must be non-negative","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BenyAlbatross"},"content":"     * - Deadline must be in valid DD-MM-YYYY format","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BenyAlbatross"},"content":"     * - Deadline must represent a valid calendar date (no Feb 31, etc.)","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BenyAlbatross"},"content":"     * - Status must be one of the valid status values","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BenyAlbatross"},"content":"     * @param parts The split and trimmed line parts.","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BenyAlbatross"},"content":"     * @param line The original line for error reporting.","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BenyAlbatross"},"content":"     * @param internships The list to add the parsed internship to.","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BenyAlbatross"},"content":"     * @return Error message if parsing/validation failed, null if successful.","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BenyAlbatross"},"content":"    private String parseAndValidateFields(String[] parts, String line, ArrayList\u003cInternship\u003e internships) {","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BenyAlbatross"},"content":"        String company \u003d parts[IDX_COMPANY];","lastModifiedDate":"2025-10-17T15:06:10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BenyAlbatross"},"content":"        String role \u003d parts[IDX_ROLE];","lastModifiedDate":"2025-10-17T15:06:10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BenyAlbatross"},"content":"        String deadlineStr \u003d parts[IDX_DEADLINE];","lastModifiedDate":"2025-10-17T15:06:10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BenyAlbatross"},"content":"        // Validate non-empty company and role","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BenyAlbatross"},"content":"        if (company.isEmpty() || role.isEmpty()) {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BenyAlbatross"},"content":"            logger.warning(\"Empty company or role in line: \" + line);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BenyAlbatross"},"content":"            return \"Warning: Skipped line with empty company or role: \" + line;","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BenyAlbatross"},"content":"        // Parse pay","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BenyAlbatross"},"content":"        int pay;","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BenyAlbatross"},"content":"        try {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BenyAlbatross"},"content":"            pay \u003d Integer.parseInt(parts[IDX_PAY]);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BenyAlbatross"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BenyAlbatross"},"content":"            logger.warning(\"Invalid pay format in line: \" + line + \" - \" + e.getMessage());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BenyAlbatross"},"content":"            return \"Warning: Skipped line with invalid pay format: \" + line;","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BenyAlbatross"},"content":"        // Validate pay is non-negative","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BenyAlbatross"},"content":"        if (pay \u003c 0) {","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BenyAlbatross"},"content":"            logger.warning(\"Negative pay in line: \" + line + \" - pay: \" + pay);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BenyAlbatross"},"content":"            return \"Warning: Skipped line with negative pay amount: \" + line;","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BenyAlbatross"},"content":"        String status \u003d parts[IDX_STATUS];","lastModifiedDate":"2025-10-17T15:06:10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BenyAlbatross"},"content":"        // Validate status","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BenyAlbatross"},"content":"        if (!Internship.isValidStatus(status)) {","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BenyAlbatross"},"content":"            logger.warning(\"Invalid status in line: \" + line + \" - status: \" + status);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BenyAlbatross"},"content":"            return \"Warning: Skipped line with invalid status: \" + line;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BenyAlbatross"},"content":"        // Parse and validate date","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BenyAlbatross"},"content":"        Date deadline;","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BenyAlbatross"},"content":"        try {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BenyAlbatross"},"content":"            deadline \u003d DateFormatter.parse(deadlineStr);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BenyAlbatross"},"content":"        } catch (InternityException e) {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BenyAlbatross"},"content":"            logger.warning(\"Invalid date in line: \" + line + \" - \" + e.getMessage());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BenyAlbatross"},"content":"            return \"Warning: Skipped line - \" + e.getMessage() + \": \" + line;","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BenyAlbatross"},"content":"        // Create and add internship","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BenyAlbatross"},"content":"        Internship internship \u003d new Internship(company, role, deadline, pay);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BenyAlbatross"},"content":"        internship.setStatus(status);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(internship);","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BenyAlbatross"},"content":"        return null;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BenyAlbatross"},"content":"     * Saves internships to the storage file.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BenyAlbatross"},"content":"     * The first line contains \"Username (in line below):\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BenyAlbatross"},"content":"     * The second line contains the actual username.","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BenyAlbatross"},"content":"     * Followed by internship entries on subsequent lines.","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"BenyAlbatross"},"content":"     * @param internships The list of internships to save.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"BenyAlbatross"},"content":"     * @throws InternityException If there is an error writing to the file.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"BenyAlbatross"},"content":"    public void save(ArrayList\u003cInternship\u003e internships) throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"BenyAlbatross"},"content":"        assert internships !\u003d null : \"Internships list cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"BenyAlbatross"},"content":"        logger.info(\"Saving \" + internships.size() + \" internships to: \" + filePath);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"BenyAlbatross"},"content":"        try {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"BenyAlbatross"},"content":"            // Create parent directories if they don\u0027t exist","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"BenyAlbatross"},"content":"            if (filePath.getParent() !\u003d null) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"BenyAlbatross"},"content":"                Files.createDirectories(filePath.getParent());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"BenyAlbatross"},"content":"                logger.warning(\"Created parent directories for: \" + filePath);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"BenyAlbatross"},"content":"            }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"BenyAlbatross"},"content":"            try (PrintWriter pw \u003d new PrintWriter(new BufferedWriter(new FileWriter(filePath.toFile())))) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"BenyAlbatross"},"content":"                // Write username header and value","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"BenyAlbatross"},"content":"                pw.println(\"Username (in line below):\");","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"BenyAlbatross"},"content":"                String username \u003d InternshipList.getUsername();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"BenyAlbatross"},"content":"                pw.println(username !\u003d null ? username : \"\");","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"BenyAlbatross"},"content":"                // Write internships","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"BenyAlbatross"},"content":"                for (Internship internship : internships) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"BenyAlbatross"},"content":"                    pw.println(formatInternshipForFile(internship));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"BenyAlbatross"},"content":"                }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"BenyAlbatross"},"content":"            }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"BenyAlbatross"},"content":"            logger.info(\"Successfully saved \" + internships.size() + \" internships\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"BenyAlbatross"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"BenyAlbatross"},"content":"            logger.severe(\"Failed to save internships to \" + filePath + \": \" + e.getMessage());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"BenyAlbatross"},"content":"            throw new InternityException(\"Could not save internships: \" + e.getMessage());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"BenyAlbatross"},"content":"     * Formats an internship for storage in the file.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"BenyAlbatross"},"content":"     * @param internship The internship to format.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"BenyAlbatross"},"content":"     * @return A pipe-delimited string representation of the internship.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"BenyAlbatross"},"content":"    private String formatInternshipForFile(Internship internship) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"BenyAlbatross"},"content":"        assert internship !\u003d null : \"Internship to format cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"BenyAlbatross"},"content":"        assert internship.getCompany() !\u003d null : \"Company cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"BenyAlbatross"},"content":"        assert internship.getRole() !\u003d null : \"Role cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"BenyAlbatross"},"content":"        assert internship.getDeadline() !\u003d null : \"Deadline cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"BenyAlbatross"},"content":"        assert internship.getStatus() !\u003d null : \"Status cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"BenyAlbatross"},"content":"        return internship.getCompany() + \" | \"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"BenyAlbatross"},"content":"                + internship.getRole() + \" | \"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"BenyAlbatross"},"content":"                + internship.getDeadline().toString() + \" | \"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"BenyAlbatross"},"content":"                + internship.getPay() + \" | \"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"BenyAlbatross"},"content":"                + internship.getStatus();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"BenyAlbatross"},"content":"}","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false}],"authorContributionMap":{"BenyAlbatross":253}},{"path":"src/main/java/internity/ui/DashboardUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.ui;","lastModifiedDate":"2025-10-21T16:06:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-21T16:06:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import java.util.List;","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import java.util.Map;","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-25T20:51:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-25T20:51:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" * Provides a command-line dashboard interface for the Internity application.","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" * This class contains static methods to display key information about the current","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" * user\u0027s internship tracking status, including:","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":" *     \u003cli\u003eUsername\u003c/li\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":" *     \u003cli\u003eTotal number of internships\u003c/li\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":" *     \u003cli\u003eNearest internship deadline\u003c/li\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":" *     \u003cli\u003eStatus breakdown of internships\u003c/li\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"public class DashboardUi {","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    private static final Logger logger \u003d Logger.getLogger(DashboardUi.class.getName());","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     * Prints the complete dashboard to the console.","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"     * The dashboard includes:","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003eCurrent user\u0027s username\u003c/li\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003eTotal internships\u003c/li\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003eNearest internship deadline\u003c/li\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003eStatus overview of all internships\u003c/li\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"    public static void printDashboard() throws InternityException {","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"        printUser();","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        printInternshipCount();","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"        printNearestDeadline();","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"        printStatusOverview();","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-25T20:51:34","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-25T20:51:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"     * Prints the current user\u0027s username to the console.","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"     * If no username is set, displays {@code Guest} as the default.","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"    public static void printUser() {","lastModifiedDate":"2025-10-26T01:58:28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"        String user \u003d InternshipList.getUsername();","lastModifiedDate":"2025-10-25T20:51:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"        System.out.println(\"User: \" + (user !\u003d null ? user : \"Guest\"));","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"        assert user !\u003d null : \"Username should not be null\";","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"        logger.fine(\"Displayed user: \" + user);","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-25T20:51:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-25T20:51:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"     * Prints the total number of internships currently tracked.","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"    public static void printInternshipCount() {","lastModifiedDate":"2025-10-26T01:58:28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"        int count \u003d InternshipList.size();","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"        System.out.println(\"Total Internships: \" + count);","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"        assert count \u003e\u003d 0 : \"Internship count should never be negative\";","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"        logger.fine(\"Total internships: \" + count);","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-25T20:51:34","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-21T16:06:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"     * Prints a breakdown of internships by their application status.","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"     * Statuses are displayed in the following fixed order:","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"     * {@code Pending, Interested, Applied, Interviewing, Offer, Accepted, Rejected}.","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"     * @throws InternityException if an error occurs while accessing internship data","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"    public static void printStatusOverview() throws InternityException {","lastModifiedDate":"2025-10-26T01:58:28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"        if (InternshipList.size() \u003d\u003d 0) {","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lukeai-tan"},"content":"            System.out.println(\"\\nStatus Overview: No internships found.\");","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"            logger.warning(\"Status overview requested but internship list is empty\");","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"            return;","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"        List\u003cString\u003e statusOrder \u003d List.of(","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"                \"Pending\", \"Interested\", \"Applied\", \"Interviewing\",","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"                \"Offer\", \"Accepted\", \"Rejected\"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"        Map\u003cString, Integer\u003e statusCount \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"        for (String status : statusOrder) {","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"            statusCount.put(status, 0);","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"        for (int i \u003d 0; i \u003c InternshipList.size(); i++) {","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"            Internship internship;","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"            internship \u003d InternshipList.get(i);","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"            String status \u003d internship.getStatus();","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"            if (statusCount.containsKey(status)) {","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"                statusCount.put(status, statusCount.get(status) + 1);","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"            }","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"        System.out.println(\"\\nStatus Overview:\");","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lukeai-tan"},"content":"        for (String status : statusOrder) {","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"            System.out.printf(\"  %-15s : %d%n\", status, statusCount.get(status));","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lukeai-tan"},"content":"        logger.fine(\"Status overview printed\");","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lukeai-tan"},"content":"     * Prints the internship with the nearest upcoming deadline.","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lukeai-tan"},"content":"     * If there are no internships, or none with valid deadlines, prints an appropriate message.","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lukeai-tan"},"content":"    public static void printNearestDeadline() throws InternityException {","lastModifiedDate":"2025-10-26T01:58:28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lukeai-tan"},"content":"        if (InternshipList.size() \u003d\u003d 0) {","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lukeai-tan"},"content":"            System.out.println(\"\\nNearest Deadline: No internships found.\");","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lukeai-tan"},"content":"            logger.warning(\"Nearest deadline requested but internship list is empty\");","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lukeai-tan"},"content":"            return;","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lukeai-tan"},"content":"        Internship nearest \u003d findNearestDeadlineInternship();","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lukeai-tan"},"content":"        if (nearest \u003d\u003d null) {","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lukeai-tan"},"content":"            System.out.println(\"\\nNearest Deadline: No valid deadlines found.\");","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lukeai-tan"},"content":"            return;","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lukeai-tan"},"content":"        System.out.println(\"\\nNearest Deadline:\");","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lukeai-tan"},"content":"        System.out.printf(\"  %s | %s @ %s%n\",","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lukeai-tan"},"content":"                nearest.getDeadline().toString(),","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lukeai-tan"},"content":"                nearest.getRole(),","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lukeai-tan"},"content":"                nearest.getCompany());","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lukeai-tan"},"content":"        logger.fine(\"Nearest deadline displayed: \" + nearest);","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lukeai-tan"},"content":"     * Finds the internship with the earliest deadline.","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lukeai-tan"},"content":"     * Assumes the internship list is non-empty.","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lukeai-tan"},"content":"     * @return the internship with the nearest upcoming deadline","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lukeai-tan"},"content":"     * @throws InternityException if an error occurs while accessing internship data","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-26T02:10:50","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lukeai-tan"},"content":"    private static Internship findNearestDeadlineInternship() throws InternityException {","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lukeai-tan"},"content":"        assert InternshipList.size() \u003e 0 : \"Cannot find nearest deadline in empty list\";","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lukeai-tan"},"content":"        Internship nearest \u003d null;","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lukeai-tan"},"content":"        for (int i \u003d 0; i \u003c InternshipList.size(); i++) {","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lukeai-tan"},"content":"            Internship internship \u003d InternshipList.get(i);","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lukeai-tan"},"content":"            if (nearest \u003d\u003d null || internship.getDeadline().compareTo(nearest.getDeadline()) \u003c 0) {","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lukeai-tan"},"content":"                nearest \u003d internship;","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lukeai-tan"},"content":"            }","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lukeai-tan"},"content":"        logger.fine(\"Found nearest deadline internship: \" + nearest);","lastModifiedDate":"2025-10-26T01:46:50","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lukeai-tan"},"content":"        return nearest;","lastModifiedDate":"2025-10-26T01:41:51","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-25T20:51:34","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-21T16:06:23","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":165}},{"path":"src/main/java/internity/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package internity.ui;","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-21T22:16:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:16:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"import static internity.core.InternshipList.INDEX_MAXLEN;","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"import static internity.core.InternshipList.COMPANY_MAXLEN;","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"import static internity.core.InternshipList.ROLE_MAXLEN;","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"import static internity.core.InternshipList.DEADLINE_MAXLEN;","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"import static internity.core.InternshipList.PAY_MAXLEN;","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"import static internity.core.InternshipList.STATUS_MAXLEN;","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":" * The Ui Class provides user interface methods for the Internity chatbot.","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":" * Handles printing messages.","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"public class Ui {","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"    static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2025-10-13T20:01:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"        System.out.print(LINE);","lastModifiedDate":"2025-10-13T20:01:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"        final String logo \u003d \" ___       _                  _ _\\n\" +","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"                \"|_ _|_ __ | |_ ___ _ __ _ __ (_) |_ _   _\\n\" +","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"                \" | || \u0027_ \\\\| __/ _ \\\\ \u0027__| \u0027_ \\\\| | __| | | |\\n\" +","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"                \" | || | | | ||  __/ |  | | | | | |_| |_| |\\n\" +","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"                \"|___|_| |_|\\\\__\\\\___|_|  |_| |_|_|\\\\__|\\\\__, |\\n\" +","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"                \"                                    |___/\";","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Hello, welcome to\\n\" + logo);","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Be on top of your internships management with the Internity chatbot!\");","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"    public static void printGreeting(String input) {","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Hello, \" + input + \"!\");","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"    public static void printExit() {","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Thank you for using Internity! Goodbye!\");","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"    public static void printAddInternship(Internship internship) {","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Noted. I\u0027ve added this internship:\");","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(internship.toString());","lastModifiedDate":"2025-10-21T22:33:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BenyAlbatross"},"content":"    public static void printRemoveInternship(String item, int totalItems) {","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"        System.out.println(\"Noted. I\u0027ve removed this internship:\");","lastModifiedDate":"2025-10-13T21:50:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BenyAlbatross"},"content":"        System.out.println(\"  \" + item);","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"        System.out.println(\"Now you have \" + totalItems + \" internship(s) in the list.\");","lastModifiedDate":"2025-10-13T21:50:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Joannaj00"},"content":"    public static void printUpdateInternship() {","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Joannaj00"},"content":"        System.out.println(\"Internship status updated successfully!\");","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"    public static void printFindInternship(ArrayList\u003cInternship\u003e list) {","lastModifiedDate":"2025-10-21T22:16:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"These are the matching internships in your list:\");","lastModifiedDate":"2025-10-21T22:16:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"        String formatHeader \u003d \"%\" + INDEX_MAXLEN  + \"s %-\" + COMPANY_MAXLEN + \"s %-\" + ROLE_MAXLEN","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"                + \"s %-\" + DEADLINE_MAXLEN + \"s %-\" + PAY_MAXLEN + \"s %-\" + STATUS_MAXLEN + \"s%n\";","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"        String formatContent \u003d \"%\" + INDEX_MAXLEN  + \"d %-\" + COMPANY_MAXLEN + \"s %-\" + ROLE_MAXLEN","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"                + \"s %-\" + DEADLINE_MAXLEN + \"s %-\" + PAY_MAXLEN + \"d %-\" + STATUS_MAXLEN + \"s%n\";","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"        System.out.printf(formatHeader,","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"                \"No.\", \"Company\", \"Role\", \"Deadline\", \"Pay\", \"Status\");","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"        int i;","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"        for (i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"            Internship internship \u003d list.get(i);","lastModifiedDate":"2025-10-21T22:33:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"            System.out.printf(formatContent,","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"                    i + 1,","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"                    internship.getCompany(),","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BestBearrr"},"content":"                    internship.getRole(),","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"                    internship.getDeadline().toString(),","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BestBearrr"},"content":"                    internship.getPay(),","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"                    internship.getStatus()","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"            );","lastModifiedDate":"2025-10-24T15:32:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-10-21T22:16:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T22:16:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"    public static void printAskUsername() {","lastModifiedDate":"2025-10-24T15:02:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2025-10-24T15:02:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-24T15:02:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-24T15:02:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"    public static void printSetUsername(String username) {","lastModifiedDate":"2025-10-20T17:56:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"        System.out.println(\"Username set to \" + username);","lastModifiedDate":"2025-10-20T17:56:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-20T17:56:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-20T17:56:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false}],"authorContributionMap":{"Joannaj00":4,"lukeai-tan":10,"BestBearrr":75,"BenyAlbatross":3}},{"path":"src/main/java/internity/utils/DateFormatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.utils;","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":" * Utility class for parsing and validating date strings into {@link Date} objects.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":" *     This class provides methods to convert string representations of the date in a strict","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" *     {@code dd-MM-yyyy} format into a {@link Date} object. It also validates the input to ensure that","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" *     the provided date values correspond to actual valid calendar dates, including leap year cases.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" *     This class cannot be instantiated.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"public class DateFormatter {","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"     * Private constructor to prevent instantiation.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"    private DateFormatter() {}","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"     * Parses a string representation of a date in the format {@code dd-MM-yyyy} into a","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"     * {@link Date} object.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003eValid date format conditions:\u003c/p\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003eThe input must not be {@code null} or blank.\u003c/li\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003eThe input must be in a {@code dd-MM-yyyy} format:","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"     *         \u003cli\u003e{@code dd} is a two-digit day (01-31)\u003c/li\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"     *         \u003cli\u003e{@code MM} is a two-digit month (01-12)\u003c/li\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"     *         \u003cli\u003e{@code yyyy} is a four-digit year\u003c/li\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"     *         The date must represent a valid calendar date (e.g. 09-10-2025 is valid,","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"     *         99-99-2025 is invalid).","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"     * @param dateString the date string to parse, expected in {@code dd-MM-yyyy} format","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"     * @return a {@link Date} object representing the parsed date","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"     * @throws InternityException if the input is {@code null}, blank, has an invalid format or invalid date","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"    public static Date parse(String dateString) throws InternityException {","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        if (dateString \u003d\u003d null || dateString.isBlank()) {","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidInput();","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"        String trimmed \u003d dateString.trim();","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"        // Check for an absolute dd-MM-yyyy format","lastModifiedDate":"2025-10-09T10:43:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"        if (!trimmed.matches(\"\\\\d{2}-\\\\d{2}-\\\\d{4}\")) {","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidDateFormat();","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"        String[] parts \u003d trimmed.split(\"-\");","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidDateFormat();","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BenyAlbatross"},"content":"        // Regex validation above guarantees numeric format, so parseInt() cannot throw NumberFormatException","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BenyAlbatross"},"content":"        assert parts[0].matches(\"\\\\d+\") \u0026\u0026 parts[1].matches(\"\\\\d+\") \u0026\u0026 parts[2].matches(\"\\\\d+\")","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BenyAlbatross"},"content":"                : \"Regex should guarantee numeric format\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"        int day \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"        int month \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"        int year \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:14:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"        if (!isValidDate(day, month, year)) {","lastModifiedDate":"2025-10-08T23:14:40","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BenyAlbatross"},"content":"            throw InternityException.invalidDateFormat();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T23:14:40","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:14:40","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"        return new Date(day, month, year);","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lukeai-tan"},"content":"     * Validates whether the provided day, month and year corresponds to a valid calendar date.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"     * @param day day component of the date","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"     * @param month month component of the date","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"     * @param year year component of the date","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"     * @return {@code true} if the date is valid, {@code false} otherwise","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"    private static boolean isValidDate(int day, int month, int year) {","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"        if (month \u003c 1 || month \u003e 12) {","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"            return false;","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"        if (day \u003c 1) {","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"            return false;","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"        int maxDay \u003d switch (month) {","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"        case 2 -\u003e (isLeapYear(year)) ? 29 : 28;","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"        case 4, 6, 9, 11 -\u003e 30;","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"        default -\u003e 31;","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"        };","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"        return day \u003c\u003d maxDay;","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lukeai-tan"},"content":"     * Determines whether the provided year is a leap year according to the Gregorian calendar rules.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"     *     A year is a leap year if it is divisible by 4 but not 100, unless it is also divisible by 400.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lukeai-tan"},"content":"     * @param year the year to check","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lukeai-tan"},"content":"     * @return {@code true} if the year is a leap year, {@code false} otherwise","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lukeai-tan"},"content":"    private static boolean isLeapYear(int year) {","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lukeai-tan"},"content":"        return (year % 4 \u003d\u003d 0) \u0026\u0026 (year % 100 !\u003d 0 || year % 400 \u003d\u003d 0);","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":111,"BenyAlbatross":6}},{"path":"src/main/java/internity/utils/InternityLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.utils;","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" * Utility class responsible for configuring and providing a centralized logger","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * for the Internity application.","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" * This class automatically creates a log file located at","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" * {@code ./logs/internity.log} and sets up a {@link FileHandler} to append","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" * log messages to it.","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":" * The logger writes messages in plain-text format using","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":" * {@link SimpleFormatter} and captures all log levels ({@link Level#ALL}).","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":" * Parent console handlers are disabled to avoid duplicate logging output.","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"public class InternityLogger {","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    private static final String LOG_FILE_PATH \u003d \"./logs/internity.log\";","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"    private static final Logger logger \u003d Logger.getLogger(\"internity\");","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    private static boolean isInitialized \u003d false;","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"     * Returns the main logger for the application.","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"     * Initializes logging to a file on the first call.","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"     * @return a configured Logger instance","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"    public static Logger getLogger() {","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        if (!isInitialized) {","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"            setupLogging();","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"            isInitialized \u003d true;","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"        return logger;","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"     * Configures the logger to write to a file.","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"     * Creates the logs directory if it doesn\u0027t exist.","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"    private static void setupLogging() {","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"        try {","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"            java.nio.file.Files.createDirectories(java.nio.file.Paths.get(\"./logs\"));","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE_PATH, true);","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"            logger.setUseParentHandlers(false);","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"            logger.setLevel(Level.ALL);","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"            System.err.println(\"Failed to initialize logger.\");","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-23T23:34:43","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":63}},{"path":"src/test/java/internity/InternityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity;","lastModifiedDate":"2025-10-05T16:58:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"class InternityTest {","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":2,"-":10}},{"path":"src/test/java/internity/cli/ArgumentParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joannaj00"},"content":"package internity.cli;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Joannaj00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.AddCommand;","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.ListCommand;","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Joannaj00"},"content":"import internity.commands.UpdateCommand;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.UsernameCommand;","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Joannaj00"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Joannaj00"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Joannaj00"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Joannaj00"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Joannaj00"},"content":"class ArgumentParserTest {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Joannaj00"},"content":"    ","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Joannaj00"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Joannaj00"},"content":"    void setUp() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(new Internship(\"Google\", \"SWE\", new Date(1, 1, 2025), 8000));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_validArgs_returnsAddCommand() throws Exception {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Microsoft role/Intern deadline/10-10-2025 pay/5000\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"        AddCommand command \u003d ArgumentParser.parseAddCommandArgs(args);","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"        command.execute();","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"        Internship added \u003d InternshipList.get(1);","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Microsoft\", added.getCompany());","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Intern\", added.getRole());","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"        Date deadline \u003d added.getDeadline();","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(10, deadline.getDay());","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(10, deadline.getMonth());","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(2025, deadline.getYear());","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(5000, added.getPay());","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_payZero_addsInternshipWithZeroPay() throws Exception {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Microsoft role/Intern deadline/10-10-2025 pay/0\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        AddCommand command \u003d ArgumentParser.parseAddCommandArgs(args);","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"        command.execute();","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"        Internship added \u003d InternshipList.get(1);","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Microsoft\", added.getCompany());","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Intern\", added.getRole());","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(10, added.getDeadline().getDay());","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(10, added.getDeadline().getMonth());","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(2025, added.getDeadline().getYear());","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(0, added.getPay());","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_negativePay_throwsInternityException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Microsoft role/Intern deadline/10-10-2025 pay/-1000\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class,","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_floatingPointPay_throwsInternityException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Microsoft role/Intern deadline/10-10-2025 pay/5000.50\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class,","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_validArgsWithExtraSpaces_returnsAddCommand() throws Exception {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Microsoft   role/Intern   deadline/15-12-2025   pay/5000\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"        AddCommand command \u003d ArgumentParser.parseAddCommandArgs(args);","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_nullArgs_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(null));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_blankArgs_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(\"   \"));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_missingCompanyTag_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"role/Intern deadline/15-12-2025 pay/5000\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_missingDeadlineTag_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Microsoft role/Intern pay/5000\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_wrongOrder_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"role/Intern company/Microsoft deadline/15-12-2025 pay/5000\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_emptyCompany_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/ role/Intern deadline/15-12-2025 pay/5000\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_emptyRole_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Microsoft role/ deadline/15-12-2025 pay/5000\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_negativePay_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Microsoft role/Intern deadline/15-12-2025 pay/-100\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_nonNumericPay_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Microsoft role/Intern deadline/15-12-2025 pay/fivek\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_invalidDateFormat_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Microsoft role/Intern deadline/2025/12/15 pay/5000\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_companyNameTooLong_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lukeai-tan"},"content":"        String longCompany \u003d \"A\".repeat(InternshipList.COMPANY_MAXLEN + 1);","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d String.format(\"company/%s role/Intern deadline/15-12-2025 pay/5000\", longCompany);","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_roleTooLong_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lukeai-tan"},"content":"        String longRole \u003d \"B\".repeat(InternshipList.ROLE_MAXLEN + 1);","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d String.format(\"company/Microsoft role/%s deadline/15-12-2025 pay/5000\", longRole);","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_incompleteTags_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Microsoft role deadline/15-12-2025 pay/5000\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lukeai-tan"},"content":"    void parseAddCommandArgs_extraTags_throwsException() {","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Microsoft role/Intern deadline/15-12-2025 pay/5000 extra/field\";","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args));","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:05:26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lukeai-tan"},"content":"    void parseUpdateCommandArgs_validSingleField_returnsCommand() throws InternityException {","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d ArgumentParser.parseUpdateCommandArgs(\"1 company/Meta\");","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Joannaj00"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lukeai-tan"},"content":"    void parseUpdateCommandArgs_multipleFields_returnsCommand() throws InternityException {","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d ArgumentParser.parseUpdateCommandArgs(\"1 company/Meta role/AI Intern pay/9000\");","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Joannaj00"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lukeai-tan"},"content":"    void parseUpdateCommandArgs_invalidIndex_throwsException() {","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseUpdateCommandArgs(\"abc company/Meta\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lukeai-tan"},"content":"    void parseUpdateCommandArgs_missingFieldTag_throwsException() {","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseUpdateCommandArgs(\"1 Meta\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"lukeai-tan"},"content":"    void parseUpdateCommandArgs_emptyCompany_throwsException() {","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseUpdateCommandArgs(\"1 company/ \"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"lukeai-tan"},"content":"    void parseDeleteCommandArgs_nonNumericIndex_throwsInternityException() {","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseDeleteCommandArgs(\"abc\"));","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"lukeai-tan"},"content":"    void parseDeleteCommandArgs_blankArgs_throwsInternityException() {","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseDeleteCommandArgs(\"   \"));","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lukeai-tan"},"content":"    void parseDeleteCommandArgs_nullArgs_throwsInternityException() {","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseDeleteCommandArgs(null));","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:16:37","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"lukeai-tan"},"content":"    void parseListCommandArgs_sortAsc_returnsAscendingListCommand() throws InternityException {","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"lukeai-tan"},"content":"        ListCommand command \u003d ArgumentParser.parseListCommandArgs(\"sort/asc\");","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"lukeai-tan"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"lukeai-tan"},"content":"    void parseListCommandArgs_sortDesc_returnsDescendingListCommand() throws InternityException {","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"lukeai-tan"},"content":"        ListCommand command \u003d ArgumentParser.parseListCommandArgs(\"sort/desc\");","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"lukeai-tan"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"lukeai-tan"},"content":"    void parseListCommandArgs_sortAscWithWhitespace_returnsAscendingListCommand() throws InternityException {","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"lukeai-tan"},"content":"        ListCommand command \u003d ArgumentParser.parseListCommandArgs(\"sort/   asc\");","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"lukeai-tan"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"lukeai-tan"},"content":"    void parseListCommandArgs_sortDescWithWhitespace_returnsAscendingListCommand() throws InternityException {","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"lukeai-tan"},"content":"        ListCommand command \u003d ArgumentParser.parseListCommandArgs(\"sort/   desc\");","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"lukeai-tan"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"lukeai-tan"},"content":"    void parseListCommandArgs_invalidSortOrder_throwsInternityException() {","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseListCommandArgs(\"sort/upwards\"));","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:57:37","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"lukeai-tan"},"content":"    void parseListCommandArgs_nullSortSuffix_throwsInternityException() {","lastModifiedDate":"2025-10-27T16:57:37","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseListCommandArgs(\"/sort\"));","lastModifiedDate":"2025-10-27T16:57:37","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:57:37","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:37","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:57:37","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"lukeai-tan"},"content":"    void parseListCommandArgs_blankSortSuffix_throwsInternityException() {","lastModifiedDate":"2025-10-27T16:57:37","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseListCommandArgs(\"/sort   \"));","lastModifiedDate":"2025-10-27T16:57:37","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:57:37","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:37","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"lukeai-tan"},"content":"    void parseListCommandArgs_missingSortPrefix_throwsInternityException() {","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseListCommandArgs(\"asc\"));","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"lukeai-tan"},"content":"    void parseListCommandArgs_multipleSortArgs_throwsInternityException() {","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseListCommandArgs(\"sort/asc sort/desc\"));","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:25:32","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"lukeai-tan"},"content":"    void parseUsernameCommandArgs_validArgs_shouldReturnUsernameCommand() throws Exception {","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"lukeai-tan"},"content":"        String validUsername \u003d \"Jesse Pinkman\";","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"lukeai-tan"},"content":"        UsernameCommand command \u003d ArgumentParser.parseUsernameCommandArgs(validUsername);","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"lukeai-tan"},"content":"        assertNotNull(command, \"Returned UsernameCommand should not be null\");","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"lukeai-tan"},"content":"    void parseUsernameCommandArgs_nullArgs_shouldThrowInternityException() {","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e ArgumentParser.parseUsernameCommandArgs(null),","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"lukeai-tan"},"content":"                \"Expected InternityException for null input\"","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(exception.getMessage().toLowerCase().contains(\"invalid\"),","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"lukeai-tan"},"content":"                \"Exception message should indicate invalid username command\");","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"lukeai-tan"},"content":"    void parseUsernameCommandArgs_blankArgs_shouldThrowInternityException() {","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e ArgumentParser.parseUsernameCommandArgs(\"   \"),","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"lukeai-tan"},"content":"                \"Expected InternityException for blank input\"","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(exception.getMessage().toLowerCase().contains(\"invalid\"),","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"lukeai-tan"},"content":"                \"Exception message should indicate invalid username command\");","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"lukeai-tan"},"content":"    void parseUsernameCommandArgs_emptyString_shouldThrowInternityException() {","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e ArgumentParser.parseUsernameCommandArgs(\"\"),","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"lukeai-tan"},"content":"                \"Expected InternityException for empty input\"","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(exception.getMessage().toLowerCase().contains(\"invalid\"),","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"lukeai-tan"},"content":"                \"Exception message should indicate invalid username command\");","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Joannaj00"},"content":"}","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false}],"authorContributionMap":{"Joannaj00":43,"lukeai-tan":253}},{"path":"src/test/java/internity/cli/CommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.cli;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-05T22:56:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-10-05T22:56:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-05T22:56:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.AddCommand;","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.Command;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.DashboardCommand;","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.DeleteCommand;","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.ExitCommand;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.ListCommand;","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.UpdateCommand;","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.UsernameCommand;","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":" * Unit tests for {@link CommandParser}.","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":" * These tests ensure that the parser correctly interprets input and returns the proper Command objects,","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":" * or throws InternityException for invalid inputs.","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"class CommandParserTest {","lastModifiedDate":"2025-10-10T19:27:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"    private CommandParser commandParser;","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"    void setUp() {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"        commandParser \u003d new CommandParser();","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_exitCommand_returnsExitCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandParser.parseInput(\"exit\");","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(ExitCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_listCommand_returnsListCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandParser.parseInput(\"list\");","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(ListCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_addCommand_returnsAddCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"add company/Umbrella Corp role/Researcher deadline/10-10-2025 pay/1000\";","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandParser.parseInput(input);","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(AddCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_deleteCommand_returnsDeleteCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandParser.parseInput(\"delete 1\");","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(DeleteCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_updateCommand_returnsUpdateCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandParser.parseInput(\"update 1 status/Pending\");","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(UpdateCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_usernameCommand_returnsUsernameCommand() throws InternityException {","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandParser.parseInput(\"username Badger\");","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(UsernameCommand.class, command);","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T22:54:06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_dashboardCommand_returnsDashboardCommand() throws InternityException {","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandParser.parseInput(\"dashboard\");","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(DashboardCommand.class, command);","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_nullInput_throwsInvalidInput() {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(","lastModifiedDate":"2025-10-08T22:51:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-08T22:51:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e commandParser.parseInput(null)","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:51:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Input cannot be null or blank\", exception.getMessage());","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_blankInput_throwsInvalidInput() {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e commandParser.parseInput(\"   \")","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Input cannot be null or blank\", exception.getMessage());","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_unknownCommand_throwsUnknownCommand() {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e commandParser.parseInput(\"AbsoluteCinema\")","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Unknown command: absolutecinema\", exception.getMessage());","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":104}},{"path":"src/test/java/internity/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package internity.commands;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"import internity.cli.ArgumentParser;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"import internity.utils.DateFormatter;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"class AddCommandTest {","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"    void setup() {","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"        // Clear any previously added internships before each test","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"     * Tests that a valid command correctly parses all fields","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"     * and adds a new internship to the InternshipList.","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"    @Test","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"    void execute_validInput_addsInternshipSuccessfully() throws InternityException {","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"        String args \u003d \"company/Google role/Software Engineer deadline/01-12-2025 pay/120000\";","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"        AddCommand command \u003d ArgumentParser.parseAddCommandArgs(args);","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"        command.execute();","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"        // Validate that one internship was added","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"        assertEquals(1, InternshipList.size(), \"Expected one internship to be added\");","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"        Internship added \u003d InternshipList.get(0);","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"        assertEquals(\"Google\", added.getCompany());","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"        assertEquals(\"Software Engineer\", added.getRole());","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"        assertEquals(DateFormatter.parse(\"01-12-2025\").toString(), added.getDeadline().toString());","lastModifiedDate":"2025-10-13T17:16:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"        assertEquals(120000, added.getPay());","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"     * Tests that the command throws an exception if one of the fields is missing.","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"    @Test","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"    void execute_missingField_throwsException() {","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"        String args \u003d \"company/Google role/Software Engineer pay/1000\"; // missing deadline","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args),","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"                \"Expected InternityException when deadline field is missing\");","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"     * Tests that the command throws an exception for invalid pay values.","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"    @Test","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"    void execute_invalidPay_throwsException() {","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"        String args \u003d \"company/Amazon role/Data Analyst deadline/01-12-2025 pay/notANumber\";","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args),","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"                \"Expected InternityException for non-numeric pay\");","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"     * Tests that the command does not signal application exit.","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"    @Test","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"    void isExit_returnsFalse() throws InternityException {","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"        String args \u003d \"company/Test role/Tester deadline/01-01-2026 pay/1000\";","lastModifiedDate":"2025-10-13T17:16:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"        AddCommand command \u003d ArgumentParser.parseAddCommandArgs(args);","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"        assertFalse(command.isExit(), \"AddCommand should not terminate the application\");","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":1,"BestBearrr":73}},{"path":"src/test/java/internity/commands/CommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"class CommandFactoryTest {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"    private final CommandFactory factory \u003d new CommandFactory();","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_add_returnsAddCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Umbrella Corp role/Researcher deadline/10-10-2025 pay/1000\";","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"add\", args);","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(AddCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_delete_returnsDeleteCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"delete\", \"1\");","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(DeleteCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_update_returnsUpdateCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"update\", \"1 status/Pending\");","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(UpdateCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_list_returnsListCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"list\", \"\");","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(ListCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_find_returnsFindCommand() throws InternityException {","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"find\", \"keyword\");","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(FindCommand.class, command);","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-23T22:39:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_username_returnsUsernameCommand() throws InternityException {","lastModifiedDate":"2025-10-23T22:39:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"username\", \"Walter White\");","lastModifiedDate":"2025-10-23T22:39:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(UsernameCommand.class, command);","lastModifiedDate":"2025-10-23T22:39:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-23T22:39:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T22:39:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_dashboard_returnsDashboardCommand() throws InternityException {","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"dashboard\", \"\");","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(DashboardCommand.class, command);","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_dashboardWithBlankArgs_returnsDashboardCommand() throws InternityException {","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"dashboard\", \"   \");","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(DashboardCommand.class, command);","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:31:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_exit_returnsExitCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"exit\", \"\");","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(ExitCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_unknownCommand_throwsInternityException() {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e factory.createCommand(\"invalidCommand\", \"\")","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Unknown command: invalidCommand\", exception.getMessage());","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":78}},{"path":"src/test/java/internity/commands/DashboardCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"class DashboardCommandTest {","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    void setUp() {","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.setUsername(\"TestUser\");","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.add(new Internship(\"Google\", \"SWE\", new Date(1, 1, 2025), 8000));","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.add(new Internship(\"Microsoft\", \"Intern\", new Date(15, 12, 2025), 5000));","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"    void execute_printsDashboardWithoutException() {","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"        DashboardCommand command \u003d new DashboardCommand();","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"        assertDoesNotThrow(command::execute);","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(output.contains(\"User:\"), \"Dashboard should display the username section\");","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(output.contains(\"Total Internships:\"), \"Dashboard should display total internships\");","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(output.contains(\"Nearest Deadline:\"), \"Dashboard should display nearest deadline\");","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(output.contains(\"Status Overview:\"), \"Dashboard should display status overview\");","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"    void isExit_returnsFalse() {","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        DashboardCommand command \u003d new DashboardCommand();","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"        assertFalse(command.isExit(), \"Dashboard command should not terminate the program\");","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-27T17:12:01","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":48}},{"path":"src/test/java/internity/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenyAlbatross"},"content":"package internity.commands;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BenyAlbatross"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BenyAlbatross"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BenyAlbatross"},"content":"class DeleteCommandTest {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BenyAlbatross"},"content":"    private InternshipList internshipList;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BenyAlbatross"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BenyAlbatross"},"content":"    void setUp() {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-10T19:14:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BenyAlbatross"},"content":"        // Add some test internships","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.add(new Internship(\"Google\", \"SWE Intern\", new Date(1, 1, 2025), 5000));","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.add(new Internship(\"Meta\", \"Backend Intern\", new Date(15, 2, 2025), 6000));","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.add(new Internship(\"Amazon\", \"Frontend Intern\", new Date(20, 3, 2025), 4500));","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BenyAlbatross"},"content":"    void execute_validIndex_deletesInternship() throws InternityException {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BenyAlbatross"},"content":"        // Arrange: Delete internship at index 1","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"        DeleteCommand command \u003d new DeleteCommand(1);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"        int initialSize \u003d InternshipList.size();","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BenyAlbatross"},"content":"        // Act","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BenyAlbatross"},"content":"        command.execute();","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BenyAlbatross"},"content":"        // Assert","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(initialSize - 1, InternshipList.size());","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Google\", InternshipList.get(0).getCompany()); // First item unchanged","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Amazon\", InternshipList.get(1).getCompany()); // Meta was removed, Amazon shifted","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BenyAlbatross"},"content":"    void execute_negativeIndex_throwsException() {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BenyAlbatross"},"content":"        // Arrange: Delete internship at negative index -1","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        DeleteCommand command \u003d new DeleteCommand(-1);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BenyAlbatross"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(InternityException.class, command::execute);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Invalid internship index: 0\", exception.getMessage());","lastModifiedDate":"2025-10-13T22:36:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BenyAlbatross"},"content":"    void execute_indexTooLarge_throwsException() {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BenyAlbatross"},"content":"        // Arrange: Delete internship at idx 10, when max idx \u003d 2","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"        DeleteCommand command \u003d new DeleteCommand(10);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BenyAlbatross"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(InternityException.class, command::execute);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Invalid internship index: 11\", exception.getMessage());","lastModifiedDate":"2025-10-13T22:36:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BenyAlbatross"},"content":"    void execute_indexEqualToSize_throwsException() {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BenyAlbatross"},"content":"        // Deleting at idx \u003d\u003d size_of_list is an off-by-one error","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BenyAlbatross"},"content":"        // Arrange","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"        int size \u003d InternshipList.size();","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"        DeleteCommand command \u003d new DeleteCommand(size);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BenyAlbatross"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, command::execute);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BenyAlbatross"},"content":"    void isExit_returnsFalse() {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BenyAlbatross"},"content":"        // DeleteCommand should not terminate the program","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BenyAlbatross"},"content":"        // Arrange","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"        DeleteCommand command \u003d new DeleteCommand(0);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BenyAlbatross"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BenyAlbatross"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BenyAlbatross"},"content":"}","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":23,"BenyAlbatross":59}},{"path":"src/test/java/internity/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-05T22:55:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-05T22:55:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"class ExitCommandTest {","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    void execute_printsExitMessage() {","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"        try {","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"            exitCommand.execute();","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"            assertEquals(\"Thank you for using Internity! Goodbye!\" + System.lineSeparator(),","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"                    outContent.toString());","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"        } finally {","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"    void isExit_returnsTrue() {","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(exitCommand.isExit());","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":34}},{"path":"src/test/java/internity/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package internity.commands;","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-24T15:54:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-24T15:54:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-24T15:54:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-24T15:54:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-24T15:54:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-24T15:54:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"import internity.utils.DateFormatter;","lastModifiedDate":"2025-10-24T15:54:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"class FindCommandTest {","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"    // Streams to capture the console output","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"    private final PrintStream originalSystemOut \u003d System.out;","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"    private ByteArrayOutputStream outContent;","lastModifiedDate":"2025-10-24T15:22:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"    void setup() {","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"        // Clear any previous internships before each test","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"        // Set up new ByteArrayOutputStream","lastModifiedDate":"2025-10-24T15:22:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-24T15:22:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:22:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"        // Redirect System.out to capture printed output during the test","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"    @AfterEach","lastModifiedDate":"2025-10-24T15:22:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"    void restoreStreams() {","lastModifiedDate":"2025-10-24T15:22:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"        System.setOut(originalSystemOut);","lastModifiedDate":"2025-10-24T15:22:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-24T15:22:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-24T15:22:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-24T15:22:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"     * Tests that FindCommand correctly finds internships based on the keyword.","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"    @Test","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"    void execute_validInput_findsMatchingInternships() throws InternityException {","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"        // Arrange","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"        InternshipList.add(new Internship(\"Google\", \"Software Engineer\", DateFormatter.parse(\"01-12-2025\"), 120000));","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"        InternshipList.add(new Internship(\"Microsoft\", \"Data Scientist\", DateFormatter.parse(\"01-12-2025\"), 130000));","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"        String keyword \u003d \"Google\";  // We want to search for \"Google\"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"        FindCommand command \u003d new FindCommand(keyword);","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"        // Act","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"        command.execute();","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"        // Assert","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"        // Validate that the output contains the correct internship information","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"        assertTrue(output.contains(\"Google\"));","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"        assertTrue(output.contains(\"Software Engineer\"));","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"        assertTrue(output.contains(\"01-12-2025\"));","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"        assertTrue(output.contains(\"120000\"));","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"     * Tests that FindCommand handles when no internships match the keyword.","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"    @Test","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"    void execute_noMatchingInternships_printsNoResults() throws InternityException {","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"        // Arrange","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"        InternshipList.add(new Internship(\"Google\", \"Software Engineer\", DateFormatter.parse(\"01-12-2025\"), 120000));","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"        InternshipList.add(new Internship(\"Microsoft\", \"Data Scientist\", DateFormatter.parse(\"01-12-2025\"), 130000));","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"        String keyword \u003d \"Amazon\";  // This keyword should not match any internship","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"        FindCommand command \u003d new FindCommand(keyword);","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"        // Act","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BestBearrr"},"content":"        command.execute();","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"        // Assert","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BestBearrr"},"content":"        // Verify the output contains \"No internships with this company or role found.\"","lastModifiedDate":"2025-10-24T15:38:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BestBearrr"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BestBearrr"},"content":"        assertTrue(output.contains(\"No internships with this company or role found.\"));","lastModifiedDate":"2025-10-24T15:38:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BestBearrr"},"content":"     * Tests that FindCommand does not terminate the application.","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BestBearrr"},"content":"    @Test","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BestBearrr"},"content":"    void isExit_returnsFalse() throws InternityException {","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BestBearrr"},"content":"        // Arrange","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BestBearrr"},"content":"        String keyword \u003d \"Software\";","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BestBearrr"},"content":"        FindCommand command \u003d new FindCommand(keyword);","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BestBearrr"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BestBearrr"},"content":"        assertFalse(command.isExit(), \"FindCommand should not terminate the application\");","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-10-21T22:50:58","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":7,"BestBearrr":93}},{"path":"src/test/java/internity/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package internity.commands;","lastModifiedDate":"2025-10-13T20:26:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":"class ListCommandTest {","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":"    private ByteArrayOutputStream outContent;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"    void setUpStreams() {","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"    @AfterEach","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"    void restoreStreams() {","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"    void execute_whenNoEntries_printsNoInternshipsFound() throws InternityException {","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"        ListCommand listCommand \u003d new ListCommand(ListCommand.orderType.DEFAULT);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"        listCommand.execute();","lastModifiedDate":"2025-10-13T21:01:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"        assertTrue(outContent.toString().contains(\"No internships found. Please add an internship first.\"));","lastModifiedDate":"2025-10-13T21:06:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"    void execute_withEntry_doesNotPrintNoInternshipsFound() throws InternityException {","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"        Internship internship \u003d new Internship(\"Company A\", \"Developer\", new Date(1,1,2025), 5000);","lastModifiedDate":"2025-10-13T21:06:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(internship); // dummy entry","lastModifiedDate":"2025-10-13T21:06:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"        ListCommand listCommand \u003d new ListCommand(ListCommand.orderType.DEFAULT);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"        listCommand.execute();","lastModifiedDate":"2025-10-13T21:01:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"V1T0bh"},"content":"        assertFalse(outContent.toString().contains(\"No internships found. Please add an internship first.\"));","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"V1T0bh"},"content":"    void execute_doesNotThrow() {","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"V1T0bh"},"content":"        ListCommand listCommand \u003d new ListCommand(ListCommand.orderType.DEFAULT);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"V1T0bh"},"content":"        assertDoesNotThrow(listCommand::execute);","lastModifiedDate":"2025-10-13T21:01:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-10-13T20:26:37","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":8,"V1T0bh":53}},{"path":"src/test/java/internity/commands/UpdateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joannaj00"},"content":"package internity.commands;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-10T02:20:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Joannaj00"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Joannaj00"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Joannaj00"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-10T02:20:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Joannaj00"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Joannaj00"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Joannaj00"},"content":"class UpdateCommandTest {","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Joannaj00"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Joannaj00"},"content":"    void setUp() {","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.add(new Internship(\"Google\", \"SWE Intern\", new Date(15, 11, 2025), 8000));","lastModifiedDate":"2025-10-10T19:14:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Joannaj00"},"content":"    void execute_validStatus_updatesStatusSuccessfully() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, \"Accepted\");","lastModifiedDate":"2025-10-11T15:11:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Joannaj00"},"content":"        command.execute();","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Accepted\", InternshipList.get(0).getStatus());","lastModifiedDate":"2025-10-10T19:14:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Joannaj00"},"content":"    void execute_validCompany_updatesCompanySuccessfully() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, \"ByteDance\", null, null, null, null);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Joannaj00"},"content":"        command.execute();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"ByteDance\", InternshipList.get(0).getCompany());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Joannaj00"},"content":"    void execute_validRole_updatesRoleSuccessfully() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, null, \"Backend Intern\", null, null, null);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Joannaj00"},"content":"        command.execute();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"Backend Intern\", InternshipList.get(0).getRole());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Joannaj00"},"content":"    void execute_validDeadline_updatesDeadlineSuccessfully() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Joannaj00"},"content":"        Date newDeadline \u003d new Date(1, 12, 2025);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, null, null, newDeadline, null, null);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Joannaj00"},"content":"        command.execute();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"01-12-2025\", InternshipList.get(0).getDeadline().toString());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Joannaj00"},"content":"    void execute_validPay_updatesPaySuccessfully() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, null, null, null, 10000, null);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Joannaj00"},"content":"        command.execute();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(10000, InternshipList.get(0).getPay());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Joannaj00"},"content":"    void execute_multipleFields_updatesAllSuccessfully() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Joannaj00"},"content":"        Date newDeadline \u003d new Date(1, 12, 2025);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, \"Meta\", \"AI Research Intern\", newDeadline, 12000, \"Offer\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Joannaj00"},"content":"        command.execute();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Joannaj00"},"content":"        Internship updated \u003d InternshipList.get(0);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"Meta\", updated.getCompany());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"AI Research Intern\", updated.getRole());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"01-12-2025\", updated.getDeadline().toString());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(12000, updated.getPay());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"Offer\", updated.getStatus());","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Joannaj00"},"content":"    void execute_invalidIndex_throwsException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(5, \"Accepted\");","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, command::execute);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Joannaj00"},"content":"    void execute_noFieldsProvided_throwsException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, null, null, null, null, null);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, command::execute);","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-10T02:20:30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Joannaj00"},"content":"    void isExit_always_returnsFalse() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, \"Accepted\");","lastModifiedDate":"2025-10-11T15:11:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Joannaj00"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Joannaj00"},"content":"}","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false}],"authorContributionMap":{"Joannaj00":81,"lukeai-tan":7}},{"path":"src/test/java/internity/commands/UsernameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-22T20:09:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-22T20:09:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"class UsernameCommandTest {","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    void resetUsername() {","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"        // Reset any previously set username","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.setUsername(null);","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"    void execute_shouldSetUsernameInInternshipList() {","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"        String expectedUsername \u003d \"Jim Halpert\";","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"        UsernameCommand command \u003d new UsernameCommand(expectedUsername);","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        command.execute();","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(expectedUsername, InternshipList.getUsername(),","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"                \"Username should be updated in InternshipList after executing the command\");","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"    void execute_updatesSystemEvenAfterTrimmedInput() {","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"        String username \u003d \"  Asian Jim  \";","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"        UsernameCommand command \u003d new UsernameCommand(username);","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"        command.execute();","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(username, InternshipList.getUsername(),","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"                \"Username should be set exactly as provided, even with extra spaces\");","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"    void isExit_shouldReturnFalse() {","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"        UsernameCommand command \u003d new UsernameCommand(\"Dwight Schrute\");","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"        assertFalse(command.isExit(),","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"                \"UsernameCommand should not be an exit command\");","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"    void constructor_nullUsername_throwsAssertionError() {","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(AssertionError.class, () -\u003e new UsernameCommand(null));","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"    void constructor_blankUsername_throwsAssertionError() {","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(AssertionError.class, () -\u003e new UsernameCommand(\"\"));","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(AssertionError.class, () -\u003e new UsernameCommand(\"   \"));","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:30:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-22T19:23:04","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":54}},{"path":"src/test/java/internity/core/InternshipListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package internity.core;","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-23T23:42:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Joannaj00"},"content":"import internity.commands.ListCommand;","lastModifiedDate":"2025-10-21T21:40:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":"class InternshipListTest {","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":"    private ByteArrayOutputStream outContent;","lastModifiedDate":"2025-10-13T19:47:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"    void setUp() {","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-13T19:47:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-10-13T19:47:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"    @AfterEach","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"    void restoreStreams() {","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"    void add_thenGet_returnsItemAtIndex() throws InternityException {","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(null);","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(null);","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"        assertDoesNotThrow(() -\u003e InternshipList.get(0));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"        assertDoesNotThrow(() -\u003e InternshipList.get(1));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"        assertNull(InternshipList.get(0));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"        assertNull(InternshipList.get(1));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"    void get_invalidIndex_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.get(0));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(null);","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"V1T0bh"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.get(1));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"V1T0bh"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.get(-1));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"V1T0bh"},"content":"    void delete_removesGivenItem() throws InternityException {","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(null);","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(null);","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.delete(0);","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"V1T0bh"},"content":"        assertDoesNotThrow(() -\u003e InternshipList.get(0));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"V1T0bh"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.get(1));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T19:42:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"V1T0bh"},"content":"    public void listAll_whenEmpty_expectedOutcome() throws InternityException {","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.listAll(ListCommand.orderType.DEFAULT);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"V1T0bh"},"content":"        assertTrue(outContent.toString().contains(\"No internships found. Please add an internship first.\"));","lastModifiedDate":"2025-10-13T19:53:55","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"V1T0bh"},"content":"    public void listAll_withEntry_doesNotOutputNoInternshipsFound() throws Exception {","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"V1T0bh"},"content":"        Internship internship \u003d new Internship(\"Company A\", \"Developer\", new Date(1,1,2025), 5000);","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(internship);","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.listAll(ListCommand.orderType.DEFAULT);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"V1T0bh"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"V1T0bh"},"content":"        assertFalse(output.contains(\"No internships found. Please add an internship first.\"));","lastModifiedDate":"2025-10-13T19:42:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Joannaj00"},"content":"    void updateCompany_validIndex_updatesFieldAndPrintsMessage() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"OldCo\", \"Dev\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.updateCompany(0, \"NewCo\");","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"NewCo\", InternshipList.get(0).getCompany());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Joannaj00"},"content":"        String out \u003d outContent.toString();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Joannaj00"},"content":"        assertTrue(out.contains(\"Updated internship 1 company to: NewCo\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Joannaj00"},"content":"    void updateRole_validIndex_updatesFieldAndPrintsMessage() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"OldRole\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.updateRole(0, \"NewRole\");","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"NewRole\", InternshipList.get(0).getRole());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Joannaj00"},"content":"        String out \u003d outContent.toString();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Joannaj00"},"content":"        assertTrue(out.contains(\"Updated internship 1 role to: NewRole\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Joannaj00"},"content":"    void updateDeadline_validIndex_updatesFieldAndPrintsMessage() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Joannaj00"},"content":"        Date newDeadline \u003d new Date(17, 9, 2025);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.updateDeadline(0, newDeadline);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"17-09-2025\", InternshipList.get(0).getDeadline().toString());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Joannaj00"},"content":"        String out \u003d outContent.toString();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Joannaj00"},"content":"        assertTrue(out.contains(\"Updated internship 1 deadline to: 17-09-2025\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Joannaj00"},"content":"    void updatePay_validIndex_updatesFieldAndPrintsMessage() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.updatePay(0, 9000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(9000, InternshipList.get(0).getPay());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Joannaj00"},"content":"        String out \u003d outContent.toString();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Joannaj00"},"content":"        assertTrue(out.contains(\"Updated internship 1 pay to: 9000\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Joannaj00"},"content":"    void updateStatus_validIndex_updatesFieldAndPrintsMessage() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.updateStatus(0, \"Accepted\");","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"Accepted\", InternshipList.get(0).getStatus());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Joannaj00"},"content":"        String out \u003d outContent.toString();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Joannaj00"},"content":"        assertTrue(out.contains(\"Updated internship 1 status to: Accepted\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Joannaj00"},"content":"    void updateCompany_invalidIndex_throwsInternityException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.updateCompany(1, \"NewCo\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Joannaj00"},"content":"    void updateRole_invalidIndex_throwsInternityException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.updateRole(-1, \"NewRole\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Joannaj00"},"content":"    void updateDeadline_invalidIndex_throwsInternityException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Joannaj00"},"content":"        Date newDeadline \u003d new Date(17, 9, 2025);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.updateDeadline(42, newDeadline));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Joannaj00"},"content":"    void updatePay_invalidIndex_throwsInternityException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.updatePay(2, 9000));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"V1T0bh"},"content":"    public void sortInternships_sortAscending_expectedOutcome() throws InternityException {","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"V1T0bh"},"content":"        Internship older \u003d new Internship(\"OlderCo\", \"Dev\", new Date(1, 6, 2024), 0);","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"V1T0bh"},"content":"        Internship newer \u003d new Internship(\"NewerCo\", \"Dev\", new Date(1, 1, 2025), 0);","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(newer);","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(older);","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.sortInternships(ListCommand.orderType.ASCENDING); // ascending","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"V1T0bh"},"content":"        assertEquals(\"OlderCo\", InternshipList.get(0).getCompany());","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"V1T0bh"},"content":"        assertEquals(\"NewerCo\", InternshipList.get(1).getCompany());","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"V1T0bh"},"content":"    public void sortInternships_sortDescending_expectedOutcome() throws InternityException {","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"V1T0bh"},"content":"        Internship older \u003d new Internship(\"OlderCo\", \"Dev\", new Date(1, 6, 2024), 0);","lastModifiedDate":"2025-10-20T23:25:19","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"V1T0bh"},"content":"        Internship newer \u003d new Internship(\"NewerCo\", \"Dev\", new Date(1, 1, 2025), 0);","lastModifiedDate":"2025-10-20T23:25:19","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(older);","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(newer);","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.sortInternships(ListCommand.orderType.DESCENDING); // descending","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"V1T0bh"},"content":"        assertEquals(\"NewerCo\", InternshipList.get(0).getCompany());","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"V1T0bh"},"content":"        assertEquals(\"OlderCo\", InternshipList.get(1).getCompany());","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false}],"authorContributionMap":{"Joannaj00":121,"lukeai-tan":5,"V1T0bh":96}},{"path":"src/test/java/internity/core/InternshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.core;","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"class InternshipTest {","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"    void compareTo_earlierDeadline_returnsNegative() {","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"        Internship first \u003d new Internship(\"Google\", \"SWE\", new Date(1, 1, 2025), 8000);","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"        Internship second \u003d new Internship(\"Microsoft\", \"Intern\", new Date(15, 12, 2025), 5000);","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(first.compareTo(second) \u003c 0, \"Internship with earlier deadline should come first\");","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"    void compareTo_laterDeadline_returnsPositive() {","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"        Internship first \u003d new Internship(\"Google\", \"SWE\", new Date(1, 1, 2025), 8000);","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"        Internship second \u003d new Internship(\"Microsoft\", \"Intern\", new Date(15, 12, 2024), 5000);","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(first.compareTo(second) \u003e 0, \"Internship with later deadline should come after\");","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"    void compareTo_sameDeadline_returnsZero() {","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"        Internship first \u003d new Internship(\"Google\", \"SWE\", new Date(1, 1, 2025), 8000);","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"        Internship second \u003d new Internship(\"Microsoft\", \"Intern\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(0, first.compareTo(second), \"Internships with same deadline should be equal\");","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"    void isValidStatus_validStatus_returnsTrue() {","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(Internship.isValidStatus(\"Pending\"));","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(Internship.isValidStatus(\"Applied\"));","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(Internship.isValidStatus(\"Offer\"));","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"    void isValidStatus_invalidStatus_returnsFalse() {","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"        assertFalse(Internship.isValidStatus(\"Waiting\"));","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"        assertFalse(Internship.isValidStatus(\"Done\"));","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        assertFalse(Internship.isValidStatus(\"\"));","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"        assertFalse(Internship.isValidStatus(\"pending\")); // case-sensitive","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"    void isValidStatus_nullStatus_returnsFalse() {","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"        assertFalse(Internship.isValidStatus(null));","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-27T16:57:49","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":53}},{"path":"src/test/java/internity/core/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenyAlbatross"},"content":"package internity.core;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BenyAlbatross"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BenyAlbatross"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BenyAlbatross"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BenyAlbatross"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BenyAlbatross"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BenyAlbatross"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BenyAlbatross"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BenyAlbatross"},"content":"import java.util.List;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BenyAlbatross"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-28T18:26:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BenyAlbatross"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-28T18:26:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BenyAlbatross"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-10-28T18:26:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BenyAlbatross"},"content":"class StorageTest {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BenyAlbatross"},"content":"    @TempDir","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BenyAlbatross"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BenyAlbatross"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BenyAlbatross"},"content":"    private String testFilePath;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BenyAlbatross"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BenyAlbatross"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BenyAlbatross"},"content":"    private ByteArrayOutputStream outContent;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BenyAlbatross"},"content":"    private ByteArrayOutputStream errContent;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BenyAlbatross"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BenyAlbatross"},"content":"    void setUp() {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BenyAlbatross"},"content":"        testFilePath \u003d tempDir.resolve(\"test_internships.txt\").toString();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BenyAlbatross"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BenyAlbatross"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BenyAlbatross"},"content":"        errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BenyAlbatross"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BenyAlbatross"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BenyAlbatross"},"content":"    @AfterEach","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BenyAlbatross"},"content":"    void restoreStreams() {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BenyAlbatross"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BenyAlbatross"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setUsername(null);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BenyAlbatross"},"content":"    void save_emptyList_createsEmptyFile() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(Files.exists(Path.of(testFilePath)));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, lines.size()); // Username header + username line","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Username (in line below):\", lines.get(0));","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BenyAlbatross"},"content":"    void save_singleInternship_writesCorrectFormat() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BenyAlbatross"},"content":"        Internship internship \u003d new Internship(\"Google\", \"SWE\", new Date(15, 3, 2025), 6000);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(internship);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(3, lines.size()); // Username header + username + 1 internship","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Username (in line below):\", lines.get(0));","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google | SWE | 15-03-2025 | 6000 | Pending\", lines.get(2));","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BenyAlbatross"},"content":"    void save_multipleInternships_writesAllEntries() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(new Internship(\"Google\", \"SWE\", new Date(15, 3, 2025), 6000));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(new Internship(\"Meta\", \"Data Scientist\", new Date(20, 4, 2025), 7000));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(new Internship(\"Amazon\", \"DevOps\", new Date(1, 5, 2025), 5500));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(5, lines.size()); // Username header + username + 3 internships","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Username (in line below):\", lines.get(0));","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google | SWE | 15-03-2025 | 6000 | Pending\", lines.get(2));","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Meta | Data Scientist | 20-04-2025 | 7000 | Pending\", lines.get(3));","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon | DevOps | 01-05-2025 | 5500 | Pending\", lines.get(4));","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BenyAlbatross"},"content":"    void save_withCustomStatus_preservesStatus() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BenyAlbatross"},"content":"        Internship internship \u003d new Internship(\"Tesla\", \"ML Engineer\", new Date(10, 6, 2025), 8000);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BenyAlbatross"},"content":"        internship.setStatus(\"Accepted\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(internship);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(3, lines.size()); // Username header + username + 1 internship","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Username (in line below):\", lines.get(0));","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(lines.get(2).endsWith(\"Accepted\"));","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BenyAlbatross"},"content":"     * Tests that save() creates multiple levels of missing parent directories.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BenyAlbatross"},"content":"     * Uses nested path (data/nested/) to verify Storage uses Files.createDirectories()","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BenyAlbatross"},"content":"     * which creates all missing parents, not Files.createDirectory() which would fail.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BenyAlbatross"},"content":"     * While the app only needs one level (./data/), this tests robustness for any path.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BenyAlbatross"},"content":"    void save_nonExistentDirectory_createsDirectory() throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BenyAlbatross"},"content":"        String nestedPath \u003d tempDir.resolve(\"data/nested/internships.txt\").toString();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BenyAlbatross"},"content":"        Storage nestedStorage \u003d new Storage(nestedPath);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(new Internship(\"Apple\", \"iOS Dev\", new Date(5, 7, 2025), 7500));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BenyAlbatross"},"content":"        nestedStorage.save(internships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(Files.exists(Path.of(nestedPath)));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BenyAlbatross"},"content":"    void load_nonExistentFile_returnsEmptyList() throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BenyAlbatross"},"content":"        String nonExistentPath \u003d tempDir.resolve(\"does_not_exist.txt\").toString();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BenyAlbatross"},"content":"        Storage nonExistentStorage \u003d new Storage(nonExistentPath);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d nonExistentStorage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(0, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BenyAlbatross"},"content":"    void load_emptyFile_throwsException() throws IOException {","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BenyAlbatross"},"content":"        Files.createFile(Path.of(testFilePath));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BenyAlbatross"},"content":"        InternityException thrown \u003d org.junit.jupiter.api.Assertions.assertThrows(","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BenyAlbatross"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BenyAlbatross"},"content":"                () -\u003e storage.load()","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BenyAlbatross"},"content":"        );","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Invalid storage file format\", thrown.getMessage());","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BenyAlbatross"},"content":"    void load_validSingleEntry_loadsCorrectly() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\";","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"SWE\", internships.get(0).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(6000, internships.get(0).getPay());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Pending\", internships.get(0).getStatus());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BenyAlbatross"},"content":"    void load_multipleValidEntries_loadsAll() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 20-04-2025 | 7000 | Accepted\\n\"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(3, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BenyAlbatross"},"content":"        // Verify first entry completely","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"SWE\", internships.get(0).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(6000, internships.get(0).getPay());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Pending\", internships.get(0).getStatus());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BenyAlbatross"},"content":"        // Verify second entry completely","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Meta\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Data Scientist\", internships.get(1).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(7000, internships.get(1).getPay());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Accepted\", internships.get(1).getStatus());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BenyAlbatross"},"content":"        // Verify third entry completely","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(2).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"DevOps\", internships.get(2).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(5500, internships.get(2).getPay());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Rejected\", internships.get(2).getStatus());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BenyAlbatross"},"content":"    void load_fewerFields_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 20-04-2025\\n\"  // Missing pay and status","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with invalid number of fields:\"));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"BenyAlbatross"},"content":"    void load_invalidPayFormat_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 20-04-2025 | NotANumber | Accepted\\n\"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with invalid pay format\"));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"BenyAlbatross"},"content":"    void load_negativePay_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 20-04-2025 | -1000 | Accepted\\n\"  // Negative pay","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with negative pay amount\"));","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"BenyAlbatross"},"content":"    void load_invalidStatus_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"BenyAlbatross"},"content":"                \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 20-04-2025 | 7000 | InvalidStatus\\n\"  // Invalid status","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with invalid status\"));","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"BenyAlbatross"},"content":"    void load_invalidDateFormat_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 2025/04/20 | 7000 | Accepted\\n\"  // Wrong date format","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"BenyAlbatross"},"content":"        String stderr \u003d errContent.toString();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"BenyAlbatross"},"content":"        String expectedError \u003d \"Warning: Skipped line - Invalid date format. \"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Expected dd-MM-yyyy (e.g. 08-10-2025):\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(stderr.contains(expectedError));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"BenyAlbatross"},"content":"    void load_impossibleDate_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 31-02-2025 | 7000 | Accepted\\n\"  // Feb 31 doesn\u0027t exist","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"BenyAlbatross"},"content":"        String stderr \u003d errContent.toString();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"BenyAlbatross"},"content":"        String expectedError \u003d \"Warning: Skipped line - Invalid date format. \"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Expected dd-MM-yyyy (e.g. 08-10-2025):\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(stderr.contains(expectedError));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"BenyAlbatross"},"content":"    void load_nonNumericDate_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 1a-03-2025 | 7000 | Accepted\\n\"  // Contains \u0027a\u0027 in day","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"BenyAlbatross"},"content":"        String stderr \u003d errContent.toString();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"BenyAlbatross"},"content":"        String expectedError \u003d \"Warning: Skipped line - Invalid date format. \"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Expected dd-MM-yyyy (e.g. 08-10-2025):\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(stderr.contains(expectedError));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"BenyAlbatross"},"content":"    void load_zeroPay_loadsCorrectly() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE Intern | 15-03-2025 | 0 | Pending\\n\";","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, internships.size());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"SWE Intern\", internships.get(0).getRole());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(0, internships.get(0).getPay());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Pending\", internships.get(0).getStatus());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"BenyAlbatross"},"content":"    void load_emptyCompany_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"BenyAlbatross"},"content":"                + \" | Data Scientist | 20-04-2025 | 7000 | Accepted\\n\"  // Empty company","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with empty company or role\"));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"BenyAlbatross"},"content":"    void load_emptyRole_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta |  | 20-04-2025 | 7000 | Accepted\\n\"  // Empty role","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with empty company or role\"));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"BenyAlbatross"},"content":"    void load_extraFields_loadsFirstFiveFields() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending | Extra | MoreExtra\\n\";","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with invalid number of fields\"));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"BenyAlbatross"},"content":"    void saveAndLoad_roundTrip_preservesData() throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e originalInternships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"BenyAlbatross"},"content":"        originalInternships.add(new Internship(\"Google\", \"SWE\", new Date(15, 3, 2025), 6000));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"BenyAlbatross"},"content":"        originalInternships.add(new Internship(\"Meta\", \"Data Scientist\", new Date(20, 4, 2025), 7000));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"BenyAlbatross"},"content":"        originalInternships.get(1).setStatus(\"Accepted\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(originalInternships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e loadedInternships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, loadedInternships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", loadedInternships.get(0).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"SWE\", loadedInternships.get(0).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(6000, loadedInternships.get(0).getPay());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Pending\", loadedInternships.get(0).getStatus());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Meta\", loadedInternships.get(1).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Accepted\", loadedInternships.get(1).getStatus());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"BenyAlbatross"},"content":"    void load_extraWhitespace_trimsCorrectly() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"BenyAlbatross"},"content":"                + \"  Google  |  SWE  |  15-03-2025  |  6000  |  Pending  \\n\";","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"SWE\", internships.get(0).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"BenyAlbatross"},"content":"    void load_multiWordFields_loadsCorrectly() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"BenyAlbatross"},"content":"                + \"TestUser\\n\"","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Jane Street | Quantitative Researcher | 25-12-2025 | 10000 | Interviewing\\n\";","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Jane Street\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Quantitative Researcher\", internships.get(0).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Interviewing\", internships.get(0).getStatus());","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"BenyAlbatross"},"content":"    // Username persistence tests","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"BenyAlbatross"},"content":"    void save_withUsername_writesUsernameHeader() throws InternityException, IOException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setUsername(\"JohnDoe\");","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(new Internship(\"Google\", \"SWE\", new Date(15, 3, 2025), 6000));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(3, lines.size());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Username (in line below):\", lines.get(0));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"JohnDoe\", lines.get(1));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google | SWE | 15-03-2025 | 6000 | Pending\", lines.get(2));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"BenyAlbatross"},"content":"    void save_withNullUsername_writesEmptyUsername() throws InternityException, IOException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setUsername(null);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(new Internship(\"Meta\", \"Data Scientist\", new Date(20, 4, 2025), 7000));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(3, lines.size());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Username (in line below):\", lines.get(0));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"\", lines.get(1));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Meta | Data Scientist | 20-04-2025 | 7000 | Pending\", lines.get(2));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"BenyAlbatross"},"content":"    void save_withEmptyUsername_writesEmptyUsername() throws InternityException, IOException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setUsername(\"\");","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, lines.size());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Username (in line below):\", lines.get(0));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"\", lines.get(1));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"BenyAlbatross"},"content":"    void save_usernameWithSpaces_trimsAndSaves() throws InternityException, IOException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setUsername(\"John Doe\");","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, lines.size());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Username (in line below):\", lines.get(0));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"John Doe\", lines.get(1));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"BenyAlbatross"},"content":"    void load_withValidUsername_loadsUsername() throws InternityException, IOException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Alice\\n\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\";","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, internships.size());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Alice\", InternshipList.getUsername());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"BenyAlbatross"},"content":"    void load_withEmptyUsername_loadsEmptyUsername() throws InternityException, IOException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"BenyAlbatross"},"content":"                + \"\\n\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 20-04-2025 | 7000 | Accepted\\n\";","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, internships.size());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"BenyAlbatross"},"content":"        assertNull(InternshipList.getUsername());","lastModifiedDate":"2025-10-28T17:58:17","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Meta\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"BenyAlbatross"},"content":"    void load_usernameWithWhitespace_trimsUsername() throws InternityException, IOException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"BenyAlbatross"},"content":"                + \"  BobSmith  \\n\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, internships.size());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"BobSmith\", InternshipList.getUsername());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"BenyAlbatross"},"content":"    void load_usernameWithMultipleWords_loadsCorrectly() throws InternityException, IOException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Jane Marie Doe\\n\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Tesla | ML Engineer | 10-06-2025 | 8000 | Pending\\n\";","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, internships.size());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Jane Marie Doe\", InternshipList.getUsername());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"BenyAlbatross"},"content":"    void load_missingUsernameHeader_throwsException() throws IOException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\";","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"BenyAlbatross"},"content":"        InternityException thrown \u003d org.junit.jupiter.api.Assertions.assertThrows(","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"BenyAlbatross"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"BenyAlbatross"},"content":"                () -\u003e storage.load()","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"BenyAlbatross"},"content":"        );","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Invalid storage file format\", thrown.getMessage());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"BenyAlbatross"},"content":"    void load_invalidUsernameHeader_throwsException() throws IOException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username:\\n\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"BenyAlbatross"},"content":"                + \"JohnDoe\\n\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\";","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"BenyAlbatross"},"content":"        InternityException thrown \u003d org.junit.jupiter.api.Assertions.assertThrows(","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"BenyAlbatross"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"BenyAlbatross"},"content":"                () -\u003e storage.load()","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"BenyAlbatross"},"content":"        );","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Invalid storage file format\", thrown.getMessage());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"BenyAlbatross"},"content":"    void saveAndLoad_usernameRoundTrip_preservesUsername() throws InternityException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setUsername(\"TestUser123\");","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e originalInternships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"BenyAlbatross"},"content":"        originalInternships.add(new Internship(\"Google\", \"SWE\", new Date(15, 3, 2025), 6000));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"BenyAlbatross"},"content":"        originalInternships.add(new Internship(\"Meta\", \"Data Scientist\", new Date(20, 4, 2025), 7000));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(originalInternships);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"BenyAlbatross"},"content":"        // Clear username to ensure it\u0027s loaded from file","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setUsername(null);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e loadedInternships \u003d storage.load();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"TestUser123\", InternshipList.getUsername());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, loadedInternships.size());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", loadedInternships.get(0).getCompany());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Meta\", loadedInternships.get(1).getCompany());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"BenyAlbatross"},"content":"    void save_emptyListWithUsername_writesOnlyUsername() throws InternityException, IOException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setUsername(\"EmptyListUser\");","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, lines.size());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Username (in line below):\", lines.get(0));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"EmptyListUser\", lines.get(1));","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"BenyAlbatross"},"content":"    void load_onlyUsernameNoInternships_loadsUsername() throws InternityException, IOException {","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Username (in line below):\\n\"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"BenyAlbatross"},"content":"                + \"OnlyUsername\\n\";","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(0, internships.size());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"OnlyUsername\", InternshipList.getUsername());","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T17:45:51","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"BenyAlbatross"},"content":"    void saveAndLoad_changeUsername_newUsernameIsPersisted() throws InternityException, IOException {","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"BenyAlbatross"},"content":"        // Initial save with username \"OriginalUser\"","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setUsername(\"OriginalUser\");","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(new Internship(\"Google\", \"SWE\", new Date(15, 3, 2025), 6000));","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"BenyAlbatross"},"content":"        // Load and verify original username","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setUsername(null);","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e loadedInternships1 \u003d storage.load();","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"OriginalUser\", InternshipList.getUsername());","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, loadedInternships1.size());","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"BenyAlbatross"},"content":"        // Change username and save again with the same internships","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setUsername(\"NewUser\");","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(loadedInternships1);","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"BenyAlbatross"},"content":"        // Load again and verify new username is persisted","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setUsername(null); // Simulate fresh start","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e loadedInternships2 \u003d storage.load(); // Simulate load from file","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"NewUser\", InternshipList.getUsername());","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, loadedInternships2.size());","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", loadedInternships2.get(0).getCompany());","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"BenyAlbatross"},"content":"        // Verify file content directly","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Username (in line below):\", lines.get(0));","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"NewUser\", lines.get(1));","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google | SWE | 15-03-2025 | 6000 | Pending\", lines.get(2));","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-28T18:22:59","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"BenyAlbatross"},"content":"}","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false}],"authorContributionMap":{"BenyAlbatross":645}},{"path":"src/test/java/internity/ui/DashboardUiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.ui;","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"class DashboardUiTest {","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"    void setUp() {","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.setUsername(\"TestUser\");","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.add(new Internship(\"Google\", \"SWE\", new Date(1, 1, 2025), 8000));","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.add(new Internship(\"Microsoft\", \"Intern\", new Date(15, 12, 2025), 5000));","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"    void printDashboard_withInternships_printsExpectedInfo() throws InternityException {","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"        DashboardUi.printDashboard();","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(output.contains(\"User: TestUser\"), \"Should print username\");","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(output.contains(\"Total Internships: 2\"), \"Should print correct count\");","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(output.contains(\"Nearest Deadline:\")","lastModifiedDate":"2025-10-27T18:09:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"                \u0026\u0026 output.contains(\"01-01-2025\"), \"Should show earliest deadline\");","lastModifiedDate":"2025-10-27T18:09:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(output.contains(\"Applied\")","lastModifiedDate":"2025-10-27T18:09:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"                \u0026\u0026 output.contains(\"Pending\"), \"Should show status overview\");","lastModifiedDate":"2025-10-27T18:09:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"    void printDashboard_noInternships_printsNoInternshipsMessage() throws InternityException {","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"        DashboardUi.printDashboard();","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(output.contains(\"No internships found\"), \"Should indicate no internships\");","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(output.contains(\"Guest\") || output.contains(\"User:\"), \"Should still print username\");","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-27T16:57:58","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":55}},{"path":"src/test/java/internity/utils/DateFormatterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.utils;","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-08T23:33:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-08T23:33:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-08T23:33:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"class DateFormatterTest {","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"    void parse_validDateFormat_dateObjectCreated() throws InternityException {","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"08-10-2025\";","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"        Date parsedDate \u003d DateFormatter.parse(input);","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"        assertNotNull(parsedDate, \"Resulting Date object should not be null\");","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(8, parsedDate.getDay(), \"Day should match input\");","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(10, parsedDate.getMonth(), \"Month should match input\");","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(2025, parsedDate.getYear(), \"Year should match input\");","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    void parse_invalidDateFormat_throwsException() {","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"2025-10-08\";","lastModifiedDate":"2025-10-09T10:32:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"        InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e DateFormatter.parse(input),","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"                \"Expected parse() to throw exception, but it did not\"","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"                \"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\",","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"                thrown.getMessage()","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"    void parse_nonNumericalInput_throwsException() {","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"ab-cd-efgh\";","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"        InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e DateFormatter.parse(input),","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"                \"Expected parse() to throw exception, but it did not\"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"                \"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\",","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"                thrown.getMessage()","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"    void parse_mixedAlphaNumericalInput_throwsException() {","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"12-xx-2025\";","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"        InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e DateFormatter.parse(input),","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"                \"Expected parse() to throw exception, but it did not\"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"                \"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\",","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"                thrown.getMessage()","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"    void parse_nullInput_throwsInternityException() {","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"        InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e DateFormatter.parse(null)","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Input cannot be null or blank\", thrown.getMessage());","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"    void parse_blankInput_throwsException() {","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \" \";","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"        InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e DateFormatter.parse(input),","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"                \"Expected parse() to throw exception, but it did not\"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Input cannot be null or blank\", thrown.getMessage());","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"    void parse_impossibleDates_throwsException() {","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"        String[] inputs \u003d {","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"            \"31-02-2025\", // February has max 28 days in 2025, so date is invalid","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"            \"29-02-2023\", // 2023 is not a leap year, so Feb 29 is invalid","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"            \"99-99-2025\", // Month 99 and day 99 are invalid","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"            \"00-01-2025\", // Day 0 is invalid","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"            \"01-00-2025\", // Month 0 is invalid","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"            \"32-01-2025\"  // January has max 31 days, so date is invalid","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"        };","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lukeai-tan"},"content":"        for (String input : inputs) {","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lukeai-tan"},"content":"            InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"                    InternityException.class,","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lukeai-tan"},"content":"                    () -\u003e DateFormatter.parse(input),","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"                    \"Expected parse() to throw for input: \" + input","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lukeai-tan"},"content":"            );","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lukeai-tan"},"content":"            assertEquals(","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BenyAlbatross"},"content":"                    \"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\",","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lukeai-tan"},"content":"                    thrown.getMessage(),","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lukeai-tan"},"content":"                    \"Message mismatch for input: \" + input","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lukeai-tan"},"content":"            );","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lukeai-tan"},"content":"    void parse_leapYearValidDate_returnsDate() throws InternityException {","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lukeai-tan"},"content":"        // 2024 is a leap year","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"29-02-2024\";","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lukeai-tan"},"content":"        Date date \u003d DateFormatter.parse(input);","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(29, date.getDay());","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(2, date.getMonth());","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(2024, date.getYear());","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lukeai-tan"},"content":"    void parse_leapYearInvalidDate_throwsException() {","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lukeai-tan"},"content":"        // 2023 is NOT a leap year","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"29-02-2023\";","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lukeai-tan"},"content":"        InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e DateFormatter.parse(input)","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\", thrown.getMessage());","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lukeai-tan"},"content":"    void parse_endOfMonthBoundaries_validDates() throws InternityException {","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"30-04-2025\";","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lukeai-tan"},"content":"        Date date \u003d DateFormatter.parse(input);","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(30, date.getDay());","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(4, date.getMonth());","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lukeai-tan"},"content":"        input \u003d \"31-01-2025\";","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lukeai-tan"},"content":"        date \u003d DateFormatter.parse(input);","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(31, date.getDay());","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(1, date.getMonth());","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lukeai-tan"},"content":"    void parse_outOfBoundsMonthOrDay_throwsException() {","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lukeai-tan"},"content":"        String[] invalidInputs \u003d {\"31-04-2025\", \"32-01-2025\", \"00-12-2025\", \"15-00-2025\", \"15-13-2025\"};","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lukeai-tan"},"content":"        for (String input : invalidInputs) {","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lukeai-tan"},"content":"            InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lukeai-tan"},"content":"                    InternityException.class,","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lukeai-tan"},"content":"                    () -\u003e DateFormatter.parse(input),","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lukeai-tan"},"content":"                    \"Expected parse() to throw for input: \" + input","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lukeai-tan"},"content":"            );","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lukeai-tan"},"content":"            assertEquals(\"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\", thrown.getMessage());","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lukeai-tan"},"content":"    void parse_partsLengthNotThree_throwsInternityException() {","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"08-10-2025-\";","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lukeai-tan"},"content":"        InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e DateFormatter.parse(input)","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lukeai-tan"},"content":"                \"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\",","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lukeai-tan"},"content":"                thrown.getMessage()","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-27T17:12:15","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":182,"BenyAlbatross":1}}]
