[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17T23:25:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:18:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:18:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"    mainClass.set(\"internity.Internity\")","lastModifiedDate":"2025-10-02T23:12:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"    archiveBaseName.set(\"internity\")","lastModifiedDate":"2025-10-02T23:12:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24T00:28:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29T23:10:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-10-20T22:45:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":3,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"| Display                                                                                                                                                                                                                  |        Name         |             Github Profile              |             Portfolio             |","lastModifiedDate":"2025-09-25T19:21:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------:|:---------------------------------------:|:---------------------------------:|","lastModifiedDate":"2025-10-01T15:34:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"| \u003cimg src\u003d\"https://avatars.githubusercontent.com/u/178822703?v\u003d4\" width\u003d\"200\"\u003e                                                                                                                                            |   Luke Aidan Tan    | [Github](https://github.com/lukeai-tan) | [Portfolio](team/lukeAidanTan.md) |","lastModifiedDate":"2025-09-25T19:21:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"| ![](https://media.licdn.com/dms/image/v2/D5603AQH18m1LLlHhQQ/profile-displayphoto-shrink_200_200/B56ZTQ9X.XHwAc-/0/1738672538423?e\u003d1761782400\u0026v\u003dbeta\u0026t\u003dBBDavdmKHKzxpc5_vBCRl2UWnQVq59z1hLevDBPoWZ0)                      | Vito Benedict Halim |   [Github](https://github.com/V1T0bh)   |  [Portfolio](team/VitoBHalim.md)  |","lastModifiedDate":"2025-09-25T19:21:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"| \u003cimg src\u003d\"https://i2-prod.mirror.co.uk/article29581465.ece/ALTERNATES/s1200d/0_Paddington-Bear-the-movie.jpg\" width\u003d\"200\"\u003e                                                                                               |     Luo Hongxun     | [Github](https://github.com/BestBearrr) |   [Portfolio](team/hongxun.md)    |","lastModifiedDate":"2025-10-01T15:34:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":"| \u003cimg src \u003d \"https://media.licdn.com/dms/image/v2/D5603AQGXs5Gmo4Mc_w/profile-displayphoto-shrink_800_800/B56ZVI6c92HsAc-/0/1740685037956?e\u003d1762387200\u0026v\u003dbeta\u0026t\u003dUehrMqcYM3baiqLZlEcjGiGGzzx_rp9AECZp6yAZ4KI\" width\u003d\"200\"\u003e |     Joanna Jung     |      [Github](https://github.com/joannaj00)      |  [Portfolio](team/joannaJung.md)  |","lastModifiedDate":"2025-10-01T15:04:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BenyAlbatross"},"content":"| ![](https://media.licdn.com/dms/image/v2/D5603AQFwr-8mb0WrOg/profile-displayphoto-shrink_200_200/B56ZdZbE8iGoAY-/0/1749551961451?e\u003d1762387200\u0026v\u003dbeta\u0026t\u003dL56PmTjCDQfV0fSfPcm8cy1xRJpJfjQqvkJonj-y-Qw)                      |     Benjamin Chek     |      [Github](https://github.com/BenyAlbatross)      |  [Portfolio](team/benjaminChek.md)  |","lastModifiedDate":"2025-10-01T14:57:24","isFullCredit":false}],"authorContributionMap":{"Joannaj00":1,"lukeai-tan":3,"BestBearrr":2,"-":2,"BenyAlbatross":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"1. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"2. [Design](#design)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"    - [Architecture](#Architecture)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"    - [UI Component](#ui-component)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"    - [Logic Component](#logic-component)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"    - [Model Component](#model-component)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"    - [Storage Component](#storage-component)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"    - [Common Classes](#common-classes)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"3. [Implementation](#implementation)","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"4. [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"5. [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"   - [Product Scope](#product-scope)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"   - [User Stories](#user-stories)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"   - [Use Cases](#use-cases)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"   - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"   - [Glossary](#glossary)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"6. [Instructions for Manual Testing](#instructions-for-manual-testing)","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"## Design","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"### Architecture","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"### UI Component","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"### Logic Component","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"#### Overview","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"The Logic component is responsible for:","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"- Parsing user input commands.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"- Creating the appropriate `Command` object.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"- Executing that command to modify the Model or interact with the UI.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"#### How it Works","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"1. User input (e.g. `add company/Google role/SWE deadline/10-10-2025 pay/1000`) is received by CommandParser.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"2. The `CommandParser`:","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"   - Validates that the input is not empty or malformed.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"   - Splits the input into a command keyword and arguments.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"   - Passes them into the `CommandFactory`.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"3. The `CommandFactory`:","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"   - Matches the keyword to a corresponding `Command` subclass (e.g. `AddCommand`).","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"   - Uses the `ArgumentParser` to interpret argument strings.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"   - Returns a fully constructed `Command` object.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"4. The `Command` object executes its logic (e.g. adds a new internship to `InternshipList`).","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"5. The result of the execution is printed ot the console via the `Ui`.","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"#### Sequence Diagram","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"Below is a simplified interaction for the `delete 1` command:","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"\u003cinsert uml diagram\u003e","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"### Model Component","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"### Storage Component","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"### Common Classes","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"## Implementation","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:32:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"## Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"## Appendix: Requirements","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...                                                          | So that I can ...                                   |","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"|---------|----------|------------------------------------------------------------------------|-----------------------------------------------------|","lastModifiedDate":"2025-10-17T20:13:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"| v1.0    | new user | add a new internship with company, role, and deadline details          | keep all opportunities organized in one place       |","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"| v1.0    | user     | set the status of my application (applied, interview, offer, rejected) | easily see my progress with each internship         |","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"| v1.0    | user     | see a list of all my internships                                       | easily view the opportunities I’m tracking          |","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"| v1.0    | user     | remove an internship entry                                             | keep the list relevant and up to date               |","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"| v2.0    | user     | see my internships sorted by upcoming deadlines                        | prioritize applications that are due soon           |","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"| v2.0    | user     | save and load internships automatically                                | avoid losing my progress and notes between sessions |","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"| v2.0    | user     | see an overall countdown for upcoming interviews                       | manage my time effectively and be prepared          |","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-17T15:37:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"## Use Cases","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-17T21:47:01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":72,"-":34}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"# Internity User Guide","lastModifiedDate":"2025-10-06T15:50:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"Internity is a CLI based app for managing internship applications. Internity can help you manage and keep track ","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"of your internship applications more efficiently, perfect for Computer Science students who need to ","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"manage hundreds of applications.","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"# Table of Contents","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"- [Features](#features)","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"  - [Adding an application](#adding-an-application-add)","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"  - [Deleting an application](#deleting-an-application-delete)","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"  - [Updating an application](#updating-an-application-update)","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"  - [Viewing all applications](#listing-all-applications-list)","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"- [FAQ](#faq)","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T15:54:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T15:54:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 17 or above installed.","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"2. Down the latest version of `Internity` from [here](http://link.to/Internity).","lastModifiedDate":"2025-10-06T15:54:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T15:54:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T15:54:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"\u003cdiv style\u003d\"background-color: #002b5c; color: #cce6ff; padding: 15px; border-radius: 8px; border-left: 5px solid #3399ff;\"\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"\u003ch4\u003eNotes about the command format\u003c/h4\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"\u003cul\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"\u003cli\u003eWords in \u003cstrong\u003eUPPER_CASE\u003c/strong\u003e are placeholders that must be supplied by you.\u003cbr\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"Example: \u003ccode\u003edelete INDEX\u003c/code\u003e → \u003ccode\u003edelete 1\u003c/code\u003e\u003c/li\u003e","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"\u003cli\u003eIf using a PDF version, be careful when copying commands that span multiple lines as spaces surrounding line-breaks may be omitted.\u003c/li\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"\u003c/ul\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T12:00:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"### Adding an application: `add`","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"Add a new internship application with company, role, deadline and pay details","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"Format","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"add company/COMPANY_NAME role/ROLE_NAME deadline/DEADLINE pay/PAY_DETAILS","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"Example:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"add company/Google role/Software Engineer deadline/2025-09-17 pay/100000","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"This command adds an internship application at Google for the role of Software Engineer with a deadline of 17 September 2025, and a monthly salary of $100000.","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"### Deleting an application: `delete`","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"Delete an existing internship application from the internship list","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"Format:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"delete INDEX","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"Example:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"delete 2","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BenyAlbatross"},"content":"This command deletes the internship application at index 2 from the list.","lastModifiedDate":"2025-10-17T14:21:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"### Updating an application: `update`","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"Use this command to update the **status** of an internship application.  ","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"For v1.0, only the `status` field can be updated. Updating other fields (company, role, deadline, pay) will be added in future iterations.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"**Valid `status` values:**","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"- `Interested` → You’ve found the internship and might apply.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lukeai-tan"},"content":"- `Applied` → You’ve submitted your application.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"- `Interviewing` → You’re currently in the interview process.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"- `Offer` → You’ve received an internship offer.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"- `Accepted` → You’ve accepted the offer.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"- `Rejected` → The application was unsuccessful or withdrawn.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"Format:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"update INDEX status/NEW_STATUS","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"Example:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"update 1 status/Accepted","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"This command updates the status of the internship application at index 1 to \"Accepted\".","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"### Listing all applications: `list`","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"Use this command to view all internship applications.  ","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"By default, the list shows applications in the **order they were added**. ","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"You can optionally sort them by deadline in ascending or descending order.","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lukeai-tan"},"content":"Format:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lukeai-tan"},"content":"list","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"list sort/ORDER","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lukeai-tan"},"content":"Example:","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lukeai-tan"},"content":"list","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lukeai-tan"},"content":"list sort/asc","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lukeai-tan"},"content":"list sort/desc","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lukeai-tan"},"content":"```","lastModifiedDate":"2025-10-06T10:05:39","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lukeai-tan"},"content":"- `list` → shows all applications in the order they were added","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lukeai-tan"},"content":"- `list sort/asc` → sorts applications by deadline ascending","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lukeai-tan"},"content":"- `list sort/desc` → sorts applications by deadline descending","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T10:21:43","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lukeai-tan"},"content":"---","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lukeai-tan"},"content":"| **Action**             | **Command** | **Format**                                                                                                                                                  | **Example**                                                                     |","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lukeai-tan"},"content":"|------------------------|-------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------|","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lukeai-tan"},"content":"| **Add Application**    | `add`       | `add company/COMPANY_NAME role/ROLE_NAME deadline/DEADLINE pay/PAY_DETAILS`                                                                                 | `add company/Google role/Software Engineer Intern deadline/2025-10-20 pay/1000` |","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lukeai-tan"},"content":"| **Delete Application** | `delete`    | `delete INDEX`                                                                                                                                              | `delete 2`                                                                      |","lastModifiedDate":"2025-10-06T15:53:07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lukeai-tan"},"content":"| **Update Application** | `update`    | `update INDEX FIELD/VALUE`                                                                                                                                  | `update 1 status/Interviewing`                                                  |","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lukeai-tan"},"content":"| **List Applications**  | `list`      | `list` → list all applications in the order they were added \u003cbr\u003e `list sort/ORDER` → sort applications by deadline ascending (`asc`) or descending (`desc`) | `list` \u003cbr\u003e `list sort/asc` \u003cbr\u003e `list sort/desc`                               |","lastModifiedDate":"2025-10-06T15:48:52","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":105,"-":34,"BenyAlbatross":1}},{"path":"docs/team/VitoBHalim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"# Vito Benedict Halim - Project Portfolio Page","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"## Overview","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"Y2 CEG. Part of the development team for Internity. Hoping to support Internity to the best of my abilities by providing meaningful code and feedback.","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"Connect with me on LinkedIn [HERE](https://www.linkedin.com/in/vito-benedict-halim-832775308/)","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":"## Summary of Contributions","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":"Recess Week - add info :)\u003c/br\u003e","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":"*tbd - project ongoing*","lastModifiedDate":"2025-09-25T14:35:30","isFullCredit":false}],"authorContributionMap":{"V1T0bh":8}},{"path":"docs/team/benjaminChek.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BenyAlbatross"},"content":"### Benjamin Chek - Project Portfolio Page","lastModifiedDate":"2025-09-25T12:49:51","isFullCredit":false}],"authorContributionMap":{"BenyAlbatross":1}},{"path":"docs/team/hongxun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"# Luo Hongxun - Project Portfolio Page","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"## Overview","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"Hello, World!\u003cbr\u003e","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"I work on implementing features for this project -- Bringing Internity to you :)","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"### Summary of Contributions","lastModifiedDate":"2025-09-25T13:05:40","isFullCredit":false}],"authorContributionMap":{"BestBearrr":7}},{"path":"docs/team/joannaJung.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Joannaj00"},"content":"# Joanna Jung - Project Portfolio Page","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Joannaj00"},"content":"## Overview","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Joannaj00"},"content":"- Major: Computer Science","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Joannaj00"},"content":"- School: Northwestern University","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Joannaj00"},"content":"### Summary of Contributions","lastModifiedDate":"2025-09-25T15:13:16","isFullCredit":false}],"authorContributionMap":{"Joannaj00":7}},{"path":"docs/team/lukeAidanTan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"# Luke Aidan Tan - Project Portfolio Page","lastModifiedDate":"2025-09-24T14:27:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-09-24T14:27:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"## Overview","lastModifiedDate":"2025-09-24T14:27:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"I am responsible for developing and maintaining core features of this project,","lastModifiedDate":"2025-09-24T14:27:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"ensuring code quality and contributing to team coordination.","lastModifiedDate":"2025-09-24T14:27:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-09-24T14:27:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"### Summary of Contributions","lastModifiedDate":"2025-09-24T14:27:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"#### Code Contributions","lastModifiedDate":"2025-09-24T14:27:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"- Features implemented","lastModifiedDate":"2025-09-24T14:27:01","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":9}},{"path":"src/main/java/internity/Internity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity;","lastModifiedDate":"2025-10-02T23:12:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import internity.cli.CommandParser;","lastModifiedDate":"2025-10-10T19:27:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.Command;","lastModifiedDate":"2025-10-04T15:08:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.Storage;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T15:08:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"public class Internity {","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BenyAlbatross"},"content":"    private static final String DEFAULT_STORAGE_PATH \u003d \"./data/internships.txt\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    public static void initInternity() {","lastModifiedDate":"2025-10-04T18:31:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BenyAlbatross"},"content":"        // Initialize storage","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BenyAlbatross"},"content":"        Storage storage \u003d new Storage(DEFAULT_STORAGE_PATH);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BenyAlbatross"},"content":"        InternshipList.setStorage(storage);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BenyAlbatross"},"content":"        // Load data from storage","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BenyAlbatross"},"content":"        try {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BenyAlbatross"},"content":"            InternshipList.loadFromStorage();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BenyAlbatross"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BenyAlbatross"},"content":"            System.out.println(\"Warning: Could not load data from storage. Starting with empty list.\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BenyAlbatross"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"        Ui.printGreeting(in.nextLine());","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2025-10-10T19:27:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T15:08:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"        while (!isExit \u0026\u0026 in.hasNextLine()) {","lastModifiedDate":"2025-10-02T23:12:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"            String input \u003d in.nextLine();","lastModifiedDate":"2025-10-04T15:08:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"            try {","lastModifiedDate":"2025-10-04T15:08:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"                Command command \u003d commandParser.parseInput(input);","lastModifiedDate":"2025-10-10T19:27:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"                command.execute();","lastModifiedDate":"2025-10-04T15:08:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2025-10-04T15:08:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BenyAlbatross"},"content":"                // Auto-save after each command execution","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BenyAlbatross"},"content":"                try {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BenyAlbatross"},"content":"                    InternshipList.saveToStorage();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BenyAlbatross"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BenyAlbatross"},"content":"                    System.out.println(\"Warning: Could not save data to storage.\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BenyAlbatross"},"content":"                    System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BenyAlbatross"},"content":"                }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-10-04T15:08:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-10-04T15:08:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"            }","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"        in.close();","lastModifiedDate":"2025-10-01T22:31:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"     * Main entry-point for the java.duke.Internity application.","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"        initInternity();","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":33,"BestBearrr":7,"BenyAlbatross":24}},{"path":"src/main/java/internity/cli/ArgumentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.cli;","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"import internity.commands.AddCommand;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.DeleteCommand;","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.ListCommand;","lastModifiedDate":"2025-10-13T21:51:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.UpdateCommand;","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"import internity.utils.DateFormatter;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":" * A utility class responsible for parsing command-line arguments for various commands","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":" * such as Add, Delete, Find, Update and List.","lastModifiedDate":"2025-10-21T23:15:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"public final class ArgumentParser {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"    private static final int ADD_COMMAND_PARTS \u003d 4;","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"    private static final int IDX_COMPANY \u003d 0;","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"    private static final int IDX_ROLE \u003d 1;","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"    private static final int IDX_DEADLINE \u003d 2;","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"    private static final int IDX_PAY \u003d 3;","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"    private static final Logger logger \u003d Logger.getLogger(ArgumentParser.class.getName());","lastModifiedDate":"2025-10-21T23:15:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T23:15:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"     * Private constructor to prevent instantiation of the ArgumentParser class.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"    private ArgumentParser() {","lastModifiedDate":"2025-10-13T19:51:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"     * Parses the arguments for Add Command to create an {@link AddCommand} instance.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"     * @param args arguments for {@link AddCommand}","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"     * @return an instance of {@link AddCommand} constructed from the parsed arguments.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"     * @throws InternityException if the arguments are missing or invalid.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"    public static AddCommand parseAddCommandArgs(String args) throws InternityException {","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"        if (args \u003d\u003d null || args.isBlank()) {","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"            throw InternityException.invalidAddCommand();","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"        assert !args.isBlank() : \"Arguments cannot be blank after validation\";","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"        try {","lastModifiedDate":"2025-10-13T19:59:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"            String[] parts \u003d args.split(\"\\\\s+(?\u003dcompany/|role/|deadline/|pay/)\");","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"            if (parts.length !\u003d ADD_COMMAND_PARTS ||","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"                    !parts[IDX_COMPANY].startsWith(\"company/\") ||","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"                    !parts[IDX_ROLE].startsWith(\"role/\") ||","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"                    !parts[IDX_DEADLINE].startsWith(\"deadline/\") ||","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"                    !parts[IDX_PAY].startsWith(\"pay/\")) {","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"                logger.severe(\"One or more arguments of Add command is in the wrong order.\");","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"                throw InternityException.invalidAddCommand();","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"            }","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-13T19:51:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"            logger.info(\"Successfully parsed 4 arguments of AddCommand.\");","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"            String company \u003d parts[IDX_COMPANY].substring(\"company/\".length()).trim();","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"            String role \u003d parts[IDX_ROLE].substring(\"role/\".length()).trim();","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"            Date deadline \u003d DateFormatter.parse(parts[IDX_DEADLINE].substring(\"deadline/\".length()).trim());","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"            int pay \u003d Integer.parseInt(parts[IDX_PAY].substring(\"pay/\".length()).trim());","lastModifiedDate":"2025-10-21T21:57:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"            // throw exception on empty input or invalid pay","lastModifiedDate":"2025-10-21T21:47:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"            if (company.isEmpty() || role.isEmpty() || pay \u003c 0) {","lastModifiedDate":"2025-10-13T20:10:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"                logger.severe(\"One or more arguments of Add command is empty or invalid.\");","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"                throw InternityException.invalidAddCommand();","lastModifiedDate":"2025-10-13T20:10:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"            }","lastModifiedDate":"2025-10-13T20:10:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"V1T0bh"},"content":"            // throw exception on exceeding max length","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"V1T0bh"},"content":"            if (company.length() \u003e InternshipList.COMPANY_MAXLEN ||","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"V1T0bh"},"content":"                    role.length() \u003e InternshipList.ROLE_MAXLEN) {","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"                logger.severe(\"One or more arguments exceeded max length.\");","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"V1T0bh"},"content":"                throw InternityException.invalidAddCommand();","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"V1T0bh"},"content":"            }","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"            return new AddCommand(company, role, deadline, pay);","lastModifiedDate":"2025-10-13T19:51:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BestBearrr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-10-13T19:59:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"            logger.severe(\"Error executing Add Command: \" + e.getMessage());","lastModifiedDate":"2025-10-22T23:17:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"            throw InternityException.invalidAddCommand();","lastModifiedDate":"2025-10-13T19:59:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-10-13T19:59:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BestBearrr"},"content":"     * Parses the arguments for Delete Command to create an {@link DeleteCommand} instance.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BestBearrr"},"content":"     * @param args arguments for {@link DeleteCommand}","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BestBearrr"},"content":"     * @return an instance of {@link DeleteCommand} constructed from the parsed arguments.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BestBearrr"},"content":"     * @throws InternityException if the arguments are missing or invalid.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"    public static DeleteCommand parseDeleteCommandArgs(String args) throws InternityException {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"        if (args \u003d\u003d null || args.isBlank()) {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidDeleteCommand();","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"        try {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"            int oneBasedIndex \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"            int zeroBasedIndex \u003d oneBasedIndex - 1;","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"            return new DeleteCommand(zeroBasedIndex);","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidInternshipIndex();","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BestBearrr"},"content":"     * Parses the arguments for Update Command to create an {@link UpdateCommand} instance.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BestBearrr"},"content":"     * @param args arguments for {@link UpdateCommand}","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BestBearrr"},"content":"     * @return an instance of {@link UpdateCommand} constructed from the parsed arguments.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BestBearrr"},"content":"     * @throws InternityException if the arguments are missing or invalid.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lukeai-tan"},"content":"    public static UpdateCommand parseUpdateCommandArgs(String args) throws InternityException {","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Joannaj00"},"content":"        String trimmed \u003d requireArgs(args);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Joannaj00"},"content":"        String[] idxAndTagged \u003d splitIndexAndTagged(trimmed);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Joannaj00"},"content":"        int index \u003d parseOneBasedIndex(idxAndTagged[0]);","lastModifiedDate":"2025-10-21T22:27:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Joannaj00"},"content":"        String tagged \u003d requireTagged(idxAndTagged[1]);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Joannaj00"},"content":"        String[] parts \u003d tagged.split(\"\\\\s+(?\u003dcompany/|role/|deadline/|pay/|status/)\");","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Joannaj00"},"content":"        String company \u003d null;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Joannaj00"},"content":"        String role \u003d null;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Joannaj00"},"content":"        Date deadline \u003d null;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Joannaj00"},"content":"        Integer pay \u003d null;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Joannaj00"},"content":"        String status \u003d null;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Joannaj00"},"content":"        try {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Joannaj00"},"content":"            for (String part : parts) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Joannaj00"},"content":"                String p \u003d part.trim();","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Joannaj00"},"content":"                if (p.isEmpty()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Joannaj00"},"content":"                    continue;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lukeai-tan"},"content":"                }","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Joannaj00"},"content":"                if (p.startsWith(\"company/\")) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Joannaj00"},"content":"                    company \u003d valueAfterTag(p, \"company/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Joannaj00"},"content":"                    if (company.isEmpty()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Joannaj00"},"content":"                        throw InternityException.emptyField(\"company/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Joannaj00"},"content":"                    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Joannaj00"},"content":"                } else if (p.startsWith(\"role/\")) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Joannaj00"},"content":"                    role \u003d valueAfterTag(p, \"role/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Joannaj00"},"content":"                    if (role.isEmpty()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Joannaj00"},"content":"                        throw InternityException.emptyField(\"role/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Joannaj00"},"content":"                    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Joannaj00"},"content":"                } else if (p.startsWith(\"deadline/\")) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Joannaj00"},"content":"                    String d \u003d valueAfterTag(p, \"deadline/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Joannaj00"},"content":"                    deadline \u003d DateFormatter.parse(d);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Joannaj00"},"content":"                } else if (p.startsWith(\"pay/\")) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Joannaj00"},"content":"                    String payStr \u003d valueAfterTag(p, \"pay/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Joannaj00"},"content":"                    int payVal \u003d Integer.parseInt(payStr);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Joannaj00"},"content":"                    if (payVal \u003c 0) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Joannaj00"},"content":"                        throw new NumberFormatException();","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Joannaj00"},"content":"                    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Joannaj00"},"content":"                    pay \u003d payVal;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Joannaj00"},"content":"                } else if (p.startsWith(\"status/\")) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Joannaj00"},"content":"                    status \u003d valueAfterTag(p, \"status/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Joannaj00"},"content":"                    if (status.isEmpty()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Joannaj00"},"content":"                        throw InternityException.emptyField(\"status/\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Joannaj00"},"content":"                    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Joannaj00"},"content":"                } else {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Joannaj00"},"content":"                    throw InternityException.unknownUpdateField(p);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Joannaj00"},"content":"                }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Joannaj00"},"content":"            }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Joannaj00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidPayFormat();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Joannaj00"},"content":"        if (company \u003d\u003d null \u0026\u0026 role \u003d\u003d null \u0026\u0026 deadline \u003d\u003d null \u0026\u0026 pay \u003d\u003d null \u0026\u0026 status \u003d\u003d null) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.noUpdateFieldsProvided();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Joannaj00"},"content":"        return new UpdateCommand(index, company, role, deadline, pay, status);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BestBearrr"},"content":"     * Parses the arguments for List Command to create an {@link ListCommand} instance.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BestBearrr"},"content":"     * @param args arguments for {@link ListCommand}","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BestBearrr"},"content":"     * @return an instance of ListCommand constructed from the parsed arguments.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BestBearrr"},"content":"     *      Returns a default ListCommand if no arguments are provided.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BestBearrr"},"content":"     * @throws InternityException if the arguments are missing or invalid.","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-21T21:28:40","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lukeai-tan"},"content":"    public static ListCommand parseListCommandArgs(String args) throws InternityException {","lastModifiedDate":"2025-10-13T21:51:16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"V1T0bh"},"content":"        if (args \u003d\u003d null || args.isBlank()) {","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"V1T0bh"},"content":"            return new ListCommand(ListCommand.orderType.DEFAULT); // Default order","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"V1T0bh"},"content":"        if (!args.startsWith(\"sort/\")) {","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"V1T0bh"},"content":"            throw InternityException.invalidListCommand();","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"V1T0bh"},"content":"        String[] splitArgs \u003d args.split(\"\\\\s+sort/\");","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"V1T0bh"},"content":"        if (splitArgs.length \u003e 1) {","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"V1T0bh"},"content":"            throw InternityException.invalidListCommand();","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"V1T0bh"},"content":"        String order \u003d splitArgs[0].substring(\"sort/\".length()).trim();","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"V1T0bh"},"content":"        if (order.equals(\"asc\")) {","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"V1T0bh"},"content":"            return new ListCommand(ListCommand.orderType.ASCENDING);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"V1T0bh"},"content":"        } else if (order.equals(\"desc\")) {","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"V1T0bh"},"content":"            return new ListCommand(ListCommand.orderType.DESCENDING);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"V1T0bh"},"content":"        } else {","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"V1T0bh"},"content":"            throw InternityException.invalidListCommand();","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-13T21:51:16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Joannaj00"},"content":"    private static String requireArgs(String args) throws InternityException {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Joannaj00"},"content":"        if (args \u003d\u003d null || args.isBlank()) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidUpdateFormat();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Joannaj00"},"content":"        return args.trim();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Joannaj00"},"content":"    private static String requireTagged(String tagged) throws InternityException {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Joannaj00"},"content":"        if (tagged.isBlank()) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.noUpdateFieldsProvided();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Joannaj00"},"content":"        return tagged;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Joannaj00"},"content":"    private static String[] splitIndexAndTagged(String trimmed) throws InternityException {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Joannaj00"},"content":"        int firstSpace \u003d trimmed.indexOf(\u0027 \u0027);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Joannaj00"},"content":"        if (firstSpace \u003c 0) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidUpdateFormat();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Joannaj00"},"content":"        String indexToken \u003d trimmed.substring(0, firstSpace).trim();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Joannaj00"},"content":"        String tagged \u003d trimmed.substring(firstSpace + 1).trim();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Joannaj00"},"content":"        return new String[] { indexToken, tagged };","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Joannaj00"},"content":"    private static int parseOneBasedIndex(String indexToken) throws InternityException {","lastModifiedDate":"2025-10-21T22:27:48","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Joannaj00"},"content":"        try {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Joannaj00"},"content":"            return Integer.parseInt(indexToken) - 1;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Joannaj00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidIndexForUpdate();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Joannaj00"},"content":"    private static String valueAfterTag(String token, String tag) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Joannaj00"},"content":"        return token.substring(tag.length()).trim();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-11T15:09:18","isFullCredit":false}],"authorContributionMap":{"Joannaj00":94,"lukeai-tan":30,"BestBearrr":88,"V1T0bh":30}},{"path":"src/main/java/internity/cli/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.cli;","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.CommandFactory;","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.Command;","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * Parses raw user input into executable {@link Command} objects. \u003cbr\u003e","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" * The {@code CommandParser} is responsible for identifying the command keyword,","lastModifiedDate":"2025-10-10T19:27:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" * validating the input and constructing the instance of the","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" * corresponding command.","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003eSupported commands include:","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":" *      \u003cli\u003e{@code exit} - exits the program\u003c/li\u003e","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-04T16:16:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"public class CommandParser {","lastModifiedDate":"2025-10-10T19:27:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    private static final Logger logger \u003d Logger.getLogger(CommandParser.class.getName());","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    static {","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     * Parses the given input string and returns the corresponding {@link Command}. \u003cbr\u003e","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     * The first token (before the first space) is treated as the command keyword.","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"     * @param input raw user input","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"     * @return a {@link Command} corresponding to the input","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"     * @throws InternityException if input is null or blank or unknown command is entered","lastModifiedDate":"2025-10-04T19:04:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"    public Command parseInput(String input) throws InternityException {","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        if (input \u003d\u003d null || input.isBlank()) {","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidInput();","lastModifiedDate":"2025-10-04T19:04:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"        assert !input.isBlank() : \"Input should not be blank after validation\";","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        String[] parts \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"        assert parts.length \u003e\u003d 1 : \"Splitting input should result in at least one part\";","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        String commandWord \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        logger.fine(() -\u003e \"Parsed command: \\\"\" + commandWord + \"\\\" with args: \\\"\" + args + \"\\\"\");","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"        assert !commandWord.isBlank() : \"Command keyword must not be blank\";","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"        assert args !\u003d null : \"Args should never be null (may be empty string)\";","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"        CommandFactory commandFactory \u003d new CommandFactory();","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandFactory.createCommand(commandWord, args);","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"        logger.fine(() -\u003e \"Parsed command: \\\"\" + commandWord + \"\\\" with args: \\\"\" + args + \"\\\"\");","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"        assert command !\u003d null : \"CommandFactory should never return null command\";","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"            logger.severe(\"CommandFactory returned null for command: \" + commandWord);","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.unknownCommand(commandWord);","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"        logger.info(() -\u003e \"Successfully created command: \" + command.getClass().getSimpleName());","lastModifiedDate":"2025-10-15T23:06:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"        return command;","lastModifiedDate":"2025-10-15T11:52:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":68}},{"path":"src/main/java/internity/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package internity.commands;","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":" * Represents a command that adds a new {@link Internship} entry to the {@link InternshipList}.","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":" * The command parses a user input string in the following format:","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":" *     add company/COMPANY_NAME role/ROLE_NAME deadline/DD-MM-YYYY pay/PAY_AMOUNT","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":" * Example:","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":" *     add company/Google role/Software Engineer deadline/17-09-2025 pay/120000","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":" *","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":" * Each field is parsed and validated before creating a new {@link Internship} object.","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"    private static final Logger logger \u003d Logger.getLogger(AddCommand.class.getName());","lastModifiedDate":"2025-10-21T21:36:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T21:36:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"    private final String company;","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"    private final String role;","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"    private final Date deadline;","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"    private final int pay;","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"     * Constructs an {@code AddCommand} with the specified internship details.","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"     * @param company  the name of the company offering the internship","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"     * @param role     the internship role or position","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"     * @param deadline the application deadline for the internship","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"     * @param pay      the monthly pay or stipend for the internship","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"    public AddCommand(String company, String role, Date deadline, int pay) {","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"        this.company \u003d company;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"        this.role \u003d role;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"        this.pay \u003d pay;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"     * Executes the add command by creating a new {@link Internship} object and","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"     * adding it to the global static {@link InternshipList}.","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"     * Once added, the {@link Ui} class is used to show a confirmation message.","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"     * @throws InternityException if an error occurs.","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"    public void execute() throws InternityException {","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"        logger.info(\"Executing add command\");","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"        Internship internship \u003d new Internship(company, role, deadline, pay);","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"        InternshipList.add(internship);","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"        Ui.printAddInternship(internship);","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"        logger.info(\"Add command executed successfully.\");","lastModifiedDate":"2025-10-21T21:17:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T17:30:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"     * This command will not terminate the application.","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"     * @return {@code false}","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T17:54:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"        return false;","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-10-11T17:28:25","isFullCredit":false}],"authorContributionMap":{"BestBearrr":78}},{"path":"src/main/java/internity/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-02T23:12:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":" * Represents an abstract command in the system. \u003cbr\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":" * Each user instruction (e.g. {@code add}, {@code delete}, {@code list})","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":" * is encapsulated as a {@code Command} object that defines specific behavior.","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003eSubclasses must implement:","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" *     \u003cli\u003e{@link #execute()} - performs the action defined by the command\u003c/li\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" *     \u003cli\u003e{@link #isExit()} - indicates whether the command ends the program\u003c/li\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003eThis design follows the \u003cb\u003eCommand Pattern\u003c/b\u003e,","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":" * allowing user inputs to be decoupled from their execution logic.\u003c/p\u003e","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"public abstract class Command {","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"     * Executes the action associated with this command.","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BenyAlbatross"},"content":"    public abstract void execute() throws InternityException;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"     * Determines whether this command signals program termination.","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     * @return {@code true} if the command exits the program, {@code false} otherwise","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":29,"BenyAlbatross":3}},{"path":"src/main/java/internity/commands/CommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import internity.cli.ArgumentParser;","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"public class CommandFactory {","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"    public Command createCommand(String commandWord, String args) throws InternityException {","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"        case \"add\":","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"            return ArgumentParser.parseAddCommandArgs(args);","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"        case \"delete\":","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"            return ArgumentParser.parseDeleteCommandArgs(args);","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"        case \"update\":","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"            return ArgumentParser.parseUpdateCommandArgs(args);","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"        case \"list\":","lastModifiedDate":"2025-10-13T21:50:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"            return ArgumentParser.parseListCommandArgs(args);","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"        case \"exit\":","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"        default:","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.unknownCommand(commandWord);","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-11T15:09:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-10T19:20:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":19,"BestBearrr":2,"V1T0bh":2}},{"path":"src/main/java/internity/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenyAlbatross"},"content":"package internity.commands;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BenyAlbatross"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BenyAlbatross"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BenyAlbatross"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BenyAlbatross"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteCommand.class.getName());","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BenyAlbatross"},"content":"    private final int index;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BenyAlbatross"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BenyAlbatross"},"content":"    @Override","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BenyAlbatross"},"content":"    public void execute() throws InternityException {","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BenyAlbatross"},"content":"        logger.info(\"Executing delete command for index: \" + index);","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BenyAlbatross"},"content":"        // Get the internship before deleting to display its info","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"        Internship internship \u003d InternshipList.get(index);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BenyAlbatross"},"content":"        String internshipInfo \u003d internship.getCompany() + \" - \" + internship.getRole();","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BenyAlbatross"},"content":"        // Assertion for internshipInfo not required here as strong concatenation will always be true","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BenyAlbatross"},"content":"        logger.fine(\"Retrieved internship: \" + internshipInfo);","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BenyAlbatross"},"content":"        // Delete the internship","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.delete(index);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BenyAlbatross"},"content":"        // Get the new size after deletion","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"        int totalItems \u003d InternshipList.size();","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BenyAlbatross"},"content":"        assert totalItems \u003e\u003d 0 : \"Size cannot be negative after deletion\";","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BenyAlbatross"},"content":"        // Print the removal message","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BenyAlbatross"},"content":"        Ui.printRemoveInternship(internshipInfo, totalItems);","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BenyAlbatross"},"content":"        logger.info(\"Delete command executed successfully. Remaining items: \" + totalItems);","lastModifiedDate":"2025-10-22T19:46:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BenyAlbatross"},"content":"    @Override","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BenyAlbatross"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BenyAlbatross"},"content":"        return false;","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BenyAlbatross"},"content":"}","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":4,"BenyAlbatross":44}},{"path":"src/main/java/internity/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-18T20:50:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:50:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":" * Represents the {@code exit} command, which terminates the program.","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":" * When executed, it prints an exit message and signals that the","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" * program should exit.","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003eUsage: {@code exit}\u003c/p\u003e","lastModifiedDate":"2025-10-04T16:17:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"     * Executes the {@code exit} command.","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"     * Prints an exit message.","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"    @Override","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    public void execute() {","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        Ui.printExit();","lastModifiedDate":"2025-10-18T20:50:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"     * Indicates that this command terminates the program","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     * @return always {@code true}","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-04T15:14:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"    @Override","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"        return true;","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-04T14:56:11","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":35}},{"path":"src/main/java/internity/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package internity.commands;","lastModifiedDate":"2025-10-13T20:00:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:00:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-16T19:19:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-16T19:19:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":" * Represents a command that lists all internship applications","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":" * as a formatted table","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":" * \u003cbr\u003e","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":" * Command format:","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":" * {@code list [sort/asc|sort/desc]}","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-10-13T20:26:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"    public enum orderType {","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":"        DEFAULT,","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"        ASCENDING,","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":"        DESCENDING","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":"    private static final Logger logger \u003d Logger.getLogger(ListCommand.class.getName());","lastModifiedDate":"2025-10-16T19:19:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":"    orderType order;","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"    public ListCommand(orderType o) {","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"        order \u003d o;","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"     * Executes the {@code list} command.","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"     * Prints a formatted table with all internship applications.","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"    @Override","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"    public void execute() throws InternityException {","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"        logger.info(\"Executing list command\");","lastModifiedDate":"2025-10-16T19:19:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.listAll(order);","lastModifiedDate":"2025-10-20T21:32:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"        logger.info(\"List command executed successfully.\");","lastModifiedDate":"2025-10-16T19:19:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"    @Override","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"        return false;","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:08:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-10-13T20:00:32","isFullCredit":false}],"authorContributionMap":{"V1T0bh":46}},{"path":"src/main/java/internity/commands/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joannaj00"},"content":"package internity.commands;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Joannaj00"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Joannaj00"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-10T02:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Joannaj00"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Joannaj00"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":"/**","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Joannaj00"},"content":" * Represents a command that updates one or more fields of an existing internship entry","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Joannaj00"},"content":" * in the {@link InternshipList}.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Joannaj00"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Joannaj00"},"content":" * The command parses a user input string in the following format:","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Joannaj00"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Joannaj00"},"content":" *     update INDEX [company/COMPANY_NAME] [role/ROLE_NAME] [deadline/DD-MM-YYYY] [pay/PAY_AMOUNT] [status/NEW_STATUS]","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Joannaj00"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Joannaj00"},"content":" * Example:","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Joannaj00"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Joannaj00"},"content":" *     update 1 company/Google role/Software Engineer pay/9000 status/Accepted","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Joannaj00"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Joannaj00"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Joannaj00"},"content":" *","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Joannaj00"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Joannaj00"},"content":" * Each provided field will be validated and isUpdated in the corresponding internship entry.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Joannaj00"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Joannaj00"},"content":" */","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Joannaj00"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Joannaj00"},"content":"    private final int index;     ","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Joannaj00"},"content":"    private final String company;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Joannaj00"},"content":"    private final String role;    ","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Joannaj00"},"content":"    private final Date deadline;   ","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Joannaj00"},"content":"    private final Integer pay;   ","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Joannaj00"},"content":"    private final String status;   ","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Joannaj00"},"content":"    /**","lastModifiedDate":"2025-10-10T02:20:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Joannaj00"},"content":"     * Constructs an {@code UpdateCommand} that updates one or more internship fields.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Joannaj00"},"content":"     * @param index    the index of the internship to be isUpdated (0-based)","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Joannaj00"},"content":"     * @param company  the new company name, or {@code null} if unchanged","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Joannaj00"},"content":"     * @param role     the new role, or {@code null} if unchanged","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Joannaj00"},"content":"     * @param deadline the new application deadline, or {@code null} if unchanged","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Joannaj00"},"content":"     * @param pay      the new pay amount, or {@code null} if unchanged","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Joannaj00"},"content":"     * @param status   the new internship status, or {@code null} if unchanged","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Joannaj00"},"content":"     */","lastModifiedDate":"2025-10-10T02:20:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Joannaj00"},"content":"    public UpdateCommand(int index, String company, String role, Date deadline, Integer pay, String status) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-10-11T15:11:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Joannaj00"},"content":"        this.company \u003d company;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Joannaj00"},"content":"        this.role \u003d role;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Joannaj00"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Joannaj00"},"content":"        this.pay \u003d pay;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Joannaj00"},"content":"        this.status \u003d status;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Joannaj00"},"content":"    /**","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Joannaj00"},"content":"     * Constructs a simplified {@code UpdateCommand} that only updates the internship status.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Joannaj00"},"content":"     * @param index     the index of the internship to be isUpdated (0-based)","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Joannaj00"},"content":"     * @param newStatus the new internship status","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Joannaj00"},"content":"     */","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Joannaj00"},"content":"    public UpdateCommand(int index, String newStatus) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Joannaj00"},"content":"        this(index, null, null, null, null, newStatus);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Joannaj00"},"content":"    /**","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Joannaj00"},"content":"     * Executes the update command by applying each provided field update to the specified internship.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Joannaj00"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Joannaj00"},"content":"     * Each non-null parameter will trigger a corresponding update in {@link InternshipList}.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Joannaj00"},"content":"     * If no valid fields are provided, an {@link InternityException} will be thrown.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Joannaj00"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Joannaj00"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Joannaj00"},"content":"     * After performing the update, a confirmation message is displayed through {@link Ui#printUpdateInternship()}.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Joannaj00"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Joannaj00"},"content":"     * @throws InternityException if the index is invalid or no fields are provided.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Joannaj00"},"content":"     */","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Joannaj00"},"content":"    @Override","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"    public void execute() throws InternityException {","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Joannaj00"},"content":"        boolean isUpdated \u003d false; ","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Joannaj00"},"content":"        if (company !\u003d null) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Joannaj00"},"content":"            InternshipList.updateCompany(index, company);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Joannaj00"},"content":"            isUpdated \u003d true;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Joannaj00"},"content":"        if (role !\u003d null) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Joannaj00"},"content":"            InternshipList.updateRole(index, role);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Joannaj00"},"content":"            isUpdated \u003d true;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Joannaj00"},"content":"        if (deadline !\u003d null) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Joannaj00"},"content":"            InternshipList.updateDeadline(index, deadline);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Joannaj00"},"content":"            isUpdated \u003d true;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Joannaj00"},"content":"        if (pay !\u003d null) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Joannaj00"},"content":"            InternshipList.updatePay(index, pay);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Joannaj00"},"content":"            isUpdated \u003d true;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Joannaj00"},"content":"        if (status !\u003d null) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Joannaj00"},"content":"            InternshipList.updateStatus(index, status);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Joannaj00"},"content":"            isUpdated \u003d true;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Joannaj00"},"content":"        if (!isUpdated) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Joannaj00"},"content":"            throw new InternityException(","lastModifiedDate":"2025-10-21T01:23:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Joannaj00"},"content":"                \"Provide at least one field to update: company/, role/, deadline/, pay/, status/\"","lastModifiedDate":"2025-10-21T01:23:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Joannaj00"},"content":"            );","lastModifiedDate":"2025-10-21T01:23:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Joannaj00"},"content":"        Ui.printUpdateInternship();","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Joannaj00"},"content":"    /**","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Joannaj00"},"content":"     * This command will not terminate the application.","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Joannaj00"},"content":"     * @return {@code false}","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Joannaj00"},"content":"     */","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Joannaj00"},"content":"    @Override","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Joannaj00"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Joannaj00"},"content":"        return false;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Joannaj00"},"content":"}","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false}],"authorContributionMap":{"Joannaj00":115,"lukeai-tan":2}},{"path":"src/main/java/internity/core/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.core;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"public class Date implements Comparable\u003cDate\u003e {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"    private int day;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"    private int month;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"    private int year;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"    public Date(int day, int month, int year) {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"        this.day \u003d day;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"        this.month \u003d month;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"        this.year \u003d year;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    public int getMonth() {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"        return month;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"    public void setMonth(int month) {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"        this.month \u003d month;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    public int getDay() {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        return day;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    public void setDay(int day) {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"        this.day \u003d day;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"    public int getYear() {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"        return year;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"    public void setYear(int year) {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"        this.year \u003d year;","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"    @Override","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"    public int compareTo(Date other) {","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"        if (this.year !\u003d other.year) {","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"            return this.year - other.year;","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"        if (this.month !\u003d other.month) {","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"            return this.month - other.month;","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"        return this.day - other.day;","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"    @Override","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"    public String toString() {","lastModifiedDate":"2025-10-08T19:22:11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"        return String.format(\"%02d-%02d-%04d\", day, month, year);","lastModifiedDate":"2025-10-09T11:08:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-08T19:16:05","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":53}},{"path":"src/main/java/internity/core/InternityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.core;","lastModifiedDate":"2025-10-04T17:42:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T17:42:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":" * Represents custom exceptions used throughout the Internity application.","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":" *","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":" * This class extends {@code Exception} and provides static methods that create a specific","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":" * exception message for common error conditions such as invalid input or unknown commands.","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-04T19:06:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"public class InternityException extends Exception {","lastModifiedDate":"2025-10-04T17:42:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"    public InternityException(String message) {","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"        super(message);","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T17:42:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException invalidInput() {","lastModifiedDate":"2025-10-04T19:04:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"        return new InternityException(\"Input cannot be null or blank\");","lastModifiedDate":"2025-10-04T19:04:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-04T19:04:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-04T19:04:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException unknownCommand(String message) {","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"        return new InternityException(\"Unknown command: \" + message);","lastModifiedDate":"2025-10-04T19:16:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-04T18:30:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:40:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException invalidDateFormat() {","lastModifiedDate":"2025-10-08T22:40:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"        return new InternityException(\"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\");","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:40:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-10T18:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"    public static InternityException invalidAddCommand() {","lastModifiedDate":"2025-10-11T17:51:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"        return new InternityException(\"Invalid add command. Usage: add company/COMPANY_NAME\" +","lastModifiedDate":"2025-10-11T17:51:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"                \" role/ROLE_NAME deadline/DEADLINE pay/PAY_AMOUNT\");","lastModifiedDate":"2025-10-11T17:51:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T17:51:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T17:51:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException invalidDeleteCommand() {","lastModifiedDate":"2025-10-10T18:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"        return new InternityException(\"Invalid delete command. Usage: delete INDEX\");","lastModifiedDate":"2025-10-10T18:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-10T18:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException invalidInternshipIndex() {","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"        return new InternityException(\"Invalid internship index.\");","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-13T21:50:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"    public static InternityException invalidListCommand() {","lastModifiedDate":"2025-10-13T21:50:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"        return new InternityException(\"Invalid list command. Usage: list [sort/asc|sort/desc]\");","lastModifiedDate":"2025-10-20T21:31:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-13T21:50:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException invalidUpdateFormat() {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Joannaj00"},"content":"                \"Invalid update command format. Use: update INDEX field/VALUE ...\"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Joannaj00"},"content":"        );","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException noUpdateFieldsProvided() {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Joannaj00"},"content":"                \"Provide at least one field to update: company/, role/, deadline/, pay/, status/\"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Joannaj00"},"content":"        );","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException emptyField(String tag) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(tag + \" cannot be empty\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException invalidIndexForUpdate() {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Joannaj00"},"content":"                \"Invalid index. Use a positive integer, for example: update 1 company/Google\"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Joannaj00"},"content":"        );","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException invalidPayFormat() {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(\"Invalid pay. Use a whole number (example: pay/8000)\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException unknownUpdateField(String token) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Joannaj00"},"content":"                \"Unknown update field in \\\"\" + token","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Joannaj00"},"content":"                + \"\\\". Allowed: company, role, deadline, pay, status\"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Joannaj00"},"content":"        );","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Joannaj00"},"content":"    public static InternityException invalidStatus(String value) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Joannaj00"},"content":"        return new InternityException(","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Joannaj00"},"content":"                \"Invalid status \\\"\" + value","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Joannaj00"},"content":"                + \"\\\". Allowed: Pending, Interested, Applied, Interviewing, Offer, Accepted, Rejected\"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Joannaj00"},"content":"        );","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-04T17:42:39","isFullCredit":false}],"authorContributionMap":{"Joannaj00":41,"lukeai-tan":38,"BestBearrr":5,"V1T0bh":1}},{"path":"src/main/java/internity/core/Internship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.core;","lastModifiedDate":"2025-10-02T23:12:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BenyAlbatross"},"content":"import java.util.Set;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":"public class Internship implements Comparable\u003cInternship\u003e {","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BenyAlbatross"},"content":"    public static Comparator\u003cInternship\u003e SortByDeadline;","lastModifiedDate":"2025-10-22T19:15:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BenyAlbatross"},"content":"    private static final Set\u003cString\u003e VALID_STATUSES \u003d Set.of(","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BenyAlbatross"},"content":"            \"Pending\", \"Interested\", \"Applied\", \"Interviewing\", \"Offer\", \"Accepted\", \"Rejected\"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BenyAlbatross"},"content":"    );","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"    private String company;","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"    private String role;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"    private Date deadline;","lastModifiedDate":"2025-10-08T19:22:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    private int pay;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Joannaj00"},"content":"    private String status;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"    public Internship(String company, String role, Date deadline, int pay) {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"        this.company \u003d company;","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"        this.role \u003d role;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"        this.pay \u003d pay;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Joannaj00"},"content":"        this.status \u003d \"Pending\";","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"    public String getCompany() {","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"        return company;","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"    public void setCompany(String company) {","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"        this.company \u003d company;","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"    public String getRole() {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"        return role;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"    public void setRole(String role) {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"        this.role \u003d role;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"    public Date getDeadline() {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        return deadline;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"    public void setDeadline(Date deadline) {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"    public int getPay() {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"        return pay;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"    public void setPay(int pay) {","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"        this.pay \u003d pay;","lastModifiedDate":"2025-10-08T19:29:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Joannaj00"},"content":"    public String getStatus() {","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Joannaj00"},"content":"        return status;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Joannaj00"},"content":"    public void setStatus(String status) {","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Joannaj00"},"content":"        this.status \u003d status;","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"V1T0bh"},"content":"    @Override","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"V1T0bh"},"content":"    public int compareTo(Internship o) {","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"V1T0bh"},"content":"        return this.deadline.compareTo(o.getDeadline());","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"V1T0bh"},"content":"    public static class SortByDeadline implements Comparator\u003cInternship\u003e {","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"V1T0bh"},"content":"        public int compare(Internship a, Internship b) {","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"V1T0bh"},"content":"            return a.getDeadline().compareTo(b.getDeadline());","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T17:53:10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BenyAlbatross"},"content":"     * Checks if the given status is valid.","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BenyAlbatross"},"content":"     * @param status The status to validate.","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BenyAlbatross"},"content":"     * @return true if the status is valid, false otherwise.","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BenyAlbatross"},"content":"    public static boolean isValidStatus(String status) {","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BenyAlbatross"},"content":"        return status !\u003d null \u0026\u0026 VALID_STATUSES.contains(status);","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-01T19:34:40","isFullCredit":false}],"authorContributionMap":{"Joannaj00":10,"lukeai-tan":45,"BenyAlbatross":17,"V1T0bh":13}},{"path":"src/main/java/internity/core/InternshipList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package internity.core;","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Joannaj00"},"content":"import internity.commands.ListCommand;","lastModifiedDate":"2025-10-21T21:30:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":"import internity.ui.Ui;","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":"public class InternshipList {","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":"    public static final int INDEX_MAXLEN \u003d 5;","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":"    public static final int COMPANY_MAXLEN \u003d 15;","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":"    public static final int ROLE_MAXLEN \u003d 30;","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":"    public static final int DEADLINE_MAXLEN \u003d 15;","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"    public static final int PAY_MAXLEN \u003d 10;","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"    public static final int STATUS_MAXLEN \u003d 10;","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:00:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"    private static final Logger logger \u003d Logger.getLogger(InternshipList.class.getName());","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"    private static final ArrayList\u003cInternship\u003e List \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BenyAlbatross"},"content":"    private static Storage storage;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    private InternshipList() {}","lastModifiedDate":"2025-10-18T20:46:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BenyAlbatross"},"content":"     * Sets the storage instance for auto-saving.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BenyAlbatross"},"content":"     * @param storageInstance The storage instance to use for persistence.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BenyAlbatross"},"content":"    public static void setStorage(Storage storageInstance) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BenyAlbatross"},"content":"        storage \u003d storageInstance;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BenyAlbatross"},"content":"     * Loads internships from storage.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BenyAlbatross"},"content":"     * @throws InternityException If there is an error loading from storage.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BenyAlbatross"},"content":"    public static void loadFromStorage() throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BenyAlbatross"},"content":"        if (storage \u003d\u003d null) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BenyAlbatross"},"content":"            return;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e loadedInternships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BenyAlbatross"},"content":"        List.clear();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BenyAlbatross"},"content":"        List.addAll(loadedInternships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BenyAlbatross"},"content":"     * Saves internships to storage.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BenyAlbatross"},"content":"     * @throws InternityException If there is an error saving to storage.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BenyAlbatross"},"content":"    public static void saveToStorage() throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BenyAlbatross"},"content":"        if (storage \u003d\u003d null) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BenyAlbatross"},"content":"            return;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(List);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"    public static void add(Internship item) {","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"V1T0bh"},"content":"        List.add(item);","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"    public static void delete(int index) throws InternityException {","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BenyAlbatross"},"content":"        if (index \u003c 0 || index \u003e\u003d List.size()) {","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"            throw new InternityException(\"Invalid internship index: \" + (index + 1));","lastModifiedDate":"2025-10-13T21:50:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BenyAlbatross"},"content":"        List.remove(index);","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"    public static Internship get(int index) throws InternityException {","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BenyAlbatross"},"content":"        if (index \u003c 0 || index \u003e\u003d List.size()) {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"            throw new InternityException(\"Invalid internship index: \" + (index + 1));","lastModifiedDate":"2025-10-13T21:50:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"V1T0bh"},"content":"        return List.get(index);","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"    public static int size() {","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BenyAlbatross"},"content":"        return List.size();","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"V1T0bh"},"content":"    public static void sortInternships(ListCommand.orderType order) {","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"V1T0bh"},"content":"        if (order \u003d\u003d ListCommand.orderType.DESCENDING) {","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"V1T0bh"},"content":"            List.sort(Comparator.comparing(Internship::getDeadline).reversed());","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"V1T0bh"},"content":"        } else if (order \u003d\u003d ListCommand.orderType.ASCENDING) {","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"V1T0bh"},"content":"            List.sort(Comparator.comparing(Internship::getDeadline));","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"V1T0bh"},"content":"    // list all","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"V1T0bh"},"content":"    public static void listAll(ListCommand.orderType order) throws InternityException {","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"V1T0bh"},"content":"        logger.info(\"Listing all internships\");","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:00:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"V1T0bh"},"content":"        String formatHeader \u003d \"%\" + INDEX_MAXLEN  + \"s %-\" + COMPANY_MAXLEN + \"s %-\" + ROLE_MAXLEN","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"V1T0bh"},"content":"                + \"s %-\" + DEADLINE_MAXLEN + \"s %-\" + PAY_MAXLEN + \"s %-\" + STATUS_MAXLEN + \"s%n\";","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"V1T0bh"},"content":"        String formatContent \u003d \"%\" + INDEX_MAXLEN  + \"d %-\" + COMPANY_MAXLEN + \"s %-\" + ROLE_MAXLEN","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"V1T0bh"},"content":"                + \"s %-\" + DEADLINE_MAXLEN + \"s %-\" + PAY_MAXLEN + \"d %-\" + STATUS_MAXLEN + \"s%n\";","lastModifiedDate":"2025-10-20T20:18:10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:00:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T20:00:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"V1T0bh"},"content":"        if (InternshipList.isEmpty()) {","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"V1T0bh"},"content":"            logger.warning(\"No internships found to list\");","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"No internships found. Please add an internship first.\");","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"V1T0bh"},"content":"            assert (size() \u003d\u003d 0) : \"Internship list should be empty\";","lastModifiedDate":"2025-10-16T16:41:35","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"V1T0bh"},"content":"            return;","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"V1T0bh"},"content":"        assert (size() \u003e 0) : \"Internship list should not be empty\";","lastModifiedDate":"2025-10-16T16:41:35","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"V1T0bh"},"content":"        sortInternships(order);","lastModifiedDate":"2025-10-20T21:59:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"V1T0bh"},"content":"        System.out.printf(formatHeader,","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"V1T0bh"},"content":"                \"No.\", \"Company\", \"Role\", \"Deadline\", \"Pay\", \"Status\");","lastModifiedDate":"2025-10-13T19:59:29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"V1T0bh"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2025-10-13T19:59:29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"V1T0bh"},"content":"        int i;","lastModifiedDate":"2025-10-16T16:41:35","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"V1T0bh"},"content":"        for (i \u003d 0; i \u003c InternshipList.size(); i++) {","lastModifiedDate":"2025-10-16T16:41:35","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"V1T0bh"},"content":"            Internship internship \u003d InternshipList.get(i);","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"V1T0bh"},"content":"            logger.fine(\"Listing internship at index: \" + i);","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"V1T0bh"},"content":"            System.out.printf(formatContent,","lastModifiedDate":"2025-10-20T20:07:37","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"V1T0bh"},"content":"                    i + 1,","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"V1T0bh"},"content":"                    internship.getCompany(),","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"V1T0bh"},"content":"                    internship.getRole(),","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"V1T0bh"},"content":"                    internship.getDeadline().toString(),","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"V1T0bh"},"content":"                    internship.getPay(),","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"V1T0bh"},"content":"                    internship.getStatus()","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"V1T0bh"},"content":"            );","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"V1T0bh"},"content":"        logger.info(\"Finished listing internships. Total: \" + i);","lastModifiedDate":"2025-10-16T16:42:53","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"V1T0bh"},"content":"        assert (i \u003d\u003d size()) : \"All internships should be listed\";","lastModifiedDate":"2025-10-16T16:41:35","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"V1T0bh"},"content":"    private static boolean isEmpty() {","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"V1T0bh"},"content":"        return List.isEmpty();","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:42:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lukeai-tan"},"content":"    public static void updateStatus(int index, String newStatus) throws InternityException {","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Joannaj00"},"content":"        if (index \u003c 0 || index \u003e\u003d size()) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidInternshipIndex();","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Joannaj00"},"content":"        if (newStatus \u003d\u003d null || !Status.isValid(newStatus)) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidStatus(String.valueOf(newStatus));","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Joannaj00"},"content":"        final String normalized \u003d Status.canonical(newStatus);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Joannaj00"},"content":"        Internship internship \u003d List.get(index);","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Joannaj00"},"content":"        internship.setStatus(normalized);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Joannaj00"},"content":"        System.out.println(\"Updated internship \" + (index + 1) + \" status to: \" + normalized);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Joannaj00"},"content":"    public static void updateCompany(int index, String newCompany) throws InternityException {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Joannaj00"},"content":"        if (index \u003c 0 || index \u003e\u003d size()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidInternshipIndex();","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Joannaj00"},"content":"        Internship it \u003d List.get(index);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Joannaj00"},"content":"        it.setCompany(newCompany);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Joannaj00"},"content":"        System.out.println(\"Updated internship \" + (index + 1) + \" company to: \" + newCompany);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Joannaj00"},"content":"    public static void updateRole(int index, String newRole) throws InternityException {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Joannaj00"},"content":"        if (index \u003c 0 || index \u003e\u003d size()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidInternshipIndex();","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Joannaj00"},"content":"        Internship it \u003d List.get(index);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Joannaj00"},"content":"        it.setRole(newRole);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Joannaj00"},"content":"        System.out.println(\"Updated internship \" + (index + 1) + \" role to: \" + newRole);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Joannaj00"},"content":"    public static void updateDeadline(int index, Date newDeadline) throws InternityException {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Joannaj00"},"content":"        if (index \u003c 0 || index \u003e\u003d size()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidInternshipIndex();","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Joannaj00"},"content":"        Internship it \u003d List.get(index);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Joannaj00"},"content":"        it.setDeadline(newDeadline);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Joannaj00"},"content":"        System.out.println(\"Updated internship \" + (index + 1) + \" deadline to: \" + newDeadline);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Joannaj00"},"content":"    public static void updatePay(int index, int newPay) throws InternityException {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Joannaj00"},"content":"        if (index \u003c 0 || index \u003e\u003d size()) {","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Joannaj00"},"content":"            throw InternityException.invalidInternshipIndex();","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Joannaj00"},"content":"        Internship it \u003d List.get(index);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Joannaj00"},"content":"        it.setPay(newPay);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Joannaj00"},"content":"        System.out.println(\"Updated internship \" + (index + 1) + \" pay to: \" + newPay);","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T00:58:20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lukeai-tan"},"content":"    public static void clear() {","lastModifiedDate":"2025-10-10T19:14:16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lukeai-tan"},"content":"        List.clear();","lastModifiedDate":"2025-10-10T19:14:16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-10T19:14:16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-10-08T11:48:10","isFullCredit":false}],"authorContributionMap":{"Joannaj00":48,"lukeai-tan":13,"V1T0bh":81,"BenyAlbatross":44}},{"path":"src/main/java/internity/core/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joannaj00"},"content":"package internity.core;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Joannaj00"},"content":"/**","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Joannaj00"},"content":" * Represents the set of valid internship statuses within the Internity application.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Joannaj00"},"content":" * Each status describes a stage in the internship application process.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Joannaj00"},"content":" *","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Joannaj00"},"content":" * \u003cp\u003eValid statuses include:","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003ePending\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003eInterested\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003eApplied\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003eInterviewing\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003eOffer\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003eAccepted\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Joannaj00"},"content":" *     \u003cli\u003eRejected\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Joannaj00"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Joannaj00"},"content":" *","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Joannaj00"},"content":" * \u003cp\u003eThis enum provides utility methods for validating and normalizing","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Joannaj00"},"content":" * user input so that status values remain consistent across parsing,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Joannaj00"},"content":" * storage, and display.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Joannaj00"},"content":" */","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Joannaj00"},"content":"public enum Status {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Joannaj00"},"content":"    PENDING,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Joannaj00"},"content":"    INTERESTED,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Joannaj00"},"content":"    APPLIED,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Joannaj00"},"content":"    INTERVIEWING,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Joannaj00"},"content":"    OFFER,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Joannaj00"},"content":"    ACCEPTED,","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Joannaj00"},"content":"    REJECTED;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Joannaj00"},"content":"    /**","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Joannaj00"},"content":"     * Checks whether the provided string corresponds to a valid {@link Status}.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Joannaj00"},"content":"     * The comparison is case-insensitive.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Joannaj00"},"content":"     * @param s The status string to validate.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Joannaj00"},"content":"     * @return {@code true} if the string matches a valid status, {@code false} otherwise.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Joannaj00"},"content":"     */","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Joannaj00"},"content":"    public static boolean isValid(String s) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Joannaj00"},"content":"        if (s \u003d\u003d null) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Joannaj00"},"content":"            return false;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Joannaj00"},"content":"        try {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Joannaj00"},"content":"            Status.valueOf(s.trim().toUpperCase());","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Joannaj00"},"content":"            return true;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Joannaj00"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Joannaj00"},"content":"            return false;","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Joannaj00"},"content":"        }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Joannaj00"},"content":"    /**","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Joannaj00"},"content":"     * Converts a valid status string into a canonical (Title Case) form","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Joannaj00"},"content":"     * for consistent display and storage.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Joannaj00"},"content":"     * \u003cp\u003eExample:","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Joannaj00"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Joannaj00"},"content":"     *     \u003cli\u003e\"interviewing\" → \"Interviewing\"\u003c/li\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Joannaj00"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Joannaj00"},"content":"     *","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Joannaj00"},"content":"     * @param s The input status string (must be valid).","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Joannaj00"},"content":"     * @return The canonical Title Case version of the status.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Joannaj00"},"content":"     * @throws IllegalArgumentException If the input does not match any valid status.","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Joannaj00"},"content":"     */","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Joannaj00"},"content":"    public static String canonical(String s) {","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Joannaj00"},"content":"        assert s !\u003d null : \"Status string cannot be null\";","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Joannaj00"},"content":"        String upper \u003d s.trim().toUpperCase();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Joannaj00"},"content":"        Status e \u003d Status.valueOf(upper);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Joannaj00"},"content":"        String lower \u003d e.name().toLowerCase();","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Joannaj00"},"content":"        return Character.toUpperCase(lower.charAt(0)) + lower.substring(1);","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Joannaj00"},"content":"}","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false}],"authorContributionMap":{"Joannaj00":70}},{"path":"src/main/java/internity/core/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenyAlbatross"},"content":"package internity.core;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BenyAlbatross"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BenyAlbatross"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BenyAlbatross"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BenyAlbatross"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BenyAlbatross"},"content":"import java.util.logging.Level;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BenyAlbatross"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BenyAlbatross"},"content":"import internity.utils.DateFormatter;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BenyAlbatross"},"content":"/**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BenyAlbatross"},"content":" * Handles loading and saving internships to a file for persistent storage.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BenyAlbatross"},"content":" * The storage format is a pipe-delimited text file where each line represents one internship.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BenyAlbatross"},"content":" * Format: company | role | deadline (DD-MM-YYYY) | pay | status","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BenyAlbatross"},"content":" */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BenyAlbatross"},"content":"public class Storage {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BenyAlbatross"},"content":"    private static final Logger logger \u003d Logger.getLogger(Storage.class.getName());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BenyAlbatross"},"content":"    static {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BenyAlbatross"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BenyAlbatross"},"content":"    // Indices for pipe delimited format","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BenyAlbatross"},"content":"    private static final int IDX_COMPANY \u003d 0;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BenyAlbatross"},"content":"    private static final int IDX_ROLE \u003d 1;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BenyAlbatross"},"content":"    private static final int IDX_DEADLINE \u003d 2;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BenyAlbatross"},"content":"    private static final int IDX_PAY \u003d 3;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BenyAlbatross"},"content":"    private static final int IDX_STATUS \u003d 4;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BenyAlbatross"},"content":"    private static final int LEN_REQUIRED_FIELDS \u003d 5;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BenyAlbatross"},"content":"    private final Path filePath;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BenyAlbatross"},"content":"     * Creates a new Storage instance with the specified file path.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BenyAlbatross"},"content":"     * @param filePath The path to the file for storing internships.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BenyAlbatross"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BenyAlbatross"},"content":"        assert filePath !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BenyAlbatross"},"content":"        assert !filePath.trim().isEmpty() : \"File path cannot be empty\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BenyAlbatross"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BenyAlbatross"},"content":"     * Loads internships from the storage file.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BenyAlbatross"},"content":"     * @return ArrayList of internships loaded from the file.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BenyAlbatross"},"content":"     * @throws InternityException If there is an error reading the file.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BenyAlbatross"},"content":"    public ArrayList\u003cInternship\u003e load() throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BenyAlbatross"},"content":"        logger.info(\"Loading internships from: \" + filePath);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BenyAlbatross"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BenyAlbatross"},"content":"            logger.info(\"Storage file does not exist. Starting with empty list.\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BenyAlbatross"},"content":"            return internships; // First run: nothing to load","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BenyAlbatross"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath.toFile()))) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BenyAlbatross"},"content":"            String line;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BenyAlbatross"},"content":"            int lineNumber \u003d 0;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BenyAlbatross"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BenyAlbatross"},"content":"                lineNumber++;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BenyAlbatross"},"content":"                String errorMessage \u003d parseInternshipFromFile(line, internships);","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BenyAlbatross"},"content":"                if (errorMessage !\u003d null) {","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BenyAlbatross"},"content":"                    System.err.println(errorMessage);","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BenyAlbatross"},"content":"                }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BenyAlbatross"},"content":"            }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BenyAlbatross"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BenyAlbatross"},"content":"            logger.severe(\"Failed to load internships from \" + filePath + \": \" + e.getMessage());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BenyAlbatross"},"content":"            throw new InternityException(\"Could not load internships: \" + e.getMessage());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BenyAlbatross"},"content":"        logger.info(\"Successfully loaded \" + internships.size() + \" internships\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BenyAlbatross"},"content":"        return internships;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BenyAlbatross"},"content":"     * Parses a single line from the storage file into an Internship object.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BenyAlbatross"},"content":"     * @param line The line to parse.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BenyAlbatross"},"content":"     * @param internships The list to add the parsed internship to.","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BenyAlbatross"},"content":"     * @return Error message if parsing failed, null if successful.","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BenyAlbatross"},"content":"    private String parseInternshipFromFile(String line, ArrayList\u003cInternship\u003e internships) {","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BenyAlbatross"},"content":"        assert line !\u003d null : \"Line to parse cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BenyAlbatross"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BenyAlbatross"},"content":"        // Trim all parts","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BenyAlbatross"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BenyAlbatross"},"content":"            parts[i] \u003d parts[i].trim();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BenyAlbatross"},"content":"        // Validate field count","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BenyAlbatross"},"content":"        if (parts.length !\u003d LEN_REQUIRED_FIELDS) {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BenyAlbatross"},"content":"            return \"Warning: Skipped line with invalid number of fields: \" + line;","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BenyAlbatross"},"content":"        // Parse and validate all fields in one place","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BenyAlbatross"},"content":"        return parseAndValidateFields(parts, line, internships);","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BenyAlbatross"},"content":"     * Parses and validates all fields of an internship entry from storage.","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BenyAlbatross"},"content":"     * This centralizes all parsing and validation logic for clarity and maintainability.","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BenyAlbatross"},"content":"     * Validation rules:","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BenyAlbatross"},"content":"     * - Company and role must not be empty","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BenyAlbatross"},"content":"     * - Pay must be a valid integer format","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BenyAlbatross"},"content":"     * - Pay must be non-negative","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BenyAlbatross"},"content":"     * - Deadline must be in valid DD-MM-YYYY format","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BenyAlbatross"},"content":"     * - Deadline must represent a valid calendar date (no Feb 31, etc.)","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BenyAlbatross"},"content":"     * - Status must be one of the valid status values","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BenyAlbatross"},"content":"     * @param parts The split and trimmed line parts.","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BenyAlbatross"},"content":"     * @param line The original line for error reporting.","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BenyAlbatross"},"content":"     * @param internships The list to add the parsed internship to.","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BenyAlbatross"},"content":"     * @return Error message if parsing/validation failed, null if successful.","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BenyAlbatross"},"content":"    private String parseAndValidateFields(String[] parts, String line, ArrayList\u003cInternship\u003e internships) {","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BenyAlbatross"},"content":"        String company \u003d parts[IDX_COMPANY];","lastModifiedDate":"2025-10-17T15:06:10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BenyAlbatross"},"content":"        String role \u003d parts[IDX_ROLE];","lastModifiedDate":"2025-10-17T15:06:10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BenyAlbatross"},"content":"        String deadlineStr \u003d parts[IDX_DEADLINE];","lastModifiedDate":"2025-10-17T15:06:10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BenyAlbatross"},"content":"        // Validate non-empty company and role","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BenyAlbatross"},"content":"        if (company.isEmpty() || role.isEmpty()) {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BenyAlbatross"},"content":"            logger.warning(\"Empty company or role in line: \" + line);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BenyAlbatross"},"content":"            return \"Warning: Skipped line with empty company or role: \" + line;","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BenyAlbatross"},"content":"        // Parse pay","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BenyAlbatross"},"content":"        int pay;","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BenyAlbatross"},"content":"        try {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BenyAlbatross"},"content":"            pay \u003d Integer.parseInt(parts[IDX_PAY]);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BenyAlbatross"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BenyAlbatross"},"content":"            logger.warning(\"Invalid pay format in line: \" + line + \" - \" + e.getMessage());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BenyAlbatross"},"content":"            return \"Warning: Skipped line with invalid pay format: \" + line;","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BenyAlbatross"},"content":"        // Validate pay is non-negative","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BenyAlbatross"},"content":"        if (pay \u003c 0) {","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BenyAlbatross"},"content":"            logger.warning(\"Negative pay in line: \" + line + \" - pay: \" + pay);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BenyAlbatross"},"content":"            return \"Warning: Skipped line with negative pay amount: \" + line;","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BenyAlbatross"},"content":"        String status \u003d parts[IDX_STATUS];","lastModifiedDate":"2025-10-17T15:06:10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BenyAlbatross"},"content":"        // Validate status","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BenyAlbatross"},"content":"        if (!Internship.isValidStatus(status)) {","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BenyAlbatross"},"content":"            logger.warning(\"Invalid status in line: \" + line + \" - status: \" + status);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BenyAlbatross"},"content":"            return \"Warning: Skipped line with invalid status: \" + line;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BenyAlbatross"},"content":"        // Parse and validate date","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BenyAlbatross"},"content":"        Date deadline;","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BenyAlbatross"},"content":"        try {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BenyAlbatross"},"content":"            deadline \u003d DateFormatter.parse(deadlineStr);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BenyAlbatross"},"content":"        } catch (InternityException e) {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BenyAlbatross"},"content":"            logger.warning(\"Invalid date in line: \" + line + \" - \" + e.getMessage());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BenyAlbatross"},"content":"            return \"Warning: Skipped line - \" + e.getMessage() + \": \" + line;","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BenyAlbatross"},"content":"        // Create and add internship","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BenyAlbatross"},"content":"        Internship internship \u003d new Internship(company, role, deadline, pay);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BenyAlbatross"},"content":"        internship.setStatus(status);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(internship);","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BenyAlbatross"},"content":"        return null;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BenyAlbatross"},"content":"     * Saves internships to the storage file.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BenyAlbatross"},"content":"     * @param internships The list of internships to save.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BenyAlbatross"},"content":"     * @throws InternityException If there is an error writing to the file.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BenyAlbatross"},"content":"    public void save(ArrayList\u003cInternship\u003e internships) throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BenyAlbatross"},"content":"        assert internships !\u003d null : \"Internships list cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BenyAlbatross"},"content":"        logger.info(\"Saving \" + internships.size() + \" internships to: \" + filePath);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BenyAlbatross"},"content":"        try {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BenyAlbatross"},"content":"            // Create parent directories if they don\u0027t exist","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BenyAlbatross"},"content":"            if (filePath.getParent() !\u003d null) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BenyAlbatross"},"content":"                Files.createDirectories(filePath.getParent());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BenyAlbatross"},"content":"                logger.warning(\"Created parent directories for: \" + filePath);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BenyAlbatross"},"content":"            }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BenyAlbatross"},"content":"            try (PrintWriter pw \u003d new PrintWriter(new BufferedWriter(new FileWriter(filePath.toFile())))) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BenyAlbatross"},"content":"                for (Internship internship : internships) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BenyAlbatross"},"content":"                    pw.println(formatInternshipForFile(internship));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BenyAlbatross"},"content":"                }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"BenyAlbatross"},"content":"            }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"BenyAlbatross"},"content":"            logger.info(\"Successfully saved \" + internships.size() + \" internships\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"BenyAlbatross"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BenyAlbatross"},"content":"            logger.severe(\"Failed to save internships to \" + filePath + \": \" + e.getMessage());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"BenyAlbatross"},"content":"            throw new InternityException(\"Could not save internships: \" + e.getMessage());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"BenyAlbatross"},"content":"        }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"BenyAlbatross"},"content":"     * Formats an internship for storage in the file.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"BenyAlbatross"},"content":"     *","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"BenyAlbatross"},"content":"     * @param internship The internship to format.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"BenyAlbatross"},"content":"     * @return A pipe-delimited string representation of the internship.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"BenyAlbatross"},"content":"    private String formatInternshipForFile(Internship internship) {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"BenyAlbatross"},"content":"        assert internship !\u003d null : \"Internship to format cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"BenyAlbatross"},"content":"        assert internship.getCompany() !\u003d null : \"Company cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"BenyAlbatross"},"content":"        assert internship.getRole() !\u003d null : \"Role cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"BenyAlbatross"},"content":"        assert internship.getDeadline() !\u003d null : \"Deadline cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"BenyAlbatross"},"content":"        assert internship.getStatus() !\u003d null : \"Status cannot be null\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"BenyAlbatross"},"content":"        return internship.getCompany() + \" | \"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"BenyAlbatross"},"content":"                + internship.getRole() + \" | \"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"BenyAlbatross"},"content":"                + internship.getDeadline().toString() + \" | \"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"BenyAlbatross"},"content":"                + internship.getPay() + \" | \"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"BenyAlbatross"},"content":"                + internship.getStatus();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"BenyAlbatross"},"content":"}","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false}],"authorContributionMap":{"BenyAlbatross":227}},{"path":"src/main/java/internity/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package internity.ui;","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":" * The Ui Class provides user interface methods for the Internity chatbot.","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":" * Handles printing messages.","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"public class Ui {","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"    static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2025-10-13T20:01:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"        System.out.print(LINE);","lastModifiedDate":"2025-10-13T20:01:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"        final String logo \u003d \" ___       _                  _ _\\n\" +","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"                \"|_ _|_ __ | |_ ___ _ __ _ __ (_) |_ _   _\\n\" +","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"                \" | || \u0027_ \\\\| __/ _ \\\\ \u0027__| \u0027_ \\\\| | __| | | |\\n\" +","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"                \" | || | | | ||  __/ |  | | | | | |_| |_| |\\n\" +","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"                \"|___|_| |_|\\\\__\\\\___|_|  |_| |_|_|\\\\__|\\\\__, |\\n\" +","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"                \"                                    |___/\";","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Hello, welcome to\\n\" + logo);","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Be on top of your internships management with the Internity chatbot!\");","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"    public static void printGreeting(String input) {","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Hello, \" + input + \"!\");","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"    public static void printExit() {","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Thank you for using Internity! Goodbye!\");","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"    public static void printAddInternship(Internship internship) {","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Noted. I\u0027ve added this internship:\");","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"  \"","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"                + internship.getCompany() + \" - \" + internship.getRole()","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"                + \" | Deadline: \" + internship.getDeadline()","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"                + \" | Pay: \" + internship.getPay()","lastModifiedDate":"2025-10-13T20:01:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"        );","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T17:42:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BenyAlbatross"},"content":"    public static void printRemoveInternship(String item, int totalItems) {","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"        System.out.println(\"Noted. I\u0027ve removed this internship:\");","lastModifiedDate":"2025-10-13T21:50:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BenyAlbatross"},"content":"        System.out.println(\"  \" + item);","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        System.out.println(\"Now you have \" + totalItems + \" internship(s) in the list.\");","lastModifiedDate":"2025-10-13T21:50:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:10:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Joannaj00"},"content":"    public static void printUpdateInternship() {","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Joannaj00"},"content":"        System.out.println(\"Internship status updated successfully!\");","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:45:11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-10-06T00:39:34","isFullCredit":false}],"authorContributionMap":{"Joannaj00":4,"lukeai-tan":2,"BestBearrr":46,"BenyAlbatross":3}},{"path":"src/main/java/internity/utils/DateFormatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.utils;","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":" * Utility class for parsing and validating date strings into {@link Date} objects.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":" *     This class provides methods to convert string representations of the date in a strict","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":" *     {@code dd-MM-yyyy} format into a {@link Date} object. It also validates the input to ensure that","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":" *     the provided date values correspond to actual valid calendar dates, including leap year cases.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":" *     This class cannot be instantiated.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"public class DateFormatter {","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"     * Private constructor to prevent instantiation.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"    private DateFormatter() {}","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"     * Parses a string representation of a date in the format {@code dd-MM-yyyy} into a","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"     * {@link Date} object.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003eValid date format conditions:\u003c/p\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003eThe input must not be {@code null} or blank.\u003c/li\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003eThe input must be in a {@code dd-MM-yyyy} format:","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"     *         \u003cli\u003e{@code dd} is a two-digit day (01-31)\u003c/li\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"     *         \u003cli\u003e{@code MM} is a two-digit month (01-12)\u003c/li\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"     *         \u003cli\u003e{@code yyyy} is a four-digit year\u003c/li\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"     *         The date must represent a valid calendar date (e.g. 09-10-2025 is valid,","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"     *         99-99-2025 is invalid).","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"     * @param dateString the date string to parse, expected in {@code dd-MM-yyyy} format","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"     * @return a {@link Date} object representing the parsed date","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"     * @throws InternityException if the input is {@code null}, blank, has an invalid format or invalid date","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"    public static Date parse(String dateString) throws InternityException {","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        if (dateString \u003d\u003d null || dateString.isBlank()) {","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidInput();","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"        String trimmed \u003d dateString.trim();","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"        // Check for an absolute dd-MM-yyyy format","lastModifiedDate":"2025-10-09T10:43:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"        if (!trimmed.matches(\"\\\\d{2}-\\\\d{2}-\\\\d{4}\")) {","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidDateFormat();","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"        String[] parts \u003d trimmed.split(\"-\");","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"            throw InternityException.invalidDateFormat();","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BenyAlbatross"},"content":"        // Regex validation above guarantees numeric format, so parseInt() cannot throw NumberFormatException","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BenyAlbatross"},"content":"        assert parts[0].matches(\"\\\\d+\") \u0026\u0026 parts[1].matches(\"\\\\d+\") \u0026\u0026 parts[2].matches(\"\\\\d+\")","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BenyAlbatross"},"content":"                : \"Regex should guarantee numeric format\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"        int day \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"        int month \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"        int year \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:14:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"        if (!isValidDate(day, month, year)) {","lastModifiedDate":"2025-10-08T23:14:40","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BenyAlbatross"},"content":"            throw InternityException.invalidDateFormat();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T23:14:40","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:14:40","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"        return new Date(day, month, year);","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lukeai-tan"},"content":"     * Validates whether the provided day, month and year corresponds to a valid calendar date.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"     * @param day day component of the date","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"     * @param month month component of the date","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"     * @param year year component of the date","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"     * @return {@code true} if the date is valid, {@code false} otherwise","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"    private static boolean isValidDate(int day, int month, int year) {","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"        if (month \u003c 1 || month \u003e 12) {","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"            return false;","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"        if (day \u003c 1) {","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"            return false;","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"        int maxDay \u003d switch (month) {","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"        case 2 -\u003e (isLeapYear(year)) ? 29 : 28;","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"        case 4, 6, 9, 11 -\u003e 30;","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"        default -\u003e 31;","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"        };","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"        return day \u003c\u003d maxDay;","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lukeai-tan"},"content":"    /**","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lukeai-tan"},"content":"     * Determines whether the provided year is a leap year according to the Gregorian calendar rules.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"     *","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lukeai-tan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"     *     A year is a leap year if it is divisible by 4 but not 100, unless it is also divisible by 400.","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lukeai-tan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lukeai-tan"},"content":"     * @param year the year to check","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lukeai-tan"},"content":"     * @return {@code true} if the year is a leap year, {@code false} otherwise","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lukeai-tan"},"content":"     */","lastModifiedDate":"2025-10-09T09:08:54","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lukeai-tan"},"content":"    private static boolean isLeapYear(int year) {","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lukeai-tan"},"content":"        return (year % 4 \u003d\u003d 0) \u0026\u0026 (year % 100 !\u003d 0 || year % 400 \u003d\u003d 0);","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T23:11:26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-08T22:42:14","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":111,"BenyAlbatross":6}},{"path":"src/test/java/internity/InternityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity;","lastModifiedDate":"2025-10-05T16:58:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"class InternityTest {","lastModifiedDate":"2025-10-01T19:37:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24T00:51:04","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":2,"-":10}},{"path":"src/test/java/internity/cli/ArgumentParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joannaj00"},"content":"package internity.cli;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Joannaj00"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Joannaj00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":"import internity.commands.UpdateCommand;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Joannaj00"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Joannaj00"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Joannaj00"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Joannaj00"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Joannaj00"},"content":"class ArgumentParserTest {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Joannaj00"},"content":"    ","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Joannaj00"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Joannaj00"},"content":"    void setUp() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(new Internship(\"Google\", \"SWE\", new Date(1, 1, 2025), 8000));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Joannaj00"},"content":"    void parseUpdate_validSingleField_returnsCommand() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d ArgumentParser.parseUpdateCommandArgs(\"1 company/Meta\");","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Joannaj00"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Joannaj00"},"content":"    void parseUpdate_multipleFields_returnsCommand() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d ArgumentParser.parseUpdateCommandArgs(\"1 company/Meta role/AI Intern pay/9000\");","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Joannaj00"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Joannaj00"},"content":"    void parseUpdate_invalidIndex_throwsException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseUpdateCommandArgs(\"abc company/Meta\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Joannaj00"},"content":"    void parseUpdate_missingFieldTag_throwsException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseUpdateCommandArgs(\"1 Meta\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Joannaj00"},"content":"    void parseUpdate_emptyCompany_throwsException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseUpdateCommandArgs(\"1 company/ \"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Joannaj00"},"content":"}","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false}],"authorContributionMap":{"Joannaj00":48}},{"path":"src/test/java/internity/cli/CommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.cli;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-05T22:56:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-10-05T22:56:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-05T22:56:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.AddCommand;","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.Command;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.DeleteCommand;","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.ExitCommand;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.ListCommand;","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"import internity.commands.UpdateCommand;","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"/**","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":" * Unit tests for {@link CommandParser}.","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":" * These tests ensure that the parser correctly interprets input and returns the proper Command objects,","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":" * or throws InternityException for invalid inputs.","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":" */","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"class CommandParserTest {","lastModifiedDate":"2025-10-10T19:27:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"    private CommandParser commandParser;","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"    void setUp() {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"        commandParser \u003d new CommandParser();","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_exitCommand_returnsExitCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandParser.parseInput(\"exit\");","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(ExitCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_listCommand_returnsListCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandParser.parseInput(\"list\");","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(ListCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_addCommand_returnsAddCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"add company/Umbrella Corp role/Researcher deadline/10-10-2025 pay/1000\";","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandParser.parseInput(input);","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(AddCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_deleteCommand_returnsDeleteCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandParser.parseInput(\"delete 1\");","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(DeleteCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_updateCommand_returnsUpdateCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d commandParser.parseInput(\"update 1 status/Pending\");","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(UpdateCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_nullInput_throwsInvalidInput() {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(","lastModifiedDate":"2025-10-08T22:51:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-08T22:51:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e commandParser.parseInput(null)","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:51:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Input cannot be null or blank\", exception.getMessage());","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_blankInput_throwsInvalidInput() {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e commandParser.parseInput(\"   \")","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Input cannot be null or blank\", exception.getMessage());","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lukeai-tan"},"content":"    void parseInput_unknownCommand_throwsUnknownCommand() {","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e commandParser.parseInput(\"AbsoluteCinema\")","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Unknown command: absolutecinema\", exception.getMessage());","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:40","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":89}},{"path":"src/test/java/internity/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package internity.commands;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"import internity.cli.ArgumentParser;","lastModifiedDate":"2025-10-13T16:50:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-21T00:19:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":"import internity.utils.DateFormatter;","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"class AddCommandTest {","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"    void setup() {","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"        // Clear any previously added internships before each test","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"     * Tests that a valid command correctly parses all fields","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"     * and adds a new internship to the InternshipList.","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"    @Test","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"    void execute_validInput_addsInternshipSuccessfully() throws InternityException {","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"        String args \u003d \"company/Google role/Software Engineer deadline/01-12-2025 pay/120000\";","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"        AddCommand command \u003d ArgumentParser.parseAddCommandArgs(args);","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"        command.execute();","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"        // Validate that one internship was added","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"        assertEquals(1, InternshipList.size(), \"Expected one internship to be added\");","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"        Internship added \u003d InternshipList.get(0);","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"        assertEquals(\"Google\", added.getCompany());","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"        assertEquals(\"Software Engineer\", added.getRole());","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"        assertEquals(DateFormatter.parse(\"01-12-2025\").toString(), added.getDeadline().toString());","lastModifiedDate":"2025-10-13T17:16:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"        assertEquals(120000, added.getPay());","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"     * Tests that the command throws an exception if one of the fields is missing.","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"    @Test","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"    void execute_missingField_throwsException() {","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"        String args \u003d \"company/Google role/Software Engineer pay/1000\"; // missing deadline","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args),","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"                \"Expected InternityException when deadline field is missing\");","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"     * Tests that the command throws an exception for invalid pay values.","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"    @Test","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"    void execute_invalidPay_throwsException() {","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"        String args \u003d \"company/Amazon role/Data Analyst deadline/01-12-2025 pay/notANumber\";","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"        assertThrows(InternityException.class, () -\u003e ArgumentParser.parseAddCommandArgs(args),","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"                \"Expected InternityException for non-numeric pay\");","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"     * Tests that the command does not signal application exit.","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"    @Test","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"    void isExit_returnsFalse() throws InternityException {","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"        String args \u003d \"company/Test role/Tester deadline/01-01-2026 pay/1000\";","lastModifiedDate":"2025-10-13T17:16:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"        AddCommand command \u003d ArgumentParser.parseAddCommandArgs(args);","lastModifiedDate":"2025-10-13T17:13:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"        assertFalse(command.isExit(), \"AddCommand should not terminate the application\");","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-10-11T18:09:41","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":1,"BestBearrr":74}},{"path":"src/test/java/internity/commands/CommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"class CommandFactoryTest {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"    private final CommandFactory factory \u003d new CommandFactory();","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_add_returnsAddCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"        String args \u003d \"company/Umbrella Corp role/Researcher deadline/10-10-2025 pay/1000\";","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"add\", args);","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(AddCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_delete_returnsDeleteCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"delete\", \"1\");","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(DeleteCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_update_returnsUpdateCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"update\", \"1 status/Pending\");","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(UpdateCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_list_returnsListCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"list\", \"\");","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(ListCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_exit_returnsExitCommand() throws InternityException {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"        Command command \u003d factory.createCommand(\"exit\", \"\");","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        assertInstanceOf(ExitCommand.class, command);","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"    void createCommand_unknownCommand_throwsInternityException() {","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e factory.createCommand(\"invalidCommand\", \"\")","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Unknown command: invalidCommand\", exception.getMessage());","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-18T20:46:51","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":54}},{"path":"src/test/java/internity/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenyAlbatross"},"content":"package internity.commands;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BenyAlbatross"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BenyAlbatross"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BenyAlbatross"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BenyAlbatross"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-10T16:59:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BenyAlbatross"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-10T16:59:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BenyAlbatross"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-10T16:59:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BenyAlbatross"},"content":"class DeleteCommandTest {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BenyAlbatross"},"content":"    private InternshipList internshipList;","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BenyAlbatross"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BenyAlbatross"},"content":"    void setUp() {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-10T19:14:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BenyAlbatross"},"content":"        // Add some test internships","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.add(new Internship(\"Google\", \"SWE Intern\", new Date(1, 1, 2025), 5000));","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.add(new Internship(\"Meta\", \"Backend Intern\", new Date(15, 2, 2025), 6000));","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.add(new Internship(\"Amazon\", \"Frontend Intern\", new Date(20, 3, 2025), 4500));","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BenyAlbatross"},"content":"    void execute_validIndex_deletesInternship() throws InternityException {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BenyAlbatross"},"content":"        // Arrange: Delete internship at index 1","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"        DeleteCommand command \u003d new DeleteCommand(1);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"        int initialSize \u003d InternshipList.size();","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BenyAlbatross"},"content":"        // Act","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BenyAlbatross"},"content":"        command.execute();","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BenyAlbatross"},"content":"        // Assert","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(initialSize - 1, InternshipList.size());","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Google\", InternshipList.get(0).getCompany()); // First item unchanged","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Amazon\", InternshipList.get(1).getCompany()); // Meta was removed, Amazon shifted","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BenyAlbatross"},"content":"    void execute_negativeIndex_throwsException() {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BenyAlbatross"},"content":"        // Arrange: Delete internship at negative index -1","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"        DeleteCommand command \u003d new DeleteCommand(-1);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BenyAlbatross"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(InternityException.class, command::execute);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Invalid internship index: 0\", exception.getMessage());","lastModifiedDate":"2025-10-13T22:36:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BenyAlbatross"},"content":"    void execute_indexTooLarge_throwsException() {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BenyAlbatross"},"content":"        // Arrange: Delete internship at idx 10, when max idx \u003d 2","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"        DeleteCommand command \u003d new DeleteCommand(10);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BenyAlbatross"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"        InternityException exception \u003d assertThrows(InternityException.class, command::execute);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Invalid internship index: 11\", exception.getMessage());","lastModifiedDate":"2025-10-13T22:36:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BenyAlbatross"},"content":"    void execute_indexEqualToSize_throwsException() {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BenyAlbatross"},"content":"        // Deleting at idx \u003d\u003d size_of_list is an off-by-one error","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BenyAlbatross"},"content":"        // Arrange","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"        int size \u003d InternshipList.size();","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"        DeleteCommand command \u003d new DeleteCommand(size);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BenyAlbatross"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, command::execute);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BenyAlbatross"},"content":"    void isExit_returnsFalse() {","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BenyAlbatross"},"content":"        // DeleteCommand should not terminate the program","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BenyAlbatross"},"content":"        // Arrange","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"        DeleteCommand command \u003d new DeleteCommand(0);","lastModifiedDate":"2025-10-10T19:08:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BenyAlbatross"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BenyAlbatross"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BenyAlbatross"},"content":"}","lastModifiedDate":"2025-10-10T16:44:34","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":19,"BenyAlbatross":63}},{"path":"src/test/java/internity/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.commands;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-05T22:55:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-05T22:55:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"class ExitCommandTest {","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    void execute_printsExitMessage() {","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"        try {","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"            exitCommand.execute();","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"            assertEquals(\"Thank you for using Internity! Goodbye!\" + System.lineSeparator(),","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"                    outContent.toString());","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"        } finally {","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"    void isExit_returnsTrue() {","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"        assertTrue(exitCommand.isExit());","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-05T22:45:54","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":34}},{"path":"src/test/java/internity/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package internity.commands;","lastModifiedDate":"2025-10-13T20:26:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-13T21:06:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-13T21:06:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-13T21:06:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"class ListCommandTest {","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":"    private ByteArrayOutputStream outContent;","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":"    void setUpStreams() {","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"    @AfterEach","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"    void restoreStreams() {","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"    void execute_whenNoEntries_printsNoInternshipsFound() throws InternityException {","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"        ListCommand listCommand \u003d new ListCommand(ListCommand.orderType.DEFAULT);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"        listCommand.execute();","lastModifiedDate":"2025-10-13T21:01:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"        assertTrue(outContent.toString().contains(\"No internships found. Please add an internship first.\"));","lastModifiedDate":"2025-10-13T21:06:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"    void execute_withEntry_doesNotPrintNoInternshipsFound() throws InternityException {","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"        Internship internship \u003d new Internship(\"Company A\", \"Developer\", new Date(1,1,2025), 5000);","lastModifiedDate":"2025-10-13T21:06:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(internship); // dummy entry","lastModifiedDate":"2025-10-13T21:06:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"        ListCommand listCommand \u003d new ListCommand(ListCommand.orderType.DEFAULT);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"        listCommand.execute();","lastModifiedDate":"2025-10-13T21:01:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"        assertFalse(outContent.toString().contains(\"No internships found. Please add an internship first.\"));","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"V1T0bh"},"content":"    void execute_doesNotThrow() {","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"V1T0bh"},"content":"        ListCommand listCommand \u003d new ListCommand(ListCommand.orderType.DEFAULT);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"V1T0bh"},"content":"        assertDoesNotThrow(listCommand::execute);","lastModifiedDate":"2025-10-13T21:01:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T20:26:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-10-13T20:26:37","isFullCredit":false}],"authorContributionMap":{"V1T0bh":60}},{"path":"src/test/java/internity/commands/UpdateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joannaj00"},"content":"package internity.commands;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-10T02:20:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Joannaj00"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Joannaj00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Joannaj00"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Joannaj00"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-10T02:20:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Joannaj00"},"content":"import internity.core.Internship;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Joannaj00"},"content":"import internity.core.InternshipList;","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Joannaj00"},"content":"class UpdateCommandTest {","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Joannaj00"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Joannaj00"},"content":"    void setUp() {","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"        InternshipList.add(new Internship(\"Google\", \"SWE Intern\", new Date(15, 11, 2025), 8000));","lastModifiedDate":"2025-10-10T19:14:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Joannaj00"},"content":"    void execute_validStatus_updatesStatusSuccessfully() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, \"Accepted\");","lastModifiedDate":"2025-10-11T15:11:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Joannaj00"},"content":"        command.execute();","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Accepted\", InternshipList.get(0).getStatus());","lastModifiedDate":"2025-10-10T19:14:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Joannaj00"},"content":"    void execute_validCompany_updatesCompanySuccessfully() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, \"ByteDance\", null, null, null, null);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Joannaj00"},"content":"        command.execute();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"ByteDance\", InternshipList.get(0).getCompany());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Joannaj00"},"content":"    void execute_validRole_updatesRoleSuccessfully() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, null, \"Backend Intern\", null, null, null);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Joannaj00"},"content":"        command.execute();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"Backend Intern\", InternshipList.get(0).getRole());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Joannaj00"},"content":"    void execute_validDeadline_updatesDeadlineSuccessfully() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Joannaj00"},"content":"        Date newDeadline \u003d new Date(1, 12, 2025);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, null, null, newDeadline, null, null);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Joannaj00"},"content":"        command.execute();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"01-12-2025\", InternshipList.get(0).getDeadline().toString());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Joannaj00"},"content":"    void execute_validPay_updatesPaySuccessfully() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, null, null, null, 10000, null);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Joannaj00"},"content":"        command.execute();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(10000, InternshipList.get(0).getPay());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Joannaj00"},"content":"    void execute_multipleFields_updatesAllSuccessfully() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Joannaj00"},"content":"        Date newDeadline \u003d new Date(1, 12, 2025);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, \"Meta\", \"AI Research Intern\", newDeadline, 12000, \"Offer\");","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Joannaj00"},"content":"        command.execute();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Joannaj00"},"content":"        Internship updated \u003d InternshipList.get(0);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"Meta\", updated.getCompany());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"AI Research Intern\", updated.getRole());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"01-12-2025\", updated.getDeadline().toString());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(12000, updated.getPay());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"Offer\", updated.getStatus());","lastModifiedDate":"2025-10-21T19:27:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Joannaj00"},"content":"    void execute_invalidIndex_throwsException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(5, \"Accepted\");","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, command::execute);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Joannaj00"},"content":"    void execute_noFieldsProvided_throwsException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Joannaj00"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, null, null, null, null, null);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"        assertThrows(InternityException.class, command::execute);","lastModifiedDate":"2025-10-10T21:54:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-10T02:20:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Joannaj00"},"content":"    void isExit_always_returnsFalse() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"        UpdateCommand command \u003d new UpdateCommand(0, \"Accepted\");","lastModifiedDate":"2025-10-11T15:11:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Joannaj00"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Joannaj00"},"content":"}","lastModifiedDate":"2025-10-10T01:47:24","isFullCredit":false}],"authorContributionMap":{"Joannaj00":81,"lukeai-tan":6}},{"path":"src/test/java/internity/core/InternshipListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package internity.core;","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Joannaj00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Joannaj00"},"content":"import internity.commands.ListCommand;","lastModifiedDate":"2025-10-21T21:40:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":"class InternshipListTest {","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":"    private ByteArrayOutputStream outContent;","lastModifiedDate":"2025-10-13T19:47:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"    void setUp() {","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-13T19:47:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-10-13T19:47:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"    @AfterEach","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"    void restoreStreams() {","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"    void add_thenGet_returnsItemAtIndex() throws InternityException {","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(null);","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(null);","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"        assertDoesNotThrow(() -\u003e InternshipList.get(0));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"        assertDoesNotThrow(() -\u003e InternshipList.get(1));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"        assertNull(InternshipList.get(0));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"        assertNull(InternshipList.get(1));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"    void get_invalidIndex_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.get(0));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(null);","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.get(1));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"V1T0bh"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.get(-1));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"V1T0bh"},"content":"    void delete_removesGivenItem() throws InternityException {","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(null);","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(null);","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.delete(0);","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"V1T0bh"},"content":"        assertDoesNotThrow(() -\u003e InternshipList.get(0));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"V1T0bh"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.get(1));","lastModifiedDate":"2025-10-12T17:30:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T19:42:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"V1T0bh"},"content":"    public void listAll_whenEmpty_expectedOutcome() throws InternityException {","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.listAll(ListCommand.orderType.DEFAULT);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"V1T0bh"},"content":"        assertTrue(outContent.toString().contains(\"No internships found. Please add an internship first.\"));","lastModifiedDate":"2025-10-13T19:53:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"V1T0bh"},"content":"    public void listAll_withEntry_doesNotOutputNoInternshipsFound() throws Exception {","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"V1T0bh"},"content":"        Internship internship \u003d new Internship(\"Company A\", \"Developer\", new Date(1,1,2025), 5000);","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(internship);","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.listAll(ListCommand.orderType.DEFAULT);","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"V1T0bh"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"V1T0bh"},"content":"        assertFalse(output.contains(\"No internships found. Please add an internship first.\"));","lastModifiedDate":"2025-10-13T19:42:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-13T02:43:41","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Joannaj00"},"content":"    void updateCompany_validIndex_updatesFieldAndPrintsMessage() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"OldCo\", \"Dev\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.updateCompany(0, \"NewCo\");","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"NewCo\", InternshipList.get(0).getCompany());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Joannaj00"},"content":"        String out \u003d outContent.toString();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Joannaj00"},"content":"        assertTrue(out.contains(\"Updated internship 1 company to: NewCo\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Joannaj00"},"content":"    void updateRole_validIndex_updatesFieldAndPrintsMessage() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"OldRole\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.updateRole(0, \"NewRole\");","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"NewRole\", InternshipList.get(0).getRole());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Joannaj00"},"content":"        String out \u003d outContent.toString();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Joannaj00"},"content":"        assertTrue(out.contains(\"Updated internship 1 role to: NewRole\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Joannaj00"},"content":"    void updateDeadline_validIndex_updatesFieldAndPrintsMessage() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Joannaj00"},"content":"        Date newDeadline \u003d new Date(17, 9, 2025);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.updateDeadline(0, newDeadline);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"17-09-2025\", InternshipList.get(0).getDeadline().toString());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Joannaj00"},"content":"        String out \u003d outContent.toString();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Joannaj00"},"content":"        assertTrue(out.contains(\"Updated internship 1 deadline to: 17-09-2025\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Joannaj00"},"content":"    void updatePay_validIndex_updatesFieldAndPrintsMessage() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.updatePay(0, 9000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(9000, InternshipList.get(0).getPay());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Joannaj00"},"content":"        String out \u003d outContent.toString();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Joannaj00"},"content":"        assertTrue(out.contains(\"Updated internship 1 pay to: 9000\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Joannaj00"},"content":"    void updateStatus_validIndex_updatesFieldAndPrintsMessage() throws InternityException {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.updateStatus(0, \"Accepted\");","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Joannaj00"},"content":"        assertEquals(\"Accepted\", InternshipList.get(0).getStatus());","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Joannaj00"},"content":"        String out \u003d outContent.toString();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Joannaj00"},"content":"        assertTrue(out.contains(\"Updated internship 1 status to: Accepted\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Joannaj00"},"content":"    void updateCompany_invalidIndex_throwsInternityException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.updateCompany(1, \"NewCo\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Joannaj00"},"content":"    void updateRole_invalidIndex_throwsInternityException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.updateRole(-1, \"NewRole\"));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Joannaj00"},"content":"    void updateDeadline_invalidIndex_throwsInternityException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Joannaj00"},"content":"        Date newDeadline \u003d new Date(17, 9, 2025);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.updateDeadline(42, newDeadline));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Joannaj00"},"content":"    @Test","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Joannaj00"},"content":"    void updatePay_invalidIndex_throwsInternityException() {","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Joannaj00"},"content":"        outContent.reset();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.clear();","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Joannaj00"},"content":"        Internship i \u003d new Internship(\"Co\", \"Role\", new Date(1, 1, 2025), 5000);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Joannaj00"},"content":"        InternshipList.add(i);","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Joannaj00"},"content":"        assertThrows(InternityException.class, () -\u003e InternshipList.updatePay(2, 9000));","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Joannaj00"},"content":"    }","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Joannaj00"},"content":"","lastModifiedDate":"2025-10-21T01:15:17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"V1T0bh"},"content":"    public void sortInternships_sortAscending_expectedOutcome() throws InternityException {","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"V1T0bh"},"content":"        Internship older \u003d new Internship(\"OlderCo\", \"Dev\", new Date(1, 6, 2024), 0);","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"V1T0bh"},"content":"        Internship newer \u003d new Internship(\"NewerCo\", \"Dev\", new Date(1, 1, 2025), 0);","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(newer);","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(older);","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.sortInternships(ListCommand.orderType.ASCENDING); // ascending","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"V1T0bh"},"content":"        assertEquals(\"OlderCo\", InternshipList.get(0).getCompany());","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"V1T0bh"},"content":"        assertEquals(\"NewerCo\", InternshipList.get(1).getCompany());","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"V1T0bh"},"content":"    @Test","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"V1T0bh"},"content":"    public void sortInternships_sortDescending_expectedOutcome() throws InternityException {","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"V1T0bh"},"content":"        Internship older \u003d new Internship(\"OlderCo\", \"Dev\", new Date(1, 6, 2024), 0);","lastModifiedDate":"2025-10-20T23:25:19","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"V1T0bh"},"content":"        Internship newer \u003d new Internship(\"NewerCo\", \"Dev\", new Date(1, 1, 2025), 0);","lastModifiedDate":"2025-10-20T23:25:19","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(older);","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.add(newer);","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"V1T0bh"},"content":"        InternshipList.sortInternships(ListCommand.orderType.DESCENDING); // descending","lastModifiedDate":"2025-10-21T00:40:12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"V1T0bh"},"content":"        assertEquals(\"NewerCo\", InternshipList.get(0).getCompany());","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"V1T0bh"},"content":"        assertEquals(\"OlderCo\", InternshipList.get(1).getCompany());","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-20T22:18:44","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-10-12T01:28:04","isFullCredit":false}],"authorContributionMap":{"Joannaj00":121,"V1T0bh":100}},{"path":"src/test/java/internity/core/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenyAlbatross"},"content":"package internity.core;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BenyAlbatross"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BenyAlbatross"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BenyAlbatross"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BenyAlbatross"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BenyAlbatross"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BenyAlbatross"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BenyAlbatross"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BenyAlbatross"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BenyAlbatross"},"content":"import java.util.List;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BenyAlbatross"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BenyAlbatross"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BenyAlbatross"},"content":"class StorageTest {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BenyAlbatross"},"content":"    @TempDir","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BenyAlbatross"},"content":"    Path tempDir;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BenyAlbatross"},"content":"    private Storage storage;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BenyAlbatross"},"content":"    private String testFilePath;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BenyAlbatross"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BenyAlbatross"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BenyAlbatross"},"content":"    private ByteArrayOutputStream outContent;","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BenyAlbatross"},"content":"    private ByteArrayOutputStream errContent;","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BenyAlbatross"},"content":"    @BeforeEach","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BenyAlbatross"},"content":"    void setUp() {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BenyAlbatross"},"content":"        testFilePath \u003d tempDir.resolve(\"test_internships.txt\").toString();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BenyAlbatross"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BenyAlbatross"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BenyAlbatross"},"content":"        errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BenyAlbatross"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BenyAlbatross"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BenyAlbatross"},"content":"    @AfterEach","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BenyAlbatross"},"content":"    void restoreStreams() {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BenyAlbatross"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BenyAlbatross"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BenyAlbatross"},"content":"    void save_emptyList_createsEmptyFile() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(Files.exists(Path.of(testFilePath)));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(0, lines.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BenyAlbatross"},"content":"    void save_singleInternship_writesCorrectFormat() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BenyAlbatross"},"content":"        Internship internship \u003d new Internship(\"Google\", \"SWE\", new Date(15, 3, 2025), 6000);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(internship);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, lines.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google | SWE | 15-03-2025 | 6000 | Pending\", lines.get(0));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BenyAlbatross"},"content":"    void save_multipleInternships_writesAllEntries() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(new Internship(\"Google\", \"SWE\", new Date(15, 3, 2025), 6000));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(new Internship(\"Meta\", \"Data Scientist\", new Date(20, 4, 2025), 7000));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(new Internship(\"Amazon\", \"DevOps\", new Date(1, 5, 2025), 5500));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(3, lines.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google | SWE | 15-03-2025 | 6000 | Pending\", lines.get(0));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Meta | Data Scientist | 20-04-2025 | 7000 | Pending\", lines.get(1));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon | DevOps | 01-05-2025 | 5500 | Pending\", lines.get(2));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BenyAlbatross"},"content":"    void save_withCustomStatus_preservesStatus() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BenyAlbatross"},"content":"        Internship internship \u003d new Internship(\"Tesla\", \"ML Engineer\", new Date(10, 6, 2025), 8000);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BenyAlbatross"},"content":"        internship.setStatus(\"Accepted\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(internship);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(internships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BenyAlbatross"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(testFilePath));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, lines.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(lines.get(0).endsWith(\"Accepted\"));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BenyAlbatross"},"content":"    /**","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BenyAlbatross"},"content":"     * Tests that save() creates multiple levels of missing parent directories.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BenyAlbatross"},"content":"     * Uses nested path (data/nested/) to verify Storage uses Files.createDirectories()","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BenyAlbatross"},"content":"     * which creates all missing parents, not Files.createDirectory() which would fail.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BenyAlbatross"},"content":"     * While the app only needs one level (./data/), this tests robustness for any path.","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BenyAlbatross"},"content":"     */","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BenyAlbatross"},"content":"    void save_nonExistentDirectory_createsDirectory() throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BenyAlbatross"},"content":"        String nestedPath \u003d tempDir.resolve(\"data/nested/internships.txt\").toString();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BenyAlbatross"},"content":"        Storage nestedStorage \u003d new Storage(nestedPath);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BenyAlbatross"},"content":"        internships.add(new Internship(\"Apple\", \"iOS Dev\", new Date(5, 7, 2025), 7500));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BenyAlbatross"},"content":"        nestedStorage.save(internships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(Files.exists(Path.of(nestedPath)));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BenyAlbatross"},"content":"    void load_nonExistentFile_returnsEmptyList() throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BenyAlbatross"},"content":"        String nonExistentPath \u003d tempDir.resolve(\"does_not_exist.txt\").toString();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BenyAlbatross"},"content":"        Storage nonExistentStorage \u003d new Storage(nonExistentPath);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d nonExistentStorage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(0, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BenyAlbatross"},"content":"    void load_emptyFile_returnsEmptyList() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BenyAlbatross"},"content":"        Files.createFile(Path.of(testFilePath));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(0, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BenyAlbatross"},"content":"    void load_validSingleEntry_loadsCorrectly() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"SWE\", internships.get(0).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(6000, internships.get(0).getPay());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Pending\", internships.get(0).getStatus());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BenyAlbatross"},"content":"    void load_multipleValidEntries_loadsAll() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 20-04-2025 | 7000 | Accepted\\n\"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(3, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BenyAlbatross"},"content":"        // Verify first entry completely","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"SWE\", internships.get(0).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(6000, internships.get(0).getPay());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Pending\", internships.get(0).getStatus());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BenyAlbatross"},"content":"        // Verify second entry completely","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Meta\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Data Scientist\", internships.get(1).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(7000, internships.get(1).getPay());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Accepted\", internships.get(1).getStatus());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BenyAlbatross"},"content":"        // Verify third entry completely","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(2).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"DevOps\", internships.get(2).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(5500, internships.get(2).getPay());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Rejected\", internships.get(2).getStatus());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BenyAlbatross"},"content":"    void load_fewerFields_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 20-04-2025\\n\"  // Missing pay and status","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with invalid number of fields:\"));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BenyAlbatross"},"content":"    void load_invalidPayFormat_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 20-04-2025 | NotANumber | Accepted\\n\"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with invalid pay format\"));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"BenyAlbatross"},"content":"    void load_negativePay_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 20-04-2025 | -1000 | Accepted\\n\"  // Negative pay","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with negative pay amount\"));","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"BenyAlbatross"},"content":"    void load_invalidStatus_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 20-04-2025 | 7000 | InvalidStatus\\n\"  // Invalid status","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with invalid status\"));","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"BenyAlbatross"},"content":"    void load_invalidDateFormat_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 2025/04/20 | 7000 | Accepted\\n\"  // Wrong date format","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"BenyAlbatross"},"content":"        String stderr \u003d errContent.toString();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"BenyAlbatross"},"content":"        String expectedError \u003d \"Warning: Skipped line - Invalid date format. \"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Expected dd-MM-yyyy (e.g. 08-10-2025):\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(stderr.contains(expectedError));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"BenyAlbatross"},"content":"    void load_impossibleDate_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 31-02-2025 | 7000 | Accepted\\n\"  // Feb 31 doesn\u0027t exist","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"BenyAlbatross"},"content":"        String stderr \u003d errContent.toString();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"BenyAlbatross"},"content":"        String expectedError \u003d \"Warning: Skipped line - Invalid date format. \"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Expected dd-MM-yyyy (e.g. 08-10-2025):\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(stderr.contains(expectedError));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"BenyAlbatross"},"content":"    void load_nonNumericDate_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta | Data Scientist | 1a-03-2025 | 7000 | Accepted\\n\"  // Contains \u0027a\u0027 in day","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"BenyAlbatross"},"content":"        String stderr \u003d errContent.toString();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"BenyAlbatross"},"content":"        String expectedError \u003d \"Warning: Skipped line - Invalid date format. \"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Expected dd-MM-yyyy (e.g. 08-10-2025):\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(stderr.contains(expectedError));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"BenyAlbatross"},"content":"    void load_zeroPay_loadsCorrectly() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE Intern | 15-03-2025 | 0 | Pending\\n\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, internships.size());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"SWE Intern\", internships.get(0).getRole());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(0, internships.get(0).getPay());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Pending\", internships.get(0).getStatus());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"BenyAlbatross"},"content":"    void load_emptyCompany_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"BenyAlbatross"},"content":"                + \" | Data Scientist | 20-04-2025 | 7000 | Accepted\\n\"  // Empty company","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with empty company or role\"));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"BenyAlbatross"},"content":"    void load_emptyRole_skipsLine() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE | 15-03-2025 | 6000 | Pending\\n\"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Meta |  | 20-04-2025 | 7000 | Accepted\\n\"  // Empty role","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"BenyAlbatross"},"content":"                + \"Amazon | DevOps | 01-05-2025 | 5500 | Rejected\\n\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, internships.size());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Amazon\", internships.get(1).getCompany());","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with empty company or role\"));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"BenyAlbatross"},"content":"    void load_extraFields_loadsFirstFiveFields() throws InternityException, IOException {","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"BenyAlbatross"},"content":"        String content \u003d \"Google | SWE | 15-03-2025 | 6000 | Pending | Extra | MoreExtra\\n\";","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), content);","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"BenyAlbatross"},"content":"        assertTrue(errContent.toString().contains(\"Warning: Skipped line with invalid number of fields\"));","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-22T14:19:16","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"BenyAlbatross"},"content":"    void saveAndLoad_roundTrip_preservesData() throws InternityException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e originalInternships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"BenyAlbatross"},"content":"        originalInternships.add(new Internship(\"Google\", \"SWE\", new Date(15, 3, 2025), 6000));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"BenyAlbatross"},"content":"        originalInternships.add(new Internship(\"Meta\", \"Data Scientist\", new Date(20, 4, 2025), 7000));","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"BenyAlbatross"},"content":"        originalInternships.get(1).setStatus(\"Accepted\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"BenyAlbatross"},"content":"        storage.save(originalInternships);","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e loadedInternships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(2, loadedInternships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", loadedInternships.get(0).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"SWE\", loadedInternships.get(0).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(6000, loadedInternships.get(0).getPay());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Pending\", loadedInternships.get(0).getStatus());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Meta\", loadedInternships.get(1).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Accepted\", loadedInternships.get(1).getStatus());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"BenyAlbatross"},"content":"    void load_extraWhitespace_trimsCorrectly() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath), \"  Google  |  SWE  |  15-03-2025  |  6000  |  Pending  \\n\");","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Google\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"SWE\", internships.get(0).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"BenyAlbatross"},"content":"    @Test","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"BenyAlbatross"},"content":"    void load_multiWordFields_loadsCorrectly() throws InternityException, IOException {","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"BenyAlbatross"},"content":"        Files.writeString(Path.of(testFilePath),","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"BenyAlbatross"},"content":"                \"Jane Street | Quantitative Researcher | 25-12-2025 | 10000 | Interviewing\\n\");","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"BenyAlbatross"},"content":"        ArrayList\u003cInternship\u003e internships \u003d storage.load();","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"BenyAlbatross"},"content":"","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(1, internships.size());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Jane Street\", internships.get(0).getCompany());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Quantitative Researcher\", internships.get(0).getRole());","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"BenyAlbatross"},"content":"        assertEquals(\"Interviewing\", internships.get(0).getStatus());","lastModifiedDate":"2025-10-17T22:56:56","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"BenyAlbatross"},"content":"    }","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"BenyAlbatross"},"content":"}","lastModifiedDate":"2025-10-17T13:43:02","isFullCredit":false}],"authorContributionMap":{"BenyAlbatross":383}},{"path":"src/test/java/internity/utils/DateFormatterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lukeai-tan"},"content":"package internity.utils;","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-10-08T23:33:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-10-08T23:33:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lukeai-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-10-08T23:33:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lukeai-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.Date;","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lukeai-tan"},"content":"import internity.core.InternityException;","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lukeai-tan"},"content":"class DateFormatterTest {","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lukeai-tan"},"content":"    void parse_validDateFormat_dateObjectCreated() throws InternityException {","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"08-10-2025\";","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lukeai-tan"},"content":"        Date parsedDate \u003d DateFormatter.parse(input);","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lukeai-tan"},"content":"        assertNotNull(parsedDate, \"Resulting Date object should not be null\");","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(8, parsedDate.getDay(), \"Day should match input\");","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(10, parsedDate.getMonth(), \"Month should match input\");","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(2025, parsedDate.getYear(), \"Year should match input\");","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lukeai-tan"},"content":"    void parse_invalidDateFormat_throwsException() {","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"2025-10-08\";","lastModifiedDate":"2025-10-09T10:32:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lukeai-tan"},"content":"        InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e DateFormatter.parse(input),","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lukeai-tan"},"content":"                \"Expected parse() to throw exception, but it did not\"","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lukeai-tan"},"content":"                \"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\",","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lukeai-tan"},"content":"                thrown.getMessage()","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lukeai-tan"},"content":"    void parse_nonNumericalInput_throwsException() {","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"ab-cd-efgh\";","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lukeai-tan"},"content":"        InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e DateFormatter.parse(input),","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lukeai-tan"},"content":"                \"Expected parse() to throw exception, but it did not\"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lukeai-tan"},"content":"                \"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\",","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lukeai-tan"},"content":"                thrown.getMessage()","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lukeai-tan"},"content":"    void parse_mixedAlphaNumericalInput_throwsException() {","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \"12-xx-2025\";","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lukeai-tan"},"content":"        InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e DateFormatter.parse(input),","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lukeai-tan"},"content":"                \"Expected parse() to throw exception, but it did not\"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lukeai-tan"},"content":"                \"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\",","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lukeai-tan"},"content":"                thrown.getMessage()","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lukeai-tan"},"content":"    void parse_blankInput_throwsException() {","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lukeai-tan"},"content":"        String input \u003d \" \";","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lukeai-tan"},"content":"        InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lukeai-tan"},"content":"                InternityException.class,","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lukeai-tan"},"content":"                () -\u003e DateFormatter.parse(input),","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lukeai-tan"},"content":"                \"Expected parse() to throw exception, but it did not\"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lukeai-tan"},"content":"        );","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lukeai-tan"},"content":"        assertEquals(\"Input cannot be null or blank\", thrown.getMessage());","lastModifiedDate":"2025-10-08T22:58:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T22:51:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lukeai-tan"},"content":"    @Test","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lukeai-tan"},"content":"    void parse_impossibleDates_throwsException() {","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lukeai-tan"},"content":"        String[] inputs \u003d {","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lukeai-tan"},"content":"            \"31-02-2025\", // February has max 28 days in 2025, so date is invalid","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lukeai-tan"},"content":"            \"29-02-2023\", // 2023 is not a leap year, so Feb 29 is invalid","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lukeai-tan"},"content":"            \"99-99-2025\", // Month 99 and day 99 are invalid","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lukeai-tan"},"content":"            \"00-01-2025\", // Day 0 is invalid","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lukeai-tan"},"content":"            \"01-00-2025\", // Month 0 is invalid","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lukeai-tan"},"content":"            \"32-01-2025\"  // January has max 31 days, so date is invalid","lastModifiedDate":"2025-10-09T10:32:23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lukeai-tan"},"content":"        };","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lukeai-tan"},"content":"        for (String input : inputs) {","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lukeai-tan"},"content":"            InternityException thrown \u003d assertThrows(","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lukeai-tan"},"content":"                    InternityException.class,","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lukeai-tan"},"content":"                    () -\u003e DateFormatter.parse(input),","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lukeai-tan"},"content":"                    \"Expected parse() to throw for input: \" + input","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lukeai-tan"},"content":"            );","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lukeai-tan"},"content":"","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lukeai-tan"},"content":"            assertEquals(","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BenyAlbatross"},"content":"                    \"Invalid date format. Expected dd-MM-yyyy (e.g. 08-10-2025)\",","lastModifiedDate":"2025-10-22T19:05:14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lukeai-tan"},"content":"                    thrown.getMessage(),","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lukeai-tan"},"content":"                    \"Message mismatch for input: \" + input","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lukeai-tan"},"content":"            );","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lukeai-tan"},"content":"        }","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lukeai-tan"},"content":"    }","lastModifiedDate":"2025-10-08T23:24:10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lukeai-tan"},"content":"}","lastModifiedDate":"2025-10-08T22:46:06","isFullCredit":false}],"authorContributionMap":{"lukeai-tan":109,"BenyAlbatross":1}}]
